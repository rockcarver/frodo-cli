// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CLI help interface for 'config export' should be expected english 1`] = `
"Usage: frodo config export [options] [host] [realm] [username] [password]

Export full cloud configuration.
By default, it only exports importable config (i.e. config that is not
read-only) for the current deployment (e.g. if exporting from cloud, realm
config would NOT be exported since it can't be imported back into cloud even
though it can be imported into classic deployments). There is a flag to export
all config including read only config.
Additionally, there is a flag to export config for only the specified realm, a
flag to export only global config, and many other flags to customize the
export. Use the -h or --help to see them all and to also see usage examples.

Arguments:
  host                                 AM base URL, e.g.:
                                       https://cdk.iam.example.com/am. To use a
                                       connection profile, just specify a
                                       unique substring.
  realm                                Realm. Specify realm as '/' for the root
                                       realm or 'realm' or '/parent/child'
                                       otherwise. (default: "alpha" for
                                       Identity Cloud tenants, "/" otherwise.)
  username                             Username to login with. Must be an admin
                                       user with appropriate rights to manage
                                       authentication journeys/trees.
  password                             Password.

Options:
  -a, --all                            Export everything to a single file.
  -A, --all-separate                   Export everything to separate files in
                                       the -D directory. Ignored with -a.
  --curlirize                          Output all network calls in curl format.
  -d, --default                        Export all scripts including the default
                                       scripts.
  -D, --directory <directory>          Set the working directory.
  --debug                              Debug output during command execution.
                                       If specified, may or may not produce
                                       additional output helpful for
                                       troubleshooting.
  -f, --file <file>                    Name of the export file.
  --flush-cache                        Flush token cache.
  -g, --global-only                    Export only the global config. If -r,
                                       --realm-only is also active, then the
                                       corresponding active realm config will
                                       also be exported.
  -h, --help                           Help
  --idm-host <idm-host>                IDM base URL, e.g.:
                                       https://cdk.idm.example.com/myidm. Use
                                       only if your IDM installation resides in
                                       a different domain and/or if the base
                                       path differs from the default
                                       "/openidm".
  --include-active-values              Include the currently active (and
                                       loaded) secret value in the export. By
                                       default, secret values are encrypted
                                       server-side in the environment they are
                                       exported from. Use --target <host url>
                                       to have another environment perform the
                                       encryption.
  -k, --insecure                       Allow insecure connections when using
                                       SSL/TLS. Has no effect when using a
                                       network proxy for https
                                       (HTTPS_PROXY=http://<host>:<port>), in
                                       that case the proxy must provide this
                                       capability. (default: Don't allow
                                       insecure connections)
  --login-client-id <client-id>        Specify a custom OAuth2 client id to use
                                       a your own oauth2 client for IDM API
                                       calls in deployments of type "cloud" or
                                       "forgeops". Your custom client must be
                                       configured as a public client and allow
                                       the authorization code grant using the
                                       "openid fr:idm:*" scope. Use the
                                       "--redirect-uri" parameter if you have
                                       configured a custom redirect uri
                                       (default:
                                       "<host>/platform/appAuthHelperRedirect.html").
  --login-redirect-uri <redirect-uri>  Specify a custom redirect URI to use
                                       with your custom OAuth2 client (efault:
                                       "<host>/platform/appAuthHelperRedirect.html").
  -m, --type <type>                    Override auto-detected deployment type.
                                       Valid values for type:
                                       classic:  A classic Access
                                       Management-only deployment with custom
                                       layout and configuration.
                                       cloud:    A ForgeRock Identity Cloud
                                       environment.
                                       forgeops: A ForgeOps CDK or CDM
                                       deployment.
                                       The detected or provided deployment type
                                       controls certain behavior like obtaining
                                       an Identity Management admin token or
                                       not and whether to export/import
                                       referenced email templates or how to
                                       walk through the tenant admin login flow
                                       of Identity Cloud and handle MFA
                                       (choices: "classic", "cloud",
                                       "forgeops")
  -N, --no-metadata                    Does not include metadata in the export
                                       file.
  --no-cache                           Disable token cache for this operation.
  --no-coords                          Do not include the x and y coordinate
                                       positions of the journey/tree nodes.
  --no-decode                          Do not include decoded variable value in
                                       variable export
  -o, --separate-objects               Export managed.idm.json objects
                                       separately in their own directory.
                                       Ignored with -a.
  -r, --realm-only                     Export only the config for the active
                                       realm. If -g, --global-only is also
                                       active, then the global config will also
                                       be exported.
  -R, --read-only                      Export read-only config (with the
                                       exception of default scripts) in
                                       addition to the importable config.
  -s, --separate-mappings              Export sync.idm.json mappings separately
                                       in their own directory. Ignored with -a.
  --sa-id <sa-id>                      Service account id.
  --sa-jwk-file <file>                 File containing the JSON Web Key (JWK)
                                       associated with the the service account.
  --target <host url>                  Host URL of the environment to perform
                                       secret value encryption. The URL must
                                       resolve to an existing connection
                                       profile. Use this option to generate an
                                       export that can be imported into the
                                       target environment without requiring
                                       admin access to the source environment.
  --use-string-arrays                  Where applicable, use string arrays to
                                       store multi-line text (e.g. scripts).
                                       (default: off)
  --verbose                            Verbose output during command execution.
                                       If specified, may or may not produce
                                       additional output.
  -x, --extract                        Extract scripts and server properties
                                       from the exported file, and save it to a
                                       separate file. Ignored with -a.

Environment Variables:
  FRODO_HOST: AM base URL. Overridden by 'host' argument.
  FRODO_IDM_HOST: IDM base URL. Overridden by '--idm-host' option.
  FRODO_REALM: Realm. Overridden by 'realm' argument.
  FRODO_USERNAME: Username. Overridden by 'username' argument.
  FRODO_PASSWORD: Password. Overridden by 'password' argument.
  FRODO_LOGIN_CLIENT_ID: OAuth2 client id for IDM API calls. Overridden by '--login-client-id' option.
  FRODO_LOGIN_REDIRECT_URI: Redirect Uri for custom OAuth2 client id. Overridden by '--login-redirect-uri' option.
  FRODO_SA_ID: Service account uuid. Overridden by '--sa-id' option.
  FRODO_SA_JWK: Service account JWK. Overridden by '--sa-jwk-file' option but takes the actual JWK as a value, not a file name.
  FRODO_NO_CACHE: Disable token cache. Same as '--no-cache' option.
  FRODO_TOKEN_CACHE_PATH: Use this token cache file instead of '~/.frodo/TokenCache.json'.
  FRODO_CONNECTION_PROFILES_PATH: Use this connection profiles file instead of '~/.frodo/Connections.json'.
  FRODO_AUTHENTICATION_SERVICE: Name of a login journey to use.
  FRODO_DEBUG: Set to any value to enable debug output. Same as '--debug'.
  FRODO_MASTER_KEY_PATH: Use this master key file instead of '~/.frodo/masterkey.key' file.
  FRODO_MASTER_KEY: Use this master key instead of what's in '~/.frodo/masterkey.key'. Takes precedence over FRODO_MASTER_KEY_PATH.

[92mHow Frodo handles secrets:
[39m[92m  Frodo supports exporting and importing of ESV secret values. To leave stuartship of secret values with the cloud environment where they belong, frodo always encrypts values using either encryption keys from the source environment (default) or the target environment (--target parameter). Frodo never exports secrets in the clear.

[39mUsage Examples:
  Export global and realm configuration for version control (e.g. Git) into the current directory.
  Note that -x and -s separates script and mapping config to better track changes made to them, and -N removes metadata since it changes every export (you may consider using --no-coords as well if you don't care to track node positions in journeys):
[96m  $ frodo config export -sxAND . matrix
[39m  Export global and realm configuration from cloud to be later imported into a classic, on-prem deployment.
  Note -dR is used for exporting all read-only config from cloud since certain cloud read-only config (like the realm config) can be imported into a classic on-prem deployment:
[96m  $ frodo config export -adR matrix
[39m  Export only the bravo realm configuration:
[96m  $ frodo config export -ar matrix bravo
[39m  Backup global and realm configuration including active secret values to a single file (Note: only values of active and loaded secrets can be exported):
[96m  $ frodo config export -a --include-active-values matrix
[39m  Backup global and realm configuration including active secret values to individual files in a directory structure (Note: only values of active and loaded secrets can be exported):
[96m  $ frodo config export -A -D matrix-backup --include-active-values matrix
[39m  Export global and realm configuration including active secret values for import into another environment.
  The --target parameter instructs frodo to encrypt the exported secret values using the target environment so they can be imported into that target environment without requiring the source environment they were exported from.
  Using the --target parameter, the target environment must be available at the time of export and the person performing the export must have a connection profile for the target environment.
  Without the --target parameter, the source environment must be available at the time of import and the person performing the import must have a connection profile for the source environment.
[96m  $ frodo config export -a --include-active-values --target zion matrix
[39m
"
`;
