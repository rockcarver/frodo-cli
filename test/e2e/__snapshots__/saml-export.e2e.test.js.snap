// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo saml export "frodo saml export --all --file my-allAlphaProviders.saml.json": should export all saml providers to a single file named my-allAlphaProviders.saml.json 1`] = `""`;

exports[`frodo saml export "frodo saml export --all --file my-allAlphaProviders.saml.json": should export all saml providers to a single file named my-allAlphaProviders.saml.json: my-allAlphaProviders.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPAzure",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPAzure",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {
              "enabled": false,
            },
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "key": "service",
                  "level": 0,
                  "value": "Login",
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": false,
                "authenticationRequest": false,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": true,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail",
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
            },
            "localConfiguration": {
              "authUrl": "",
            },
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure",
              },
            ],
            "metaAlias": "/alpha/IDPAzure",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPBroadcom",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPBroadcom",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "metaAlias": "/alpha/IDPBroadcom",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPFedlet",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPFedlet",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet",
              },
            ],
            "metaAlias": "/alpha/IDPFedlet",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
            },
          },
        },
      },
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "VGhlRXhwYW5zZS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="TheExpanse-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEHpQM4TANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIzMDIwNzIzNTU0NloXDTMzMDIwNDIzNTU0NlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKne2LjuCbctylgfVS5cd8krycSBoW3KNUZ+2M5Kh9fsC7Zd/JusscmubOoSYWzP",
        "7hN+ptIU0uTUnowClbwAXOVixzNMDXnOqV0MJDoa3TnKUTVmab0GlZOte5bbYxgRbLmtsPBd3NbJ",
        "UHLg/e2sGWr+AjyUEDZyKjhodWNxzHKPYc2FKFLeZYXo8lKekJmUsMynZms7oA/vu93OldGezat9",
        "SI14mvRtGbtTNo9pnc10HcZkr8VMB50nSYL5RHFACDZ5HuOEcTB/vz045OZA7mkeJ3VnOAx/P7EP",
        "vF2ObI7dzmYYOGOor1DxMAICeKRo7sv7uOQKHrJfDQLH9xuqOHUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FFHUu7XhJnNpwj0qWPar7kx6YzG6MA0GCSqGSIb3DQEBCwUAA4IBAQA8E+DsEmXJAdU+RA57hNOP",
        "eQt8xTQV/q/dkQaQQUm5JZWCDec7r6hSvHJXLLTI6lXagUhXVGrQHdTbvj/pacAN1mozbqKh956p",
        "VL0NmgX/FCFgxswo4rcx2tPsHJp8cUMzhjK/K/gW9Oye2z6Lk+MHrWpGwXMVTPv8h+L+KTit4nu6",
        "B/YZ4Gwm/2ItEnSalOn1uFNMtnqUyXDp3olshDQaHq8FS3lHSTarPRS4V/RKA1jS/lBts+4k9GDS",
        "ignCXw3tBeZY0pIY22vNYMPPgQrwdf4qUz3KsQDEKEHnJu4x++bwrnLwCg9C47xXtts3Di286T2z",
        "8qSNTFLCRm8cIO1z",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIENAPNKDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIzMDIwNzIzNTU0N1oXDTMzMDIwNDIzNTU0N1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/A5mJQmxAHMKoXVzJK",
        "TmDuBfAnXo/6rveyRh7KOhqKRhd8ZtUihY7ypXKAYTqQQMDarUlMg0ETvRVjoUBXIkRiM4gsqYxv",
        "XRtWCkq/2KswDONYASxZ7TjG67tudBx/8hbzM/FHTQH74p0IGKGIX5MhTXDXyQ6xHiIoUfUtcskU",
        "PmyTo0dZI4ipc5ut2xCvcldaO9rTX+O9YHiVeMxlRxmu1qfwFX3+/zpdu6f2+l9Qs2WXoaMz3CiY",
        "JIinAqVvuU4ZL4C+SJSxVErYj8FYb6vW/ok71UCG8Ur/S+8PDDPzFntr9d7Lu4JAbhw3NGgVcRCu",
        "obU0gtHaii7Z+yE4iLECAwEAAaMhMB8wHQYDVR0OBBYEFBB/77MBgspDS0zl6vaMwTktOSF4MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQB+sN2cZpEXg8JjDRXKqXluiEMoxMGB4xIcSkuuQt2lH/cRp/qy/vyI",
        "9J3lXnOD875z0KgXHEhKEyMobTMercEQGfR7Z/wJVvgDm4IwDaQlgeSoqBE2Zyg1k8ETpsZs583E",
        "CbzRp+gHKfP61OzQeT/wOs4oJXtLHE3HAxaM51gnY5EfXiGvPwNbPjJpEgRu3CW5N+6VYAFJuOws",
        "QAj9lpOLcz5ja2tg8f8XextIApfsaTKEf/PmLbu0kfUwjcI/8sblOSRQZAQmzNIyhBcl/gP/gaSh",
        "Do9JsJMGfVeJjtPCV5W0+H89cghxH4RtxYjoaXANCtGJ4c2MiZywj4OEu/dh",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPBroadcom" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPFedlet" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/" ID="_e5f839b8-1482-40ae-9261-b6eb35465a16" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQZzae6CymcZhG5gxIgB7mMDANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTAzMzEyMDI0",
        "MTdaFw0yNDAzMzEyMDI0MTdaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv62V9U2Wi8gr",
        "arSBp7s4Bupke9vaXsNOgNZ8Vn/i0mo6Jn0E1HmJ6uIy+QeahQDtxFQyoEW1LeLGBeVwvUvOfSwf",
        "wPBEHLw9g3F84IdgfIWtezj87BHh3ezwb0r/0Eny3xHcS02wQsIFRIhn7ltCaMFrTja18gBapuRl",
        "36Ujfod7W1uL1HJTsw8auKXYEhutbeQYpdU6qcPaksJd1r16q+Jc78MHptKMWSNI1OnB9jK8hr/3",
        "aug+LSeuJScaJQZDo/qKDmoIC6KT6CgfzUy33I/gjU6RjVcwNw4XFpk5ad13HXTtfCLtPtMxGYuk",
        "cOxX3M80EJMLFr2sJO0vJbA8aQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8GmsA4N5KDQ79v+/1",
        "zVFq8domQYZm8wEAIHn4+T02IluDa9Ty/EqgFzvqAZUILQneFrGCh9uIub/Z3NtkIgs2gbAduxdn",
        "hzdwhNRNivks4P0CO+9Q1iK/xOsmWo12xsyB4lyAv7HsF+COIPFGhRfzsCxVFKfU8x2r+bb8kWLM",
        "YpA2NDlz+MTXQEWhFtCLwQRjHlD6C5+yzqoAFBO7RR28mztTF0nVbKj7N+Ri5VLEKJospkwUDtIH",
        "dcp2bSVwhziAIn05yiw6AVIZnje7cN+kJdCIDgqQ+Ebb96C/Y0JmYvz6sJVP0/u5oR5PrsQqBrw4",
        "OzVWNFaXuTcN3UicN01V",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQfU4A0Hnj17dI0GSzvUwMZTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA2MDYwMTQy",
        "MzBaFw0yNDA2MDYwMTQyMzBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+fFmS+eVDho",
        "FhlYoY1vRkJIblLct3ZT/sT5AmIoCEGxXBeiSCwnSCveXEfrqEHmjlT5qni5spO+OmX7GrLeytHk",
        "hl3O6XiXyVBlvyTSFd/bLHR2DqdxbUxUs2E7WfwQyq9Ob9i3++4fRIPFw+JcZ99ouZasHn2BJvWh",
        "liT7yRtYhvwboc8BwWveL70ZJqsCJnlOKQVIccCdNbQe6HleePXgFB4pRge46zmqKVeEpLbBRqgj",
        "Yf7EkhBJjx0WY2zMW7DLHDCZEY6VS2Kf9gJpGntNSLe0gXydBFtaFPgyaKIVswZ5hY1oRDPHEXEJ",
        "+a5TVRGLeTlyK0v9Y+c8d3XdoQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBZ5lcYpe13quossxB7",
        "L2Y1E7hpy7AZgWr/OGYi/tUh1pJ4++3uZvHJLtTfXc7V+Y5EG6LRq9HZyF0hSvubhYkDXlwYbF7U",
        "/osQjTe1tffPWO3bwzcrBVz7ytvb7DyvikI3C0f3LaCgEwxwYCD33IowNQS/IJA7W/kiFb/7q/Qu",
        "7T/gDL1RjYdm9WmYW3RNn0Kh1VDBiCfY739xpCwdH11OUQfVc+9Z2KSSQY7EAlVgwpq+UiVdOqY9",
        "m4cqul7uvjiSTgG0h5RW9xi3a6Lilk1TxsQUu4tRnGsDCAFgkgLN5rNnlQULuahzruoXWqe4g6pn",
        "Ritpy6bwva8piGPKhVi/",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aWRw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="idp" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEAxJ36DANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDcwODIyNDAyMloXDTMyMDcwNTIyNDAyMlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKSsGxtvBW0YxWTZ+lWGoSAOMgFI6dkUIZ+6NJ7SWp5nO5bOBVAd6/c9xZvhSXkF",
        "Gz3iL0EI9WLaIf6xKsHlxUz0exFE0jzb7EMDyYD/kHNDBM5a+rMEo+f/YjP5ADjkzNy6Zt9Ll0Uq",
        "yO+LHLcXARE0ts2/2XckmZdSwkXuQdN1yN4lFif5Kj3cuqRHsqfwchxuKiV9BQHq8Jx1ACYcpbkV",
        "VkDvC6awk61He9CgwJHbNKTdqU3sKGiZWz8Mz7TAvM2I/LLfsdSZXXLnA7C5EOPVVJ/RLs7sJuVm",
        "M0KUQOjf3TNJAjBULVDaCtmcANMnZCvXyuI4EvfuW/iuqGCqG9ECAwEAAaMhMB8wHQYDVR0OBBYE",
        "FAxLR/y+kv5fcM3bLHczhhKgPjABMA0GCSqGSIb3DQEBCwUAA4IBAQAHCEpuu9ThpTOLoJPnzQts",
        "UK6G7REJh8w1doL4qTeq9oylnWeidvSLNhuowXZS0LyA5YXEm6tyv2NiHDv3DtoP8kBsCOLPVGhE",
        "yoQy01XZYnngGzzqwFDnKJgiV3hNwqM/bGhW19N0AiVLc46iidTJ4+ekTwLxdcgwOob3+JNnio10",
        "XH+f2ncH09Lkqv+7dnUGo/NjMHCcEWJ/2PB/gjbGKAi+m43mRgJz2+BeOOEzeSsDe/n9LYl7/drO",
        "Tf0T+k7dwlE+p0vLID6I+tDI18Bdl2TUUaFCT/D71LvE6qZhrwETJ60+IMyaFWBmZte4VQjhv8f+",
        "EdVaivDEwSH2Enxz",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEB86zjDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDcwODIyNDAyM1oXDTMyMDcwNTIyNDAyM1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIWctGA/i844aSlLy6Sv",
        "g/cHAinfbSlZKSXVzcbFivYC6g9RAUd5L9hrXlT302CAq+prMavGPqPj25g02ADGelVb6XB3CSi4",
        "zN6CxXgWlNXj1NrMrANvpHwPH6n5UYOTUFCOoi4shzIwwQlNHFr5sTxOqEvZNwKSxe45YvhizwwW",
        "S6TPwPNlBP1nfXApI6xz7xzti9m0nAMaeqmGCjWFz9O3Zec46ep5nS/ffKDYKPBo7SRDyqDg3p7g",
        "pAKt0+4XEUiCHALb9qmnhzFWE6r5DkiKDksOHxnMj6vjJ5AvEpyV1gwDKu7cf39+rgldGd5VWEve",
        "J1Xy+A3mFdW+ZOOviB8CAwEAAaMhMB8wHQYDVR0OBBYEFOubn2CikmtO19J8/41QvHuSGnFEMA0G",
        "CSqGSIb3DQEBCwUAA4IBAQCAIIxDwqJqIIL1yBdip/wTPofVkwG533a9QyPoFTDRmjdA2oH2Tf6L",
        "ebsc8DiGocifXLJ3e3dpREWO8dFtdGfwFr0iAeu9rpi15OY62mbjOtEHXnuoesPvaNe0jPOOEcAM",
        "dxRjo1E5ZuZPeTzH/trrBEzZ/hhlqPH326cqx5Id4XDj5WpVGPystWbUCS7v1flZHLCMCGjjFxuq",
        "2cthH1+oRbcZ2UABuPn9twbdC3tPhIYiwrcr4bN9+ATfJAeMgYlW13tLaKjFoBuqqxHjGpdKJFLM",
        "6ci4o71BahFS/8a3lWrFURXjtkoKZ8DZlMgK9GD8wk6O/2YGbihuYQobk2cD",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/idp"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="urn:federation:MicrosoftOnline" ID="_e46a1193-e8a7-48ed-804f-1516729ecb5f" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>",
        "        <alg:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://login.microsoftonline.com/login.srf"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "VGhlRXhwYW5zZS1JRFA": {
        "_id": "VGhlRXhwYW5zZS1JRFA",
        "entityId": "TheExpanse-IDP",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": {
        "_id": "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw",
        "entityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "serviceAttributes": {
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
            },
          },
        },
      },
      "aWRw": {
        "_id": "aWRw",
        "entityId": "idp",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp",
                },
              ],
            },
          },
        },
      },
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3 1`] = `""`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/TheExpanse-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "VGhlRXhwYW5zZS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="TheExpanse-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEHpQM4TANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIzMDIwNzIzNTU0NloXDTMzMDIwNDIzNTU0NlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKne2LjuCbctylgfVS5cd8krycSBoW3KNUZ+2M5Kh9fsC7Zd/JusscmubOoSYWzP",
        "7hN+ptIU0uTUnowClbwAXOVixzNMDXnOqV0MJDoa3TnKUTVmab0GlZOte5bbYxgRbLmtsPBd3NbJ",
        "UHLg/e2sGWr+AjyUEDZyKjhodWNxzHKPYc2FKFLeZYXo8lKekJmUsMynZms7oA/vu93OldGezat9",
        "SI14mvRtGbtTNo9pnc10HcZkr8VMB50nSYL5RHFACDZ5HuOEcTB/vz045OZA7mkeJ3VnOAx/P7EP",
        "vF2ObI7dzmYYOGOor1DxMAICeKRo7sv7uOQKHrJfDQLH9xuqOHUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FFHUu7XhJnNpwj0qWPar7kx6YzG6MA0GCSqGSIb3DQEBCwUAA4IBAQA8E+DsEmXJAdU+RA57hNOP",
        "eQt8xTQV/q/dkQaQQUm5JZWCDec7r6hSvHJXLLTI6lXagUhXVGrQHdTbvj/pacAN1mozbqKh956p",
        "VL0NmgX/FCFgxswo4rcx2tPsHJp8cUMzhjK/K/gW9Oye2z6Lk+MHrWpGwXMVTPv8h+L+KTit4nu6",
        "B/YZ4Gwm/2ItEnSalOn1uFNMtnqUyXDp3olshDQaHq8FS3lHSTarPRS4V/RKA1jS/lBts+4k9GDS",
        "ignCXw3tBeZY0pIY22vNYMPPgQrwdf4qUz3KsQDEKEHnJu4x++bwrnLwCg9C47xXtts3Di286T2z",
        "8qSNTFLCRm8cIO1z",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIENAPNKDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIzMDIwNzIzNTU0N1oXDTMzMDIwNDIzNTU0N1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/A5mJQmxAHMKoXVzJK",
        "TmDuBfAnXo/6rveyRh7KOhqKRhd8ZtUihY7ypXKAYTqQQMDarUlMg0ETvRVjoUBXIkRiM4gsqYxv",
        "XRtWCkq/2KswDONYASxZ7TjG67tudBx/8hbzM/FHTQH74p0IGKGIX5MhTXDXyQ6xHiIoUfUtcskU",
        "PmyTo0dZI4ipc5ut2xCvcldaO9rTX+O9YHiVeMxlRxmu1qfwFX3+/zpdu6f2+l9Qs2WXoaMz3CiY",
        "JIinAqVvuU4ZL4C+SJSxVErYj8FYb6vW/ok71UCG8Ur/S+8PDDPzFntr9d7Lu4JAbhw3NGgVcRCu",
        "obU0gtHaii7Z+yE4iLECAwEAAaMhMB8wHQYDVR0OBBYEFBB/77MBgspDS0zl6vaMwTktOSF4MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQB+sN2cZpEXg8JjDRXKqXluiEMoxMGB4xIcSkuuQt2lH/cRp/qy/vyI",
        "9J3lXnOD875z0KgXHEhKEyMobTMercEQGfR7Z/wJVvgDm4IwDaQlgeSoqBE2Zyg1k8ETpsZs583E",
        "CbzRp+gHKfP61OzQeT/wOs4oJXtLHE3HAxaM51gnY5EfXiGvPwNbPjJpEgRu3CW5N+6VYAFJuOws",
        "QAj9lpOLcz5ja2tg8f8XextIApfsaTKEf/PmLbu0kfUwjcI/8sblOSRQZAQmzNIyhBcl/gP/gaSh",
        "Do9JsJMGfVeJjtPCV5W0+H89cghxH4RtxYjoaXANCtGJ4c2MiZywj4OEu/dh",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "VGhlRXhwYW5zZS1JRFA": {
        "_id": "VGhlRXhwYW5zZS1JRFA",
        "entityId": "TheExpanse-IDP",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/benefits-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/company-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/engineering-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/idc.scheuber.ioamsaml2IDPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPAzure",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPAzure",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {
              "enabled": false,
            },
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "key": "service",
                  "level": 0,
                  "value": "Login",
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": false,
                "authenticationRequest": false,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": true,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail",
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
            },
            "localConfiguration": {
              "authUrl": "",
            },
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure",
              },
            ],
            "metaAlias": "/alpha/IDPAzure",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/idc.scheuber.ioamsaml2IDPBroadcom.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPBroadcom",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPBroadcom",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "metaAlias": "/alpha/IDPBroadcom",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPBroadcom" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/idc.scheuber.ioamsaml2IDPFedlet.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPFedlet",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPFedlet",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet",
              },
            ],
            "metaAlias": "/alpha/IDPFedlet",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPFedlet" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/idp.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "aWRw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="idp" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEAxJ36DANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDcwODIyNDAyMloXDTMyMDcwNTIyNDAyMlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKSsGxtvBW0YxWTZ+lWGoSAOMgFI6dkUIZ+6NJ7SWp5nO5bOBVAd6/c9xZvhSXkF",
        "Gz3iL0EI9WLaIf6xKsHlxUz0exFE0jzb7EMDyYD/kHNDBM5a+rMEo+f/YjP5ADjkzNy6Zt9Ll0Uq",
        "yO+LHLcXARE0ts2/2XckmZdSwkXuQdN1yN4lFif5Kj3cuqRHsqfwchxuKiV9BQHq8Jx1ACYcpbkV",
        "VkDvC6awk61He9CgwJHbNKTdqU3sKGiZWz8Mz7TAvM2I/LLfsdSZXXLnA7C5EOPVVJ/RLs7sJuVm",
        "M0KUQOjf3TNJAjBULVDaCtmcANMnZCvXyuI4EvfuW/iuqGCqG9ECAwEAAaMhMB8wHQYDVR0OBBYE",
        "FAxLR/y+kv5fcM3bLHczhhKgPjABMA0GCSqGSIb3DQEBCwUAA4IBAQAHCEpuu9ThpTOLoJPnzQts",
        "UK6G7REJh8w1doL4qTeq9oylnWeidvSLNhuowXZS0LyA5YXEm6tyv2NiHDv3DtoP8kBsCOLPVGhE",
        "yoQy01XZYnngGzzqwFDnKJgiV3hNwqM/bGhW19N0AiVLc46iidTJ4+ekTwLxdcgwOob3+JNnio10",
        "XH+f2ncH09Lkqv+7dnUGo/NjMHCcEWJ/2PB/gjbGKAi+m43mRgJz2+BeOOEzeSsDe/n9LYl7/drO",
        "Tf0T+k7dwlE+p0vLID6I+tDI18Bdl2TUUaFCT/D71LvE6qZhrwETJ60+IMyaFWBmZte4VQjhv8f+",
        "EdVaivDEwSH2Enxz",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEB86zjDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDcwODIyNDAyM1oXDTMyMDcwNTIyNDAyM1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIWctGA/i844aSlLy6Sv",
        "g/cHAinfbSlZKSXVzcbFivYC6g9RAUd5L9hrXlT302CAq+prMavGPqPj25g02ADGelVb6XB3CSi4",
        "zN6CxXgWlNXj1NrMrANvpHwPH6n5UYOTUFCOoi4shzIwwQlNHFr5sTxOqEvZNwKSxe45YvhizwwW",
        "S6TPwPNlBP1nfXApI6xz7xzti9m0nAMaeqmGCjWFz9O3Zec46ep5nS/ffKDYKPBo7SRDyqDg3p7g",
        "pAKt0+4XEUiCHALb9qmnhzFWE6r5DkiKDksOHxnMj6vjJ5AvEpyV1gwDKu7cf39+rgldGd5VWEve",
        "J1Xy+A3mFdW+ZOOviB8CAwEAAaMhMB8wHQYDVR0OBBYEFOubn2CikmtO19J8/41QvHuSGnFEMA0G",
        "CSqGSIb3DQEBCwUAA4IBAQCAIIxDwqJqIIL1yBdip/wTPofVkwG533a9QyPoFTDRmjdA2oH2Tf6L",
        "ebsc8DiGocifXLJ3e3dpREWO8dFtdGfwFr0iAeu9rpi15OY62mbjOtEHXnuoesPvaNe0jPOOEcAM",
        "dxRjo1E5ZuZPeTzH/trrBEzZ/hhlqPH326cqx5Id4XDj5WpVGPystWbUCS7v1flZHLCMCGjjFxuq",
        "2cthH1+oRbcZ2UABuPn9twbdC3tPhIYiwrcr4bN9+ATfJAeMgYlW13tLaKjFoBuqqxHjGpdKJFLM",
        "6ci4o71BahFS/8a3lWrFURXjtkoKZ8DZlMgK9GD8wk6O/2YGbihuYQobk2cD",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/idp"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aWRw": {
        "_id": "aWRw",
        "entityId": "idp",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/sales-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/sts.windows.net711ffa9c-5972-4713-ace3-688c9732614a.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/" ID="_e5f839b8-1482-40ae-9261-b6eb35465a16" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQZzae6CymcZhG5gxIgB7mMDANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTAzMzEyMDI0",
        "MTdaFw0yNDAzMzEyMDI0MTdaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv62V9U2Wi8gr",
        "arSBp7s4Bupke9vaXsNOgNZ8Vn/i0mo6Jn0E1HmJ6uIy+QeahQDtxFQyoEW1LeLGBeVwvUvOfSwf",
        "wPBEHLw9g3F84IdgfIWtezj87BHh3ezwb0r/0Eny3xHcS02wQsIFRIhn7ltCaMFrTja18gBapuRl",
        "36Ujfod7W1uL1HJTsw8auKXYEhutbeQYpdU6qcPaksJd1r16q+Jc78MHptKMWSNI1OnB9jK8hr/3",
        "aug+LSeuJScaJQZDo/qKDmoIC6KT6CgfzUy33I/gjU6RjVcwNw4XFpk5ad13HXTtfCLtPtMxGYuk",
        "cOxX3M80EJMLFr2sJO0vJbA8aQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8GmsA4N5KDQ79v+/1",
        "zVFq8domQYZm8wEAIHn4+T02IluDa9Ty/EqgFzvqAZUILQneFrGCh9uIub/Z3NtkIgs2gbAduxdn",
        "hzdwhNRNivks4P0CO+9Q1iK/xOsmWo12xsyB4lyAv7HsF+COIPFGhRfzsCxVFKfU8x2r+bb8kWLM",
        "YpA2NDlz+MTXQEWhFtCLwQRjHlD6C5+yzqoAFBO7RR28mztTF0nVbKj7N+Ri5VLEKJospkwUDtIH",
        "dcp2bSVwhziAIn05yiw6AVIZnje7cN+kJdCIDgqQ+Ebb96C/Y0JmYvz6sJVP0/u5oR5PrsQqBrw4",
        "OzVWNFaXuTcN3UicN01V",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQfU4A0Hnj17dI0GSzvUwMZTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA2MDYwMTQy",
        "MzBaFw0yNDA2MDYwMTQyMzBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+fFmS+eVDho",
        "FhlYoY1vRkJIblLct3ZT/sT5AmIoCEGxXBeiSCwnSCveXEfrqEHmjlT5qni5spO+OmX7GrLeytHk",
        "hl3O6XiXyVBlvyTSFd/bLHR2DqdxbUxUs2E7WfwQyq9Ob9i3++4fRIPFw+JcZ99ouZasHn2BJvWh",
        "liT7yRtYhvwboc8BwWveL70ZJqsCJnlOKQVIccCdNbQe6HleePXgFB4pRge46zmqKVeEpLbBRqgj",
        "Yf7EkhBJjx0WY2zMW7DLHDCZEY6VS2Kf9gJpGntNSLe0gXydBFtaFPgyaKIVswZ5hY1oRDPHEXEJ",
        "+a5TVRGLeTlyK0v9Y+c8d3XdoQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBZ5lcYpe13quossxB7",
        "L2Y1E7hpy7AZgWr/OGYi/tUh1pJ4++3uZvHJLtTfXc7V+Y5EG6LRq9HZyF0hSvubhYkDXlwYbF7U",
        "/osQjTe1tffPWO3bwzcrBVz7ytvb7DyvikI3C0f3LaCgEwxwYCD33IowNQS/IJA7W/kiFb/7q/Qu",
        "7T/gDL1RjYdm9WmYW3RNn0Kh1VDBiCfY739xpCwdH11OUQfVc+9Z2KSSQY7EAlVgwpq+UiVdOqY9",
        "m4cqul7uvjiSTgG0h5RW9xi3a6Lilk1TxsQUu4tRnGsDCAFgkgLN5rNnlQULuahzruoXWqe4g6pn",
        "Ritpy6bwva8piGPKhVi/",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": {
        "_id": "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw",
        "entityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "serviceAttributes": {
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --all-separate --directory samlExportTestDir3": should export all saml providers to separate files in the directory samlExportTestDir3: samlExportTestDir3/urnfederationMicrosoftOnline.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="urn:federation:MicrosoftOnline" ID="_e46a1193-e8a7-48ed-804f-1516729ecb5f" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>",
        "        <alg:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://login.microsoftonline.com/login.srf"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export --entity-id iSPAzure": should export the saml provider with entity id "iSPAzure" 1`] = `""`;

exports[`frodo saml export "frodo saml export --entity-id iSPAzure": should export the saml provider with entity id "iSPAzure": iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files 1`] = `""`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: TheExpanse-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "VGhlRXhwYW5zZS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="TheExpanse-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEHpQM4TANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIzMDIwNzIzNTU0NloXDTMzMDIwNDIzNTU0NlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKne2LjuCbctylgfVS5cd8krycSBoW3KNUZ+2M5Kh9fsC7Zd/JusscmubOoSYWzP",
        "7hN+ptIU0uTUnowClbwAXOVixzNMDXnOqV0MJDoa3TnKUTVmab0GlZOte5bbYxgRbLmtsPBd3NbJ",
        "UHLg/e2sGWr+AjyUEDZyKjhodWNxzHKPYc2FKFLeZYXo8lKekJmUsMynZms7oA/vu93OldGezat9",
        "SI14mvRtGbtTNo9pnc10HcZkr8VMB50nSYL5RHFACDZ5HuOEcTB/vz045OZA7mkeJ3VnOAx/P7EP",
        "vF2ObI7dzmYYOGOor1DxMAICeKRo7sv7uOQKHrJfDQLH9xuqOHUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FFHUu7XhJnNpwj0qWPar7kx6YzG6MA0GCSqGSIb3DQEBCwUAA4IBAQA8E+DsEmXJAdU+RA57hNOP",
        "eQt8xTQV/q/dkQaQQUm5JZWCDec7r6hSvHJXLLTI6lXagUhXVGrQHdTbvj/pacAN1mozbqKh956p",
        "VL0NmgX/FCFgxswo4rcx2tPsHJp8cUMzhjK/K/gW9Oye2z6Lk+MHrWpGwXMVTPv8h+L+KTit4nu6",
        "B/YZ4Gwm/2ItEnSalOn1uFNMtnqUyXDp3olshDQaHq8FS3lHSTarPRS4V/RKA1jS/lBts+4k9GDS",
        "ignCXw3tBeZY0pIY22vNYMPPgQrwdf4qUz3KsQDEKEHnJu4x++bwrnLwCg9C47xXtts3Di286T2z",
        "8qSNTFLCRm8cIO1z",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIENAPNKDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIzMDIwNzIzNTU0N1oXDTMzMDIwNDIzNTU0N1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/A5mJQmxAHMKoXVzJK",
        "TmDuBfAnXo/6rveyRh7KOhqKRhd8ZtUihY7ypXKAYTqQQMDarUlMg0ETvRVjoUBXIkRiM4gsqYxv",
        "XRtWCkq/2KswDONYASxZ7TjG67tudBx/8hbzM/FHTQH74p0IGKGIX5MhTXDXyQ6xHiIoUfUtcskU",
        "PmyTo0dZI4ipc5ut2xCvcldaO9rTX+O9YHiVeMxlRxmu1qfwFX3+/zpdu6f2+l9Qs2WXoaMz3CiY",
        "JIinAqVvuU4ZL4C+SJSxVErYj8FYb6vW/ok71UCG8Ur/S+8PDDPzFntr9d7Lu4JAbhw3NGgVcRCu",
        "obU0gtHaii7Z+yE4iLECAwEAAaMhMB8wHQYDVR0OBBYEFBB/77MBgspDS0zl6vaMwTktOSF4MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQB+sN2cZpEXg8JjDRXKqXluiEMoxMGB4xIcSkuuQt2lH/cRp/qy/vyI",
        "9J3lXnOD875z0KgXHEhKEyMobTMercEQGfR7Z/wJVvgDm4IwDaQlgeSoqBE2Zyg1k8ETpsZs583E",
        "CbzRp+gHKfP61OzQeT/wOs4oJXtLHE3HAxaM51gnY5EfXiGvPwNbPjJpEgRu3CW5N+6VYAFJuOws",
        "QAj9lpOLcz5ja2tg8f8XextIApfsaTKEf/PmLbu0kfUwjcI/8sblOSRQZAQmzNIyhBcl/gP/gaSh",
        "Do9JsJMGfVeJjtPCV5W0+H89cghxH4RtxYjoaXANCtGJ4c2MiZywj4OEu/dh",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "VGhlRXhwYW5zZS1JRFA": {
        "_id": "VGhlRXhwYW5zZS1JRFA",
        "entityId": "TheExpanse-IDP",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: benefits-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: company-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: engineering-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: idc.scheuber.ioamsaml2IDPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPAzure",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPAzure",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {
              "enabled": false,
            },
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "key": "service",
                  "level": 0,
                  "value": "Login",
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": false,
                "authenticationRequest": false,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": true,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail",
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
            },
            "localConfiguration": {
              "authUrl": "",
            },
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure",
              },
            ],
            "metaAlias": "/alpha/IDPAzure",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: idc.scheuber.ioamsaml2IDPBroadcom.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPBroadcom",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPBroadcom",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "metaAlias": "/alpha/IDPBroadcom",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPBroadcom" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: idc.scheuber.ioamsaml2IDPFedlet.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPFedlet",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPFedlet",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet",
              },
            ],
            "metaAlias": "/alpha/IDPFedlet",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPFedlet" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: idp.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "aWRw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="idp" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEAxJ36DANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDcwODIyNDAyMloXDTMyMDcwNTIyNDAyMlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKSsGxtvBW0YxWTZ+lWGoSAOMgFI6dkUIZ+6NJ7SWp5nO5bOBVAd6/c9xZvhSXkF",
        "Gz3iL0EI9WLaIf6xKsHlxUz0exFE0jzb7EMDyYD/kHNDBM5a+rMEo+f/YjP5ADjkzNy6Zt9Ll0Uq",
        "yO+LHLcXARE0ts2/2XckmZdSwkXuQdN1yN4lFif5Kj3cuqRHsqfwchxuKiV9BQHq8Jx1ACYcpbkV",
        "VkDvC6awk61He9CgwJHbNKTdqU3sKGiZWz8Mz7TAvM2I/LLfsdSZXXLnA7C5EOPVVJ/RLs7sJuVm",
        "M0KUQOjf3TNJAjBULVDaCtmcANMnZCvXyuI4EvfuW/iuqGCqG9ECAwEAAaMhMB8wHQYDVR0OBBYE",
        "FAxLR/y+kv5fcM3bLHczhhKgPjABMA0GCSqGSIb3DQEBCwUAA4IBAQAHCEpuu9ThpTOLoJPnzQts",
        "UK6G7REJh8w1doL4qTeq9oylnWeidvSLNhuowXZS0LyA5YXEm6tyv2NiHDv3DtoP8kBsCOLPVGhE",
        "yoQy01XZYnngGzzqwFDnKJgiV3hNwqM/bGhW19N0AiVLc46iidTJ4+ekTwLxdcgwOob3+JNnio10",
        "XH+f2ncH09Lkqv+7dnUGo/NjMHCcEWJ/2PB/gjbGKAi+m43mRgJz2+BeOOEzeSsDe/n9LYl7/drO",
        "Tf0T+k7dwlE+p0vLID6I+tDI18Bdl2TUUaFCT/D71LvE6qZhrwETJ60+IMyaFWBmZte4VQjhv8f+",
        "EdVaivDEwSH2Enxz",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEB86zjDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDcwODIyNDAyM1oXDTMyMDcwNTIyNDAyM1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIWctGA/i844aSlLy6Sv",
        "g/cHAinfbSlZKSXVzcbFivYC6g9RAUd5L9hrXlT302CAq+prMavGPqPj25g02ADGelVb6XB3CSi4",
        "zN6CxXgWlNXj1NrMrANvpHwPH6n5UYOTUFCOoi4shzIwwQlNHFr5sTxOqEvZNwKSxe45YvhizwwW",
        "S6TPwPNlBP1nfXApI6xz7xzti9m0nAMaeqmGCjWFz9O3Zec46ep5nS/ffKDYKPBo7SRDyqDg3p7g",
        "pAKt0+4XEUiCHALb9qmnhzFWE6r5DkiKDksOHxnMj6vjJ5AvEpyV1gwDKu7cf39+rgldGd5VWEve",
        "J1Xy+A3mFdW+ZOOviB8CAwEAAaMhMB8wHQYDVR0OBBYEFOubn2CikmtO19J8/41QvHuSGnFEMA0G",
        "CSqGSIb3DQEBCwUAA4IBAQCAIIxDwqJqIIL1yBdip/wTPofVkwG533a9QyPoFTDRmjdA2oH2Tf6L",
        "ebsc8DiGocifXLJ3e3dpREWO8dFtdGfwFr0iAeu9rpi15OY62mbjOtEHXnuoesPvaNe0jPOOEcAM",
        "dxRjo1E5ZuZPeTzH/trrBEzZ/hhlqPH326cqx5Id4XDj5WpVGPystWbUCS7v1flZHLCMCGjjFxuq",
        "2cthH1+oRbcZ2UABuPn9twbdC3tPhIYiwrcr4bN9+ATfJAeMgYlW13tLaKjFoBuqqxHjGpdKJFLM",
        "6ci4o71BahFS/8a3lWrFURXjtkoKZ8DZlMgK9GD8wk6O/2YGbihuYQobk2cD",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/idp"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aWRw": {
        "_id": "aWRw",
        "entityId": "idp",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: my-iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: sales-IDP.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: sts.windows.net711ffa9c-5972-4713-ace3-688c9732614a.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/" ID="_e5f839b8-1482-40ae-9261-b6eb35465a16" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQZzae6CymcZhG5gxIgB7mMDANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTAzMzEyMDI0",
        "MTdaFw0yNDAzMzEyMDI0MTdaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv62V9U2Wi8gr",
        "arSBp7s4Bupke9vaXsNOgNZ8Vn/i0mo6Jn0E1HmJ6uIy+QeahQDtxFQyoEW1LeLGBeVwvUvOfSwf",
        "wPBEHLw9g3F84IdgfIWtezj87BHh3ezwb0r/0Eny3xHcS02wQsIFRIhn7ltCaMFrTja18gBapuRl",
        "36Ujfod7W1uL1HJTsw8auKXYEhutbeQYpdU6qcPaksJd1r16q+Jc78MHptKMWSNI1OnB9jK8hr/3",
        "aug+LSeuJScaJQZDo/qKDmoIC6KT6CgfzUy33I/gjU6RjVcwNw4XFpk5ad13HXTtfCLtPtMxGYuk",
        "cOxX3M80EJMLFr2sJO0vJbA8aQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8GmsA4N5KDQ79v+/1",
        "zVFq8domQYZm8wEAIHn4+T02IluDa9Ty/EqgFzvqAZUILQneFrGCh9uIub/Z3NtkIgs2gbAduxdn",
        "hzdwhNRNivks4P0CO+9Q1iK/xOsmWo12xsyB4lyAv7HsF+COIPFGhRfzsCxVFKfU8x2r+bb8kWLM",
        "YpA2NDlz+MTXQEWhFtCLwQRjHlD6C5+yzqoAFBO7RR28mztTF0nVbKj7N+Ri5VLEKJospkwUDtIH",
        "dcp2bSVwhziAIn05yiw6AVIZnje7cN+kJdCIDgqQ+Ebb96C/Y0JmYvz6sJVP0/u5oR5PrsQqBrw4",
        "OzVWNFaXuTcN3UicN01V",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQfU4A0Hnj17dI0GSzvUwMZTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA2MDYwMTQy",
        "MzBaFw0yNDA2MDYwMTQyMzBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+fFmS+eVDho",
        "FhlYoY1vRkJIblLct3ZT/sT5AmIoCEGxXBeiSCwnSCveXEfrqEHmjlT5qni5spO+OmX7GrLeytHk",
        "hl3O6XiXyVBlvyTSFd/bLHR2DqdxbUxUs2E7WfwQyq9Ob9i3++4fRIPFw+JcZ99ouZasHn2BJvWh",
        "liT7yRtYhvwboc8BwWveL70ZJqsCJnlOKQVIccCdNbQe6HleePXgFB4pRge46zmqKVeEpLbBRqgj",
        "Yf7EkhBJjx0WY2zMW7DLHDCZEY6VS2Kf9gJpGntNSLe0gXydBFtaFPgyaKIVswZ5hY1oRDPHEXEJ",
        "+a5TVRGLeTlyK0v9Y+c8d3XdoQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBZ5lcYpe13quossxB7",
        "L2Y1E7hpy7AZgWr/OGYi/tUh1pJ4++3uZvHJLtTfXc7V+Y5EG6LRq9HZyF0hSvubhYkDXlwYbF7U",
        "/osQjTe1tffPWO3bwzcrBVz7ytvb7DyvikI3C0f3LaCgEwxwYCD33IowNQS/IJA7W/kiFb/7q/Qu",
        "7T/gDL1RjYdm9WmYW3RNn0Kh1VDBiCfY739xpCwdH11OUQfVc+9Z2KSSQY7EAlVgwpq+UiVdOqY9",
        "m4cqul7uvjiSTgG0h5RW9xi3a6Lilk1TxsQUu4tRnGsDCAFgkgLN5rNnlQULuahzruoXWqe4g6pn",
        "Ritpy6bwva8piGPKhVi/",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": {
        "_id": "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw",
        "entityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "serviceAttributes": {
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -A": should export all saml providers to separate files: urnfederationMicrosoftOnline.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {},
    "metadata": {
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="urn:federation:MicrosoftOnline" ID="_e46a1193-e8a7-48ed-804f-1516729ecb5f" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>",
        "        <alg:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://login.microsoftonline.com/login.srf"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -a": should export all saml providers to a single file 1`] = `""`;

exports[`frodo saml export "frodo saml export -a": should export all saml providers to a single file: allAlphaProviders.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPAzure",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPAzure",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {
              "enabled": false,
            },
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "key": "service",
                  "level": 0,
                  "value": "Login",
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": false,
                "authenticationRequest": false,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": true,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail",
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
            },
            "localConfiguration": {
              "authUrl": "",
            },
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure",
              },
            ],
            "metaAlias": "/alpha/IDPAzure",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPBroadcom",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPBroadcom",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "metaAlias": "/alpha/IDPBroadcom",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPFedlet",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPFedlet",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet",
              },
            ],
            "metaAlias": "/alpha/IDPFedlet",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
            },
          },
        },
      },
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "VGhlRXhwYW5zZS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="TheExpanse-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEHpQM4TANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIzMDIwNzIzNTU0NloXDTMzMDIwNDIzNTU0NlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKne2LjuCbctylgfVS5cd8krycSBoW3KNUZ+2M5Kh9fsC7Zd/JusscmubOoSYWzP",
        "7hN+ptIU0uTUnowClbwAXOVixzNMDXnOqV0MJDoa3TnKUTVmab0GlZOte5bbYxgRbLmtsPBd3NbJ",
        "UHLg/e2sGWr+AjyUEDZyKjhodWNxzHKPYc2FKFLeZYXo8lKekJmUsMynZms7oA/vu93OldGezat9",
        "SI14mvRtGbtTNo9pnc10HcZkr8VMB50nSYL5RHFACDZ5HuOEcTB/vz045OZA7mkeJ3VnOAx/P7EP",
        "vF2ObI7dzmYYOGOor1DxMAICeKRo7sv7uOQKHrJfDQLH9xuqOHUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FFHUu7XhJnNpwj0qWPar7kx6YzG6MA0GCSqGSIb3DQEBCwUAA4IBAQA8E+DsEmXJAdU+RA57hNOP",
        "eQt8xTQV/q/dkQaQQUm5JZWCDec7r6hSvHJXLLTI6lXagUhXVGrQHdTbvj/pacAN1mozbqKh956p",
        "VL0NmgX/FCFgxswo4rcx2tPsHJp8cUMzhjK/K/gW9Oye2z6Lk+MHrWpGwXMVTPv8h+L+KTit4nu6",
        "B/YZ4Gwm/2ItEnSalOn1uFNMtnqUyXDp3olshDQaHq8FS3lHSTarPRS4V/RKA1jS/lBts+4k9GDS",
        "ignCXw3tBeZY0pIY22vNYMPPgQrwdf4qUz3KsQDEKEHnJu4x++bwrnLwCg9C47xXtts3Di286T2z",
        "8qSNTFLCRm8cIO1z",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIENAPNKDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIzMDIwNzIzNTU0N1oXDTMzMDIwNDIzNTU0N1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/A5mJQmxAHMKoXVzJK",
        "TmDuBfAnXo/6rveyRh7KOhqKRhd8ZtUihY7ypXKAYTqQQMDarUlMg0ETvRVjoUBXIkRiM4gsqYxv",
        "XRtWCkq/2KswDONYASxZ7TjG67tudBx/8hbzM/FHTQH74p0IGKGIX5MhTXDXyQ6xHiIoUfUtcskU",
        "PmyTo0dZI4ipc5ut2xCvcldaO9rTX+O9YHiVeMxlRxmu1qfwFX3+/zpdu6f2+l9Qs2WXoaMz3CiY",
        "JIinAqVvuU4ZL4C+SJSxVErYj8FYb6vW/ok71UCG8Ur/S+8PDDPzFntr9d7Lu4JAbhw3NGgVcRCu",
        "obU0gtHaii7Z+yE4iLECAwEAAaMhMB8wHQYDVR0OBBYEFBB/77MBgspDS0zl6vaMwTktOSF4MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQB+sN2cZpEXg8JjDRXKqXluiEMoxMGB4xIcSkuuQt2lH/cRp/qy/vyI",
        "9J3lXnOD875z0KgXHEhKEyMobTMercEQGfR7Z/wJVvgDm4IwDaQlgeSoqBE2Zyg1k8ETpsZs583E",
        "CbzRp+gHKfP61OzQeT/wOs4oJXtLHE3HAxaM51gnY5EfXiGvPwNbPjJpEgRu3CW5N+6VYAFJuOws",
        "QAj9lpOLcz5ja2tg8f8XextIApfsaTKEf/PmLbu0kfUwjcI/8sblOSRQZAQmzNIyhBcl/gP/gaSh",
        "Do9JsJMGfVeJjtPCV5W0+H89cghxH4RtxYjoaXANCtGJ4c2MiZywj4OEu/dh",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPBroadcom" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPFedlet" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/" ID="_e5f839b8-1482-40ae-9261-b6eb35465a16" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQZzae6CymcZhG5gxIgB7mMDANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTAzMzEyMDI0",
        "MTdaFw0yNDAzMzEyMDI0MTdaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv62V9U2Wi8gr",
        "arSBp7s4Bupke9vaXsNOgNZ8Vn/i0mo6Jn0E1HmJ6uIy+QeahQDtxFQyoEW1LeLGBeVwvUvOfSwf",
        "wPBEHLw9g3F84IdgfIWtezj87BHh3ezwb0r/0Eny3xHcS02wQsIFRIhn7ltCaMFrTja18gBapuRl",
        "36Ujfod7W1uL1HJTsw8auKXYEhutbeQYpdU6qcPaksJd1r16q+Jc78MHptKMWSNI1OnB9jK8hr/3",
        "aug+LSeuJScaJQZDo/qKDmoIC6KT6CgfzUy33I/gjU6RjVcwNw4XFpk5ad13HXTtfCLtPtMxGYuk",
        "cOxX3M80EJMLFr2sJO0vJbA8aQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8GmsA4N5KDQ79v+/1",
        "zVFq8domQYZm8wEAIHn4+T02IluDa9Ty/EqgFzvqAZUILQneFrGCh9uIub/Z3NtkIgs2gbAduxdn",
        "hzdwhNRNivks4P0CO+9Q1iK/xOsmWo12xsyB4lyAv7HsF+COIPFGhRfzsCxVFKfU8x2r+bb8kWLM",
        "YpA2NDlz+MTXQEWhFtCLwQRjHlD6C5+yzqoAFBO7RR28mztTF0nVbKj7N+Ri5VLEKJospkwUDtIH",
        "dcp2bSVwhziAIn05yiw6AVIZnje7cN+kJdCIDgqQ+Ebb96C/Y0JmYvz6sJVP0/u5oR5PrsQqBrw4",
        "OzVWNFaXuTcN3UicN01V",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQfU4A0Hnj17dI0GSzvUwMZTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA2MDYwMTQy",
        "MzBaFw0yNDA2MDYwMTQyMzBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+fFmS+eVDho",
        "FhlYoY1vRkJIblLct3ZT/sT5AmIoCEGxXBeiSCwnSCveXEfrqEHmjlT5qni5spO+OmX7GrLeytHk",
        "hl3O6XiXyVBlvyTSFd/bLHR2DqdxbUxUs2E7WfwQyq9Ob9i3++4fRIPFw+JcZ99ouZasHn2BJvWh",
        "liT7yRtYhvwboc8BwWveL70ZJqsCJnlOKQVIccCdNbQe6HleePXgFB4pRge46zmqKVeEpLbBRqgj",
        "Yf7EkhBJjx0WY2zMW7DLHDCZEY6VS2Kf9gJpGntNSLe0gXydBFtaFPgyaKIVswZ5hY1oRDPHEXEJ",
        "+a5TVRGLeTlyK0v9Y+c8d3XdoQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBZ5lcYpe13quossxB7",
        "L2Y1E7hpy7AZgWr/OGYi/tUh1pJ4++3uZvHJLtTfXc7V+Y5EG6LRq9HZyF0hSvubhYkDXlwYbF7U",
        "/osQjTe1tffPWO3bwzcrBVz7ytvb7DyvikI3C0f3LaCgEwxwYCD33IowNQS/IJA7W/kiFb/7q/Qu",
        "7T/gDL1RjYdm9WmYW3RNn0Kh1VDBiCfY739xpCwdH11OUQfVc+9Z2KSSQY7EAlVgwpq+UiVdOqY9",
        "m4cqul7uvjiSTgG0h5RW9xi3a6Lilk1TxsQUu4tRnGsDCAFgkgLN5rNnlQULuahzruoXWqe4g6pn",
        "Ritpy6bwva8piGPKhVi/",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aWRw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="idp" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEAxJ36DANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDcwODIyNDAyMloXDTMyMDcwNTIyNDAyMlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKSsGxtvBW0YxWTZ+lWGoSAOMgFI6dkUIZ+6NJ7SWp5nO5bOBVAd6/c9xZvhSXkF",
        "Gz3iL0EI9WLaIf6xKsHlxUz0exFE0jzb7EMDyYD/kHNDBM5a+rMEo+f/YjP5ADjkzNy6Zt9Ll0Uq",
        "yO+LHLcXARE0ts2/2XckmZdSwkXuQdN1yN4lFif5Kj3cuqRHsqfwchxuKiV9BQHq8Jx1ACYcpbkV",
        "VkDvC6awk61He9CgwJHbNKTdqU3sKGiZWz8Mz7TAvM2I/LLfsdSZXXLnA7C5EOPVVJ/RLs7sJuVm",
        "M0KUQOjf3TNJAjBULVDaCtmcANMnZCvXyuI4EvfuW/iuqGCqG9ECAwEAAaMhMB8wHQYDVR0OBBYE",
        "FAxLR/y+kv5fcM3bLHczhhKgPjABMA0GCSqGSIb3DQEBCwUAA4IBAQAHCEpuu9ThpTOLoJPnzQts",
        "UK6G7REJh8w1doL4qTeq9oylnWeidvSLNhuowXZS0LyA5YXEm6tyv2NiHDv3DtoP8kBsCOLPVGhE",
        "yoQy01XZYnngGzzqwFDnKJgiV3hNwqM/bGhW19N0AiVLc46iidTJ4+ekTwLxdcgwOob3+JNnio10",
        "XH+f2ncH09Lkqv+7dnUGo/NjMHCcEWJ/2PB/gjbGKAi+m43mRgJz2+BeOOEzeSsDe/n9LYl7/drO",
        "Tf0T+k7dwlE+p0vLID6I+tDI18Bdl2TUUaFCT/D71LvE6qZhrwETJ60+IMyaFWBmZte4VQjhv8f+",
        "EdVaivDEwSH2Enxz",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEB86zjDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDcwODIyNDAyM1oXDTMyMDcwNTIyNDAyM1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIWctGA/i844aSlLy6Sv",
        "g/cHAinfbSlZKSXVzcbFivYC6g9RAUd5L9hrXlT302CAq+prMavGPqPj25g02ADGelVb6XB3CSi4",
        "zN6CxXgWlNXj1NrMrANvpHwPH6n5UYOTUFCOoi4shzIwwQlNHFr5sTxOqEvZNwKSxe45YvhizwwW",
        "S6TPwPNlBP1nfXApI6xz7xzti9m0nAMaeqmGCjWFz9O3Zec46ep5nS/ffKDYKPBo7SRDyqDg3p7g",
        "pAKt0+4XEUiCHALb9qmnhzFWE6r5DkiKDksOHxnMj6vjJ5AvEpyV1gwDKu7cf39+rgldGd5VWEve",
        "J1Xy+A3mFdW+ZOOviB8CAwEAAaMhMB8wHQYDVR0OBBYEFOubn2CikmtO19J8/41QvHuSGnFEMA0G",
        "CSqGSIb3DQEBCwUAA4IBAQCAIIxDwqJqIIL1yBdip/wTPofVkwG533a9QyPoFTDRmjdA2oH2Tf6L",
        "ebsc8DiGocifXLJ3e3dpREWO8dFtdGfwFr0iAeu9rpi15OY62mbjOtEHXnuoesPvaNe0jPOOEcAM",
        "dxRjo1E5ZuZPeTzH/trrBEzZ/hhlqPH326cqx5Id4XDj5WpVGPystWbUCS7v1flZHLCMCGjjFxuq",
        "2cthH1+oRbcZ2UABuPn9twbdC3tPhIYiwrcr4bN9+ATfJAeMgYlW13tLaKjFoBuqqxHjGpdKJFLM",
        "6ci4o71BahFS/8a3lWrFURXjtkoKZ8DZlMgK9GD8wk6O/2YGbihuYQobk2cD",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/idp"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="urn:federation:MicrosoftOnline" ID="_e46a1193-e8a7-48ed-804f-1516729ecb5f" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>",
        "        <alg:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://login.microsoftonline.com/login.srf"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "VGhlRXhwYW5zZS1JRFA": {
        "_id": "VGhlRXhwYW5zZS1JRFA",
        "entityId": "TheExpanse-IDP",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": {
        "_id": "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw",
        "entityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "serviceAttributes": {
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
            },
          },
        },
      },
      "aWRw": {
        "_id": "aWRw",
        "entityId": "idp",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp",
                },
              ],
            },
          },
        },
      },
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export -aD samlExportTestDir2": should export all saml providers to a single file in the directory samlExportTestDir2 1`] = `""`;

exports[`frodo saml export "frodo saml export -aD samlExportTestDir2": should export all saml providers to a single file in the directory samlExportTestDir2: samlExportTestDir2/allAlphaProviders.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPAzure",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPAzure",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {
              "enabled": false,
            },
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "key": "service",
                  "level": 0,
                  "value": "Login",
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": false,
                "authenticationRequest": false,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": true,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail",
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
            },
            "localConfiguration": {
              "authUrl": "",
            },
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure",
              },
            ],
            "metaAlias": "/alpha/IDPAzure",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPBroadcom",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPBroadcom",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "metaAlias": "/alpha/IDPBroadcom",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": {
        "_id": "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0",
        "entityId": "https://idc.scheuber.io/am/saml2/IDPFedlet",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "85523e71-2d77-4577-b078-6f9674cc54e2",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://idc.scheuber.io/am/idpsaehandler/metaAlias/alpha/IDPFedlet",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet",
              },
            ],
            "metaAlias": "/alpha/IDPFedlet",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                  "responseLocation": "https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet",
                },
              ],
            },
          },
        },
      },
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
            },
            "idpFinderImplementation": {
              "enableProxyIdpFinderForAllSps": false,
            },
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {
              "enabled": false,
            },
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
              "disableNameIdPersistence": false,
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "VGhlRXhwYW5zZS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="TheExpanse-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEHpQM4TANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIzMDIwNzIzNTU0NloXDTMzMDIwNDIzNTU0NlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKne2LjuCbctylgfVS5cd8krycSBoW3KNUZ+2M5Kh9fsC7Zd/JusscmubOoSYWzP",
        "7hN+ptIU0uTUnowClbwAXOVixzNMDXnOqV0MJDoa3TnKUTVmab0GlZOte5bbYxgRbLmtsPBd3NbJ",
        "UHLg/e2sGWr+AjyUEDZyKjhodWNxzHKPYc2FKFLeZYXo8lKekJmUsMynZms7oA/vu93OldGezat9",
        "SI14mvRtGbtTNo9pnc10HcZkr8VMB50nSYL5RHFACDZ5HuOEcTB/vz045OZA7mkeJ3VnOAx/P7EP",
        "vF2ObI7dzmYYOGOor1DxMAICeKRo7sv7uOQKHrJfDQLH9xuqOHUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FFHUu7XhJnNpwj0qWPar7kx6YzG6MA0GCSqGSIb3DQEBCwUAA4IBAQA8E+DsEmXJAdU+RA57hNOP",
        "eQt8xTQV/q/dkQaQQUm5JZWCDec7r6hSvHJXLLTI6lXagUhXVGrQHdTbvj/pacAN1mozbqKh956p",
        "VL0NmgX/FCFgxswo4rcx2tPsHJp8cUMzhjK/K/gW9Oye2z6Lk+MHrWpGwXMVTPv8h+L+KTit4nu6",
        "B/YZ4Gwm/2ItEnSalOn1uFNMtnqUyXDp3olshDQaHq8FS3lHSTarPRS4V/RKA1jS/lBts+4k9GDS",
        "ignCXw3tBeZY0pIY22vNYMPPgQrwdf4qUz3KsQDEKEHnJu4x++bwrnLwCg9C47xXtts3Di286T2z",
        "8qSNTFLCRm8cIO1z",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIENAPNKDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIzMDIwNzIzNTU0N1oXDTMzMDIwNDIzNTU0N1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ/A5mJQmxAHMKoXVzJK",
        "TmDuBfAnXo/6rveyRh7KOhqKRhd8ZtUihY7ypXKAYTqQQMDarUlMg0ETvRVjoUBXIkRiM4gsqYxv",
        "XRtWCkq/2KswDONYASxZ7TjG67tudBx/8hbzM/FHTQH74p0IGKGIX5MhTXDXyQ6xHiIoUfUtcskU",
        "PmyTo0dZI4ipc5ut2xCvcldaO9rTX+O9YHiVeMxlRxmu1qfwFX3+/zpdu6f2+l9Qs2WXoaMz3CiY",
        "JIinAqVvuU4ZL4C+SJSxVErYj8FYb6vW/ok71UCG8Ur/S+8PDDPzFntr9d7Lu4JAbhw3NGgVcRCu",
        "obU0gtHaii7Z+yE4iLECAwEAAaMhMB8wHQYDVR0OBBYEFBB/77MBgspDS0zl6vaMwTktOSF4MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQB+sN2cZpEXg8JjDRXKqXluiEMoxMGB4xIcSkuuQt2lH/cRp/qy/vyI",
        "9J3lXnOD875z0KgXHEhKEyMobTMercEQGfR7Z/wJVvgDm4IwDaQlgeSoqBE2Zyg1k8ETpsZs583E",
        "CbzRp+gHKfP61OzQeT/wOs4oJXtLHE3HAxaM51gnY5EfXiGvPwNbPjJpEgRu3CW5N+6VYAFJuOws",
        "QAj9lpOLcz5ja2tg8f8XextIApfsaTKEf/PmLbu0kfUwjcI/8sblOSRQZAQmzNIyhBcl/gP/gaSh",
        "Do9JsJMGfVeJjtPCV5W0+H89cghxH4RtxYjoaXANCtGJ4c2MiZywj4OEu/dh",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse" ResponseLocation="https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-citco-poc.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/TheExpanse"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPAzure"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPAzure"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPAzure"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQQnJvYWRjb20": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPBroadcom" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPBroadcom"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPBroadcom"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9pZGMuc2NoZXViZXIuaW8vYW0vc2FtbDIvSURQRmVkbGV0": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://idc.scheuber.io/am/saml2/IDPFedlet" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/ArtifactResolver/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPSloPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPSloSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniRedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet" ResponseLocation="https://idc.scheuber.io/am/IDPMniPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/IDPMniSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SSORedirect/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SSOPOST/metaAlias/alpha/IDPFedlet"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SSOSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/NIMSoap/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/AIDReqSoap/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://idc.scheuber.io/am/AIDReqUri/IDPRole/metaAlias/alpha/IDPFedlet"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/" ID="_e5f839b8-1482-40ae-9261-b6eb35465a16" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQZzae6CymcZhG5gxIgB7mMDANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTAzMzEyMDI0",
        "MTdaFw0yNDAzMzEyMDI0MTdaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv62V9U2Wi8gr",
        "arSBp7s4Bupke9vaXsNOgNZ8Vn/i0mo6Jn0E1HmJ6uIy+QeahQDtxFQyoEW1LeLGBeVwvUvOfSwf",
        "wPBEHLw9g3F84IdgfIWtezj87BHh3ezwb0r/0Eny3xHcS02wQsIFRIhn7ltCaMFrTja18gBapuRl",
        "36Ujfod7W1uL1HJTsw8auKXYEhutbeQYpdU6qcPaksJd1r16q+Jc78MHptKMWSNI1OnB9jK8hr/3",
        "aug+LSeuJScaJQZDo/qKDmoIC6KT6CgfzUy33I/gjU6RjVcwNw4XFpk5ad13HXTtfCLtPtMxGYuk",
        "cOxX3M80EJMLFr2sJO0vJbA8aQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8GmsA4N5KDQ79v+/1",
        "zVFq8domQYZm8wEAIHn4+T02IluDa9Ty/EqgFzvqAZUILQneFrGCh9uIub/Z3NtkIgs2gbAduxdn",
        "hzdwhNRNivks4P0CO+9Q1iK/xOsmWo12xsyB4lyAv7HsF+COIPFGhRfzsCxVFKfU8x2r+bb8kWLM",
        "YpA2NDlz+MTXQEWhFtCLwQRjHlD6C5+yzqoAFBO7RR28mztTF0nVbKj7N+Ri5VLEKJospkwUDtIH",
        "dcp2bSVwhziAIn05yiw6AVIZnje7cN+kJdCIDgqQ+Ebb96C/Y0JmYvz6sJVP0/u5oR5PrsQqBrw4",
        "OzVWNFaXuTcN3UicN01V",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQfU4A0Hnj17dI0GSzvUwMZTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA2MDYwMTQy",
        "MzBaFw0yNDA2MDYwMTQyMzBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+fFmS+eVDho",
        "FhlYoY1vRkJIblLct3ZT/sT5AmIoCEGxXBeiSCwnSCveXEfrqEHmjlT5qni5spO+OmX7GrLeytHk",
        "hl3O6XiXyVBlvyTSFd/bLHR2DqdxbUxUs2E7WfwQyq9Ob9i3++4fRIPFw+JcZ99ouZasHn2BJvWh",
        "liT7yRtYhvwboc8BwWveL70ZJqsCJnlOKQVIccCdNbQe6HleePXgFB4pRge46zmqKVeEpLbBRqgj",
        "Yf7EkhBJjx0WY2zMW7DLHDCZEY6VS2Kf9gJpGntNSLe0gXydBFtaFPgyaKIVswZ5hY1oRDPHEXEJ",
        "+a5TVRGLeTlyK0v9Y+c8d3XdoQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBZ5lcYpe13quossxB7",
        "L2Y1E7hpy7AZgWr/OGYi/tUh1pJ4++3uZvHJLtTfXc7V+Y5EG6LRq9HZyF0hSvubhYkDXlwYbF7U",
        "/osQjTe1tffPWO3bwzcrBVz7ytvb7DyvikI3C0f3LaCgEwxwYCD33IowNQS/IJA7W/kiFb/7q/Qu",
        "7T/gDL1RjYdm9WmYW3RNn0Kh1VDBiCfY739xpCwdH11OUQfVc+9Z2KSSQY7EAlVgwpq+UiVdOqY9",
        "m4cqul7uvjiSTgG0h5RW9xi3a6Lilk1TxsQUu4tRnGsDCAFgkgLN5rNnlQULuahzruoXWqe4g6pn",
        "Ritpy6bwva8piGPKhVi/",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aWRw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="idp" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEAxJ36DANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDcwODIyNDAyMloXDTMyMDcwNTIyNDAyMlowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKSsGxtvBW0YxWTZ+lWGoSAOMgFI6dkUIZ+6NJ7SWp5nO5bOBVAd6/c9xZvhSXkF",
        "Gz3iL0EI9WLaIf6xKsHlxUz0exFE0jzb7EMDyYD/kHNDBM5a+rMEo+f/YjP5ADjkzNy6Zt9Ll0Uq",
        "yO+LHLcXARE0ts2/2XckmZdSwkXuQdN1yN4lFif5Kj3cuqRHsqfwchxuKiV9BQHq8Jx1ACYcpbkV",
        "VkDvC6awk61He9CgwJHbNKTdqU3sKGiZWz8Mz7TAvM2I/LLfsdSZXXLnA7C5EOPVVJ/RLs7sJuVm",
        "M0KUQOjf3TNJAjBULVDaCtmcANMnZCvXyuI4EvfuW/iuqGCqG9ECAwEAAaMhMB8wHQYDVR0OBBYE",
        "FAxLR/y+kv5fcM3bLHczhhKgPjABMA0GCSqGSIb3DQEBCwUAA4IBAQAHCEpuu9ThpTOLoJPnzQts",
        "UK6G7REJh8w1doL4qTeq9oylnWeidvSLNhuowXZS0LyA5YXEm6tyv2NiHDv3DtoP8kBsCOLPVGhE",
        "yoQy01XZYnngGzzqwFDnKJgiV3hNwqM/bGhW19N0AiVLc46iidTJ4+ekTwLxdcgwOob3+JNnio10",
        "XH+f2ncH09Lkqv+7dnUGo/NjMHCcEWJ/2PB/gjbGKAi+m43mRgJz2+BeOOEzeSsDe/n9LYl7/drO",
        "Tf0T+k7dwlE+p0vLID6I+tDI18Bdl2TUUaFCT/D71LvE6qZhrwETJ60+IMyaFWBmZte4VQjhv8f+",
        "EdVaivDEwSH2Enxz",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEB86zjDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDcwODIyNDAyM1oXDTMyMDcwNTIyNDAyM1owVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIWctGA/i844aSlLy6Sv",
        "g/cHAinfbSlZKSXVzcbFivYC6g9RAUd5L9hrXlT302CAq+prMavGPqPj25g02ADGelVb6XB3CSi4",
        "zN6CxXgWlNXj1NrMrANvpHwPH6n5UYOTUFCOoi4shzIwwQlNHFr5sTxOqEvZNwKSxe45YvhizwwW",
        "S6TPwPNlBP1nfXApI6xz7xzti9m0nAMaeqmGCjWFz9O3Zec46ep5nS/ffKDYKPBo7SRDyqDg3p7g",
        "pAKt0+4XEUiCHALb9qmnhzFWE6r5DkiKDksOHxnMj6vjJ5AvEpyV1gwDKu7cf39+rgldGd5VWEve",
        "J1Xy+A3mFdW+ZOOviB8CAwEAAaMhMB8wHQYDVR0OBBYEFOubn2CikmtO19J8/41QvHuSGnFEMA0G",
        "CSqGSIb3DQEBCwUAA4IBAQCAIIxDwqJqIIL1yBdip/wTPofVkwG533a9QyPoFTDRmjdA2oH2Tf6L",
        "ebsc8DiGocifXLJ3e3dpREWO8dFtdGfwFr0iAeu9rpi15OY62mbjOtEHXnuoesPvaNe0jPOOEcAM",
        "dxRjo1E5ZuZPeTzH/trrBEzZ/hhlqPH326cqx5Id4XDj5WpVGPystWbUCS7v1flZHLCMCGjjFxuq",
        "2cthH1+oRbcZ2UABuPn9twbdC3tPhIYiwrcr4bN9+ATfJAeMgYlW13tLaKjFoBuqqxHjGpdKJFLM",
        "6ci4o71BahFS/8a3lWrFURXjtkoKZ8DZlMgK9GD8wk6O/2YGbihuYQobk2cD",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp" ResponseLocation="https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/idp"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-admin-fed.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/idp"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="urn:federation:MicrosoftOnline" ID="_e46a1193-e8a7-48ed-804f-1516729ecb5f" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>",
        "        <alg:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://login.microsoftonline.com/login.srf"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "VGhlRXhwYW5zZS1JRFA": {
        "_id": "VGhlRXhwYW5zZS1JRFA",
        "entityId": "TheExpanse-IDP",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {
              "enabled": false,
            },
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-citco-poc.forgeblocks.com/am/NIMSoap/metaAlias/alpha/TheExpanse",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/TheExpanse",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                  "responseLocation": "https://openam-citco-poc.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/TheExpanse",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-citco-poc.forgeblocks.com/am/SSOPOST/metaAlias/alpha/TheExpanse",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": {
        "_id": "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw",
        "entityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "serviceAttributes": {
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
            },
          },
        },
      },
      "aWRw": {
        "_id": "aWRw",
        "entityId": "idp",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-admin-fed.forgeblocks.com/am/NIMSoap/metaAlias/alpha/idp",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/idp",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPMniRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPMniSoap/metaAlias/alpha/idp",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloRedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                  "responseLocation": "https://openam-admin-fed.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/IDPSloSoap/metaAlias/alpha/idp",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOPOST/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSORedirect/metaAlias/alpha/idp",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://openam-admin-fed.forgeblocks.com/am/SSOSoap/metaAlias/alpha/idp",
                },
              ],
            },
          },
        },
      },
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "evaluatorVersion": "1.0",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
  },
}
`;

exports[`frodo saml export "frodo saml export -i iSPAzure -D samlExportTestDir1": should export the saml provider with entity id "iSPAzure" into the directory samlExportTestDir1 1`] = `""`;

exports[`frodo saml export "frodo saml export -i iSPAzure -D samlExportTestDir1": should export the saml provider with entity id "iSPAzure" into the directory samlExportTestDir1: samlExportTestDir1/iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -i iSPAzure -f my-iSPAzure.saml.json": should export the saml provider with entity id "iSPAzure" into file named my-iSPAzure.saml.json 1`] = `""`;

exports[`frodo saml export "frodo saml export -i iSPAzure -f my-iSPAzure.saml.json": should export the saml provider with entity id "iSPAzure" into file named my-iSPAzure.saml.json: my-iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;

exports[`frodo saml export "frodo saml export -i iSPAzure": should export the saml provider with entity id "iSPAzure" 1`] = `""`;

exports[`frodo saml export "frodo saml export -i iSPAzure": should export the saml provider with entity id "iSPAzure": iSPAzure.saml.json 1`] = `
{
  "meta": Any<Object>,
  "saml": {
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {
              "spAdapterScript": "07ee6240-d106-4e25-a781-5fcabc477d22",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {},
  },
  "script": {},
}
`;
