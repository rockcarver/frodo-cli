// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo idm export "frodo idm export --all --file allIdmTestFile.json -E test/e2e/env/testEntitiesFile.json -e test/e2e/env/testEnvFile.env --no-metadata": should export all idm config entities to a single file named allIdmTestFile.json 1`] = `0`;

exports[`frodo idm export "frodo idm export --all --file allIdmTestFile.json -E test/e2e/env/testEntitiesFile.json -e test/e2e/env/testEnvFile.env --no-metadata": should export all idm config entities to a single file named allIdmTestFile.json 2`] = `""`;

exports[`frodo idm export "frodo idm export --all --file allIdmTestFile.json -E test/e2e/env/testEntitiesFile.json -e test/e2e/env/testEnvFile.env --no-metadata": should export all idm config entities to a single file named allIdmTestFile.json: allIdmTestFile.json 1`] = `
{
  "idm": {
    "repo.ds": {
      "_id": "repo.ds",
      "commands": {
        "delete-mapping-links": {
          "_queryFilter": "/linkType eq "\${mapping}"",
          "operation": "DELETE",
        },
        "delete-target-ids-for-recon": {
          "_queryFilter": "/reconId eq "\${reconId}"",
          "operation": "DELETE",
        },
      },
      "embedded": false,
      "ldapConnectionFactories": {
        "bind": {
          "availabilityCheckIntervalSeconds": 30,
          "availabilityCheckTimeoutMilliSeconds": 10000,
          "connectionPoolSize": 50,
          "connectionSecurity": "none",
          "heartBeatIntervalSeconds": 60,
          "heartBeatTimeoutMilliSeconds": 10000,
          "primaryLdapServers": [
            {
              "hostname": "userstore-0.userstore",
              "port": 1389,
            },
          ],
          "secondaryLdapServers": [
            {
              "hostname": "userstore-2.userstore",
              "port": 1389,
            },
          ],
        },
        "root": {
          "authentication": {
            "simple": {
              "bindDn": "\${admin}",
              "bindPassword": "&{userstore.password}",
            },
          },
          "inheritFrom": "bind",
        },
      },
      "maxConnectionAttempts": 5,
      "queries": {
        "explicit": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
        },
        "generic": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "find-relationship-edges": {
            "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
          },
          "find-relationships-for-resource": {
            "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "get-by-field-value": {
            "_queryFilter": "/\${field} eq "\${value}"",
          },
          "get-notifications-for-user": {
            "_queryFilter": "/receiverId eq "\${userId}"",
            "_sortKeys": "-createDate",
          },
          "get-recons": {
            "_fields": "reconId,mapping,activitydate",
            "_queryFilter": "/entryType eq "summary"",
            "_sortKeys": "-activitydate",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
          "query-cluster-events": {
            "_queryFilter": "/instanceId eq "\${instanceId}"",
          },
          "query-cluster-failed-instances": {
            "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
          },
          "query-cluster-instances": {
            "_queryFilter": "true",
          },
          "query-cluster-running-instances": {
            "_queryFilter": "/state eq 1",
          },
        },
      },
      "resourceMapping": {
        "defaultMapping": {
          "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
        },
        "explicitMapping": {
          "clusteredrecontargetids": {
            "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-recon-clusteredTargetIds",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-recon-id",
                "type": "simple",
              },
              "targetIds": {
                "ldapAttribute": "fr-idm-recon-targetIds",
                "type": "json",
              },
            },
          },
          "dsconfig/attributeValue": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-attribute-value-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "matchAttribute": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-match-attribute",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/characterSet": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-character-set-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowUnclassifiedCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                "type": "simple",
              },
              "characterSet": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-character-set",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minCharacterSets": {
                "ldapAttribute": "ds-cfg-min-character-sets",
                "type": "simple",
              },
            },
          },
          "dsconfig/dictionary": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-dictionary-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "dictionaryFile": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-dictionary-file",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/lengthBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-length-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxPasswordLength": {
                "ldapAttribute": "ds-cfg-max-password-length",
                "type": "simple",
              },
              "minPasswordLength": {
                "ldapAttribute": "ds-cfg-min-password-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/passwordPolicies": {
            "dnTemplate": "cn=Password Policies,cn=config",
            "objectClasses": [
              "ds-cfg-password-policy",
              "ds-cfg-authentication-policy",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowPreEncodedPasswords": {
                "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
                "type": "simple",
              },
              "defaultPasswordStorageScheme": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                "type": "simple",
              },
              "deprecatedPasswordStorageScheme": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
                "type": "simple",
              },
              "maxPasswordAge": {
                "ldapAttribute": "ds-cfg-max-password-age",
                "type": "simple",
              },
              "passwordAttribute": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-password-attribute",
                "type": "simple",
              },
              "passwordHistoryCount": {
                "ldapAttribute": "ds-cfg-password-history-count",
                "type": "simple",
              },
              "validator": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-password-validator",
                "type": "simple",
              },
            },
          },
          "dsconfig/repeatedCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-repeated-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxConsecutiveLength": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-max-consecutive-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/similarityBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-similarity-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minPasswordDifference": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-password-difference",
                "type": "simple",
              },
            },
          },
          "dsconfig/uniqueCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-unique-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minUniqueCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-unique-characters",
                "type": "simple",
              },
            },
          },
          "dsconfig/userDefinedVirtualAttribute": {
            "dnTemplate": "cn=Virtual Attributes,cn=config",
            "objectClasses": [
              "ds-cfg-user-defined-virtual-attribute",
              "ds-cfg-virtual-attribute",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "attributeType": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-attribute-type",
                "type": "simple",
              },
              "baseDn": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-base-dn",
                "type": "simple",
              },
              "conflictBehavior": {
                "ldapAttribute": "ds-cfg-conflict-behavior",
                "type": "simple",
              },
              "enabled": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "filter": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-filter",
                "type": "simple",
              },
              "groupDn": {
                "ldapAttribute": "ds-cfg-group-dn",
                "type": "simple",
              },
              "javaClass": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "scope": {
                "ldapAttribute": "ds-cfg-scope",
                "type": "simple",
              },
              "value": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-value",
                "type": "simple",
              },
            },
          },
          "identities/admin": {
            "dnTemplate": "o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/alpha": {
            "dnTemplate": "o=alpha,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/bravo": {
            "dnTemplate": "o=bravo,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "internal/role": {
            "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "fr-idm-internal-role",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "authzMembers": {
                "isMultiValued": true,
                "propertyName": "authzRoles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "condition": {
                "ldapAttribute": "fr-idm-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "name": {
                "ldapAttribute": "fr-idm-name",
                "type": "simple",
              },
              "privileges": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-privilege",
                "type": "json",
              },
              "temporalConstraints": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-temporal-constraints",
                "type": "json",
              },
            },
          },
          "internal/user": {
            "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-internal-user",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "password": {
                "ldapAttribute": "fr-idm-password",
                "type": "json",
              },
            },
          },
          "link": {
            "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-link",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "firstId": {
                "ldapAttribute": "fr-idm-link-firstId",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-link-qualifier",
                "type": "simple",
              },
              "linkType": {
                "ldapAttribute": "fr-idm-link-type",
                "type": "simple",
              },
              "secondId": {
                "ldapAttribute": "fr-idm-link-secondId",
                "type": "simple",
              },
            },
          },
          "locks": {
            "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-lock",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-lock-nodeid",
                "type": "simple",
              },
            },
          },
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple",
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple",
              },
            },
          },
          "recon/assoc": {
            "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
            "namingStrategy": {
              "dnAttribute": "fr-idm-reconassoc-reconid",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "fr-idm-reconassoc",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "fr-idm-reconassoc-reconid",
                "type": "simple",
              },
              "finishTime": {
                "ldapAttribute": "fr-idm-reconassoc-finishtime",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "subResources": {
              "entry": {
                "namingStrategy": {
                  "dnAttribute": "uid",
                  "type": "clientDnNaming",
                },
                "resource": "recon-assoc-entry",
                "type": "collection",
              },
            },
          },
          "recon/assoc/entry": {
            "objectClasses": [
              "uidObject",
              "fr-idm-reconassocentry",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "action": {
                "ldapAttribute": "fr-idm-reconassocentry-action",
                "type": "simple",
              },
              "ambiguousTargetObjectIds": {
                "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                "type": "simple",
              },
              "exception": {
                "ldapAttribute": "fr-idm-reconassocentry-exception",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "message": {
                "ldapAttribute": "fr-idm-reconassocentry-message",
                "type": "simple",
              },
              "messageDetail": {
                "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                "type": "simple",
              },
              "phase": {
                "ldapAttribute": "fr-idm-reconassocentry-phase",
                "type": "simple",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-reconassocentry-reconid",
                "type": "simple",
              },
              "situation": {
                "ldapAttribute": "fr-idm-reconassocentry-situation",
                "type": "simple",
              },
              "sourceObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "status": {
                "ldapAttribute": "fr-idm-reconassocentry-status",
                "type": "simple",
              },
              "targetObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "resourceName": "recon-assoc-entry",
            "subResourceRouting": [
              {
                "prefix": "entry",
                "template": "recon/assoc/{reconId}/entry",
              },
            ],
          },
          "sync/queue": {
            "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-syncqueue",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "context": {
                "ldapAttribute": "fr-idm-syncqueue-context",
                "type": "json",
              },
              "createDate": {
                "ldapAttribute": "fr-idm-syncqueue-createdate",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-syncqueue-mapping",
                "type": "simple",
              },
              "newObject": {
                "ldapAttribute": "fr-idm-syncqueue-newobject",
                "type": "json",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-syncqueue-nodeid",
                "type": "simple",
              },
              "objectRev": {
                "ldapAttribute": "fr-idm-syncqueue-objectRev",
                "type": "simple",
              },
              "oldObject": {
                "ldapAttribute": "fr-idm-syncqueue-oldobject",
                "type": "json",
              },
              "remainingRetries": {
                "ldapAttribute": "fr-idm-syncqueue-remainingretries",
                "type": "simple",
              },
              "resourceCollection": {
                "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                "type": "simple",
              },
              "resourceId": {
                "ldapAttribute": "fr-idm-syncqueue-resourceid",
                "type": "simple",
              },
              "state": {
                "ldapAttribute": "fr-idm-syncqueue-state",
                "type": "simple",
              },
              "syncAction": {
                "ldapAttribute": "fr-idm-syncqueue-syncaction",
                "type": "simple",
              },
            },
          },
        },
        "genericMapping": {
          "cluster/*": {
            "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-cluster-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
            "objectClasses": [
              "uidObject",
              "fr-idm-cluster-obj",
            ],
          },
          "config": {
            "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
          },
          "file": {
            "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
          },
          "internal/notification": {
            "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-notification-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-notification",
            ],
            "properties": {
              "target": {
                "propertyName": "_notifications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "internal/usermeta": {
            "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "jsonstorage": {
            "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
          },
          "managed/*": {
            "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
            },
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
            },
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference",
              },
            },
          },
          "reconprogressstate": {
            "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
          },
          "relationships": {
            "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-relationship-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
            "objectClasses": [
              "uidObject",
              "fr-idm-relationship",
            ],
          },
          "scheduler": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "scheduler/*": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "ui/*": {
            "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
          },
          "updates": {
            "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
          },
        },
      },
      "rest2LdapOptions": {
        "mvccAttribute": "etag",
        "readOnUpdatePolicy": "controls",
        "returnNullForMissingProperties": true,
        "useMvcc": true,
        "usePermissiveModify": true,
        "useSubtreeDelete": true,
      },
      "security": {
        "keyManager": "jvm",
        "trustManager": "jvm",
      },
    },
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": "\${groovy}",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{\${installDir}}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{\${installDir}}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{\${installDir}}/bin/defaults/script",
        },
        "install": {
          "directory": "&{\${installDir}}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
    "sync": {
      "_id": "sync",
      "mappings": [
        {
          "_id": "sync/managedBravo_user_managedBravo_user",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedAlpha_application_managedBravo_application",
          "consentRequired": true,
          "displayName": "Test Application Mapping",
          "icon": null,
          "name": "managedAlpha_application_managedBravo_application",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "source": "authoritative",
              "target": "_id",
            },
          ],
          "source": "managed/alpha_application",
          "sourceQuery": {
            "_queryFilter": "(eq "" or eq "")",
          },
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
          ],
          "target": "managed/bravo_application",
          "targetQuery": {
            "_queryFilter": "!(eq "")",
          },
        },
        {
          "_id": "sync/managedAlpha_user_managedBravo_user",
          "consentRequired": true,
          "displayName": "Test Mapping for Frodo",
          "icon": null,
          "name": "managedAlpha_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "console.log("Hello World!");",
                "type": "text/javascript",
              },
              "default": [
                "Default value string",
              ],
              "source": "accountStatus",
              "target": "applications",
              "transform": {
                "globals": {},
                "source": "console.log("hello");",
                "type": "text/javascript",
              },
            },
          ],
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
          ],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedBravo_user_managedAlpha_user",
          "consentRequired": false,
          "displayName": "Frodo test mapping",
          "icon": null,
          "name": "managedBravo_user_managedAlpha_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
          ],
          "target": "managed/alpha_user",
        },
        {
          "_id": "sync/AlphaUser2GoogleApps",
          "consentRequired": false,
          "correlationQuery": [
            {
              "expressionTree": {
                "all": [
                  "__NAME__",
                ],
              },
              "file": "ui/correlateTreeToQueryFilter.js",
              "linkQualifier": "default",
              "mapping": "AlphaUser2GoogleApps",
              "type": "text/javascript",
            },
          ],
          "displayName": "AlphaUser2GoogleApps",
          "enableSync": {
            "$bool": "&{esv.gac.enable.mapping}",
          },
          "icon": null,
          "name": "AlphaUser2GoogleApps",
          "onCreate": {
            "globals": {},
            "source": "target.orgUnitPath = "/NewAccounts";",
            "type": "text/javascript",
          },
          "onUpdate": {
            "globals": {},
            "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
            "type": "text/javascript",
          },
          "policies": [
            {
              "action": "EXCEPTION",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "UNLINK",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": {
                "globals": {},
                "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
                "type": "text/javascript",
              },
              "situation": "MISSING",
            },
            {
              "action": "EXCEPTION",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "IGNORE",
              "situation": "UNQUALIFIED",
            },
            {
              "action": "IGNORE",
              "situation": "UNASSIGNED",
            },
            {
              "action": "UNLINK",
              "situation": "LINK_ONLY",
            },
            {
              "action": "IGNORE",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "ALL_GONE",
            },
            {
              "action": "UPDATE",
              "situation": "CONFIRMED",
            },
            {
              "action": "LINK",
              "situation": "FOUND",
            },
            {
              "action": "CREATE",
              "situation": "ABSENT",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "object.custom_password_encrypted != null",
                "type": "text/javascript",
              },
              "source": "custom_password_encrypted",
              "target": "__PASSWORD__",
              "transform": {
                "globals": {},
                "source": "openidm.decrypt(source);",
                "type": "text/javascript",
              },
            },
            {
              "source": "cn",
              "target": "__NAME__",
              "transform": {
                "globals": {},
                "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
                "type": "text/javascript",
              },
            },
            {
              "source": "givenName",
              "target": "givenName",
            },
            {
              "source": "",
              "target": "familyName",
              "transform": {
                "globals": {},
                "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
                "type": "text/javascript",
              },
            },
          ],
          "queuedSync": {
            "enabled": true,
            "maxQueueSize": 20000,
            "maxRetries": 5,
            "pageSize": 100,
            "pollingInterval": 1000,
            "postRetryAction": "logged-ignore",
            "retryDelay": 1000,
          },
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
            "managedBravo_user_managedAlpha_user",
          ],
          "target": "system/GoogleApps/__ACCOUNT__",
          "validSource": {
            "globals": {},
            "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
            "type": "text/javascript",
          },
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files 1`] = `0`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files 2`] = `""`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/repo.ds.idm.json 1`] = `
{
  "idm": {
    "repo.ds": {
      "_id": "repo.ds",
      "commands": {
        "delete-mapping-links": {
          "_queryFilter": "/linkType eq "\${mapping}"",
          "operation": "DELETE",
        },
        "delete-target-ids-for-recon": {
          "_queryFilter": "/reconId eq "\${reconId}"",
          "operation": "DELETE",
        },
      },
      "embedded": false,
      "ldapConnectionFactories": {
        "bind": {
          "availabilityCheckIntervalSeconds": 30,
          "availabilityCheckTimeoutMilliSeconds": 10000,
          "connectionPoolSize": 50,
          "connectionSecurity": "none",
          "heartBeatIntervalSeconds": 60,
          "heartBeatTimeoutMilliSeconds": 10000,
          "primaryLdapServers": [
            {
              "hostname": "userstore-0.userstore",
              "port": 1389,
            },
          ],
          "secondaryLdapServers": [
            {
              "hostname": "userstore-2.userstore",
              "port": 1389,
            },
          ],
        },
        "root": {
          "authentication": {
            "simple": {
              "bindDn": "\${admin}",
              "bindPassword": "&{userstore.password}",
            },
          },
          "inheritFrom": "bind",
        },
      },
      "maxConnectionAttempts": 5,
      "queries": {
        "explicit": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
        },
        "generic": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "find-relationship-edges": {
            "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
          },
          "find-relationships-for-resource": {
            "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "get-by-field-value": {
            "_queryFilter": "/\${field} eq "\${value}"",
          },
          "get-notifications-for-user": {
            "_queryFilter": "/receiverId eq "\${userId}"",
            "_sortKeys": "-createDate",
          },
          "get-recons": {
            "_fields": "reconId,mapping,activitydate",
            "_queryFilter": "/entryType eq "summary"",
            "_sortKeys": "-activitydate",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
          "query-cluster-events": {
            "_queryFilter": "/instanceId eq "\${instanceId}"",
          },
          "query-cluster-failed-instances": {
            "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
          },
          "query-cluster-instances": {
            "_queryFilter": "true",
          },
          "query-cluster-running-instances": {
            "_queryFilter": "/state eq 1",
          },
        },
      },
      "resourceMapping": {
        "defaultMapping": {
          "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
        },
        "explicitMapping": {
          "clusteredrecontargetids": {
            "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-recon-clusteredTargetIds",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-recon-id",
                "type": "simple",
              },
              "targetIds": {
                "ldapAttribute": "fr-idm-recon-targetIds",
                "type": "json",
              },
            },
          },
          "dsconfig/attributeValue": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-attribute-value-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "matchAttribute": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-match-attribute",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/characterSet": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-character-set-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowUnclassifiedCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                "type": "simple",
              },
              "characterSet": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-character-set",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minCharacterSets": {
                "ldapAttribute": "ds-cfg-min-character-sets",
                "type": "simple",
              },
            },
          },
          "dsconfig/dictionary": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-dictionary-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "dictionaryFile": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-dictionary-file",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/lengthBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-length-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxPasswordLength": {
                "ldapAttribute": "ds-cfg-max-password-length",
                "type": "simple",
              },
              "minPasswordLength": {
                "ldapAttribute": "ds-cfg-min-password-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/passwordPolicies": {
            "dnTemplate": "cn=Password Policies,cn=config",
            "objectClasses": [
              "ds-cfg-password-policy",
              "ds-cfg-authentication-policy",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowPreEncodedPasswords": {
                "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
                "type": "simple",
              },
              "defaultPasswordStorageScheme": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                "type": "simple",
              },
              "deprecatedPasswordStorageScheme": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
                "type": "simple",
              },
              "maxPasswordAge": {
                "ldapAttribute": "ds-cfg-max-password-age",
                "type": "simple",
              },
              "passwordAttribute": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-password-attribute",
                "type": "simple",
              },
              "passwordHistoryCount": {
                "ldapAttribute": "ds-cfg-password-history-count",
                "type": "simple",
              },
              "validator": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-password-validator",
                "type": "simple",
              },
            },
          },
          "dsconfig/repeatedCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-repeated-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxConsecutiveLength": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-max-consecutive-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/similarityBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-similarity-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minPasswordDifference": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-password-difference",
                "type": "simple",
              },
            },
          },
          "dsconfig/uniqueCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-unique-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minUniqueCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-unique-characters",
                "type": "simple",
              },
            },
          },
          "dsconfig/userDefinedVirtualAttribute": {
            "dnTemplate": "cn=Virtual Attributes,cn=config",
            "objectClasses": [
              "ds-cfg-user-defined-virtual-attribute",
              "ds-cfg-virtual-attribute",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "attributeType": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-attribute-type",
                "type": "simple",
              },
              "baseDn": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-base-dn",
                "type": "simple",
              },
              "conflictBehavior": {
                "ldapAttribute": "ds-cfg-conflict-behavior",
                "type": "simple",
              },
              "enabled": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "filter": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-filter",
                "type": "simple",
              },
              "groupDn": {
                "ldapAttribute": "ds-cfg-group-dn",
                "type": "simple",
              },
              "javaClass": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "scope": {
                "ldapAttribute": "ds-cfg-scope",
                "type": "simple",
              },
              "value": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-value",
                "type": "simple",
              },
            },
          },
          "identities/admin": {
            "dnTemplate": "o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/alpha": {
            "dnTemplate": "o=alpha,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/bravo": {
            "dnTemplate": "o=bravo,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "internal/role": {
            "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "fr-idm-internal-role",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "authzMembers": {
                "isMultiValued": true,
                "propertyName": "authzRoles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "condition": {
                "ldapAttribute": "fr-idm-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "name": {
                "ldapAttribute": "fr-idm-name",
                "type": "simple",
              },
              "privileges": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-privilege",
                "type": "json",
              },
              "temporalConstraints": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-temporal-constraints",
                "type": "json",
              },
            },
          },
          "internal/user": {
            "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-internal-user",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "password": {
                "ldapAttribute": "fr-idm-password",
                "type": "json",
              },
            },
          },
          "link": {
            "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-link",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "firstId": {
                "ldapAttribute": "fr-idm-link-firstId",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-link-qualifier",
                "type": "simple",
              },
              "linkType": {
                "ldapAttribute": "fr-idm-link-type",
                "type": "simple",
              },
              "secondId": {
                "ldapAttribute": "fr-idm-link-secondId",
                "type": "simple",
              },
            },
          },
          "locks": {
            "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-lock",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-lock-nodeid",
                "type": "simple",
              },
            },
          },
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple",
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple",
              },
            },
          },
          "recon/assoc": {
            "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
            "namingStrategy": {
              "dnAttribute": "fr-idm-reconassoc-reconid",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "fr-idm-reconassoc",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "fr-idm-reconassoc-reconid",
                "type": "simple",
              },
              "finishTime": {
                "ldapAttribute": "fr-idm-reconassoc-finishtime",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "subResources": {
              "entry": {
                "namingStrategy": {
                  "dnAttribute": "uid",
                  "type": "clientDnNaming",
                },
                "resource": "recon-assoc-entry",
                "type": "collection",
              },
            },
          },
          "recon/assoc/entry": {
            "objectClasses": [
              "uidObject",
              "fr-idm-reconassocentry",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "action": {
                "ldapAttribute": "fr-idm-reconassocentry-action",
                "type": "simple",
              },
              "ambiguousTargetObjectIds": {
                "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                "type": "simple",
              },
              "exception": {
                "ldapAttribute": "fr-idm-reconassocentry-exception",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "message": {
                "ldapAttribute": "fr-idm-reconassocentry-message",
                "type": "simple",
              },
              "messageDetail": {
                "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                "type": "simple",
              },
              "phase": {
                "ldapAttribute": "fr-idm-reconassocentry-phase",
                "type": "simple",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-reconassocentry-reconid",
                "type": "simple",
              },
              "situation": {
                "ldapAttribute": "fr-idm-reconassocentry-situation",
                "type": "simple",
              },
              "sourceObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "status": {
                "ldapAttribute": "fr-idm-reconassocentry-status",
                "type": "simple",
              },
              "targetObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "resourceName": "recon-assoc-entry",
            "subResourceRouting": [
              {
                "prefix": "entry",
                "template": "recon/assoc/{reconId}/entry",
              },
            ],
          },
          "sync/queue": {
            "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-syncqueue",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "context": {
                "ldapAttribute": "fr-idm-syncqueue-context",
                "type": "json",
              },
              "createDate": {
                "ldapAttribute": "fr-idm-syncqueue-createdate",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-syncqueue-mapping",
                "type": "simple",
              },
              "newObject": {
                "ldapAttribute": "fr-idm-syncqueue-newobject",
                "type": "json",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-syncqueue-nodeid",
                "type": "simple",
              },
              "objectRev": {
                "ldapAttribute": "fr-idm-syncqueue-objectRev",
                "type": "simple",
              },
              "oldObject": {
                "ldapAttribute": "fr-idm-syncqueue-oldobject",
                "type": "json",
              },
              "remainingRetries": {
                "ldapAttribute": "fr-idm-syncqueue-remainingretries",
                "type": "simple",
              },
              "resourceCollection": {
                "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                "type": "simple",
              },
              "resourceId": {
                "ldapAttribute": "fr-idm-syncqueue-resourceid",
                "type": "simple",
              },
              "state": {
                "ldapAttribute": "fr-idm-syncqueue-state",
                "type": "simple",
              },
              "syncAction": {
                "ldapAttribute": "fr-idm-syncqueue-syncaction",
                "type": "simple",
              },
            },
          },
        },
        "genericMapping": {
          "cluster/*": {
            "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-cluster-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
            "objectClasses": [
              "uidObject",
              "fr-idm-cluster-obj",
            ],
          },
          "config": {
            "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
          },
          "file": {
            "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
          },
          "internal/notification": {
            "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-notification-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-notification",
            ],
            "properties": {
              "target": {
                "propertyName": "_notifications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "internal/usermeta": {
            "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "jsonstorage": {
            "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
          },
          "managed/*": {
            "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
            },
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
            },
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference",
              },
            },
          },
          "reconprogressstate": {
            "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
          },
          "relationships": {
            "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-relationship-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
            "objectClasses": [
              "uidObject",
              "fr-idm-relationship",
            ],
          },
          "scheduler": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "scheduler/*": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "ui/*": {
            "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
          },
          "updates": {
            "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
          },
        },
      },
      "rest2LdapOptions": {
        "mvccAttribute": "etag",
        "readOnUpdatePolicy": "controls",
        "returnNullForMissingProperties": true,
        "useMvcc": true,
        "usePermissiveModify": true,
        "useSubtreeDelete": true,
      },
      "security": {
        "keyManager": "jvm",
        "trustManager": "jvm",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/script.idm.json 1`] = `
{
  "idm": {
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": "\${groovy}",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{\${installDir}}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{\${installDir}}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{\${installDir}}/bin/defaults/script",
        },
        "install": {
          "directory": "&{\${installDir}}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/sync/AlphaUser2GoogleApps.sync.json 1`] = `
{
  "_id": "sync/AlphaUser2GoogleApps",
  "consentRequired": false,
  "correlationQuery": [
    {
      "expressionTree": {
        "all": [
          "__NAME__",
        ],
      },
      "file": "ui/correlateTreeToQueryFilter.js",
      "linkQualifier": "default",
      "mapping": "AlphaUser2GoogleApps",
      "type": "text/javascript",
    },
  ],
  "displayName": "AlphaUser2GoogleApps",
  "enableSync": {
    "$bool": "&{esv.gac.enable.mapping}",
  },
  "icon": null,
  "name": "AlphaUser2GoogleApps",
  "onCreate": {
    "globals": {},
    "source": "target.orgUnitPath = "/NewAccounts";",
    "type": "text/javascript",
  },
  "onUpdate": {
    "globals": {},
    "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
    "type": "text/javascript",
  },
  "policies": [
    {
      "action": "EXCEPTION",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "UNLINK",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": {
        "globals": {},
        "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
        "type": "text/javascript",
      },
      "situation": "MISSING",
    },
    {
      "action": "EXCEPTION",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "IGNORE",
      "situation": "UNQUALIFIED",
    },
    {
      "action": "IGNORE",
      "situation": "UNASSIGNED",
    },
    {
      "action": "UNLINK",
      "situation": "LINK_ONLY",
    },
    {
      "action": "IGNORE",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "IGNORE",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "IGNORE",
      "situation": "ALL_GONE",
    },
    {
      "action": "UPDATE",
      "situation": "CONFIRMED",
    },
    {
      "action": "LINK",
      "situation": "FOUND",
    },
    {
      "action": "CREATE",
      "situation": "ABSENT",
    },
  ],
  "properties": [
    {
      "condition": {
        "globals": {},
        "source": "object.custom_password_encrypted != null",
        "type": "text/javascript",
      },
      "source": "custom_password_encrypted",
      "target": "__PASSWORD__",
      "transform": {
        "globals": {},
        "source": "openidm.decrypt(source);",
        "type": "text/javascript",
      },
    },
    {
      "source": "cn",
      "target": "__NAME__",
      "transform": {
        "globals": {},
        "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
        "type": "text/javascript",
      },
    },
    {
      "source": "givenName",
      "target": "givenName",
    },
    {
      "source": "",
      "target": "familyName",
      "transform": {
        "globals": {},
        "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
        "type": "text/javascript",
      },
    },
  ],
  "queuedSync": {
    "enabled": true,
    "maxQueueSize": 20000,
    "maxRetries": 5,
    "pageSize": 100,
    "pollingInterval": 1000,
    "postRetryAction": "logged-ignore",
    "retryDelay": 1000,
  },
  "source": "managed/alpha_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
    "managedAlpha_user_managedBravo_user",
    "managedBravo_user_managedAlpha_user",
  ],
  "target": "system/GoogleApps/__ACCOUNT__",
  "validSource": {
    "globals": {},
    "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
    "type": "text/javascript",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/sync/managedAlpha_application_managedBravo_application.sync.json 1`] = `
{
  "_id": "sync/managedAlpha_application_managedBravo_application",
  "consentRequired": true,
  "displayName": "Test Application Mapping",
  "icon": null,
  "name": "managedAlpha_application_managedBravo_application",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [
    {
      "source": "authoritative",
      "target": "_id",
    },
  ],
  "source": "managed/alpha_application",
  "sourceQuery": {
    "_queryFilter": "(eq "" or eq "")",
  },
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
  ],
  "target": "managed/bravo_application",
  "targetQuery": {
    "_queryFilter": "!(eq "")",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/sync/managedAlpha_user_managedBravo_user.sync.json 1`] = `
{
  "_id": "sync/managedAlpha_user_managedBravo_user",
  "consentRequired": true,
  "displayName": "Test Mapping for Frodo",
  "icon": null,
  "name": "managedAlpha_user_managedBravo_user",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [
    {
      "condition": {
        "globals": {},
        "source": "console.log("Hello World!");",
        "type": "text/javascript",
      },
      "default": [
        "Default value string",
      ],
      "source": "accountStatus",
      "target": "applications",
      "transform": {
        "globals": {},
        "source": "console.log("hello");",
        "type": "text/javascript",
      },
    },
  ],
  "source": "managed/alpha_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
  ],
  "target": "managed/bravo_user",
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/sync/managedBravo_user_managedAlpha_user.sync.json 1`] = `
{
  "_id": "sync/managedBravo_user_managedAlpha_user",
  "consentRequired": false,
  "displayName": "Frodo test mapping",
  "icon": null,
  "name": "managedBravo_user_managedAlpha_user",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
    "managedAlpha_user_managedBravo_user",
  ],
  "target": "managed/alpha_user",
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/sync/managedBravo_user_managedBravo_user.sync.json 1`] = `
{
  "_id": "sync/managedBravo_user_managedBravo_user",
  "consentRequired": false,
  "displayName": "managedBravo_user_managedBravo_user",
  "icon": null,
  "name": "managedBravo_user_managedBravo_user",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-mappings --directory testDir3 --entities-file test/e2e/env/testEntitiesFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/sync/sync.idm.json 1`] = `
{
  "idm": {
    "sync": {
      "_id": "sync",
      "mappings": [
        "file://managedBravo_user_managedBravo_user.sync.json",
        "file://managedAlpha_application_managedBravo_application.sync.json",
        "file://managedAlpha_user_managedBravo_user.sync.json",
        "file://managedBravo_user_managedAlpha_user.sync.json",
        "file://AlphaUser2GoogleApps.sync.json",
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory 1`] = `1`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory 2`] = `""`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/access.idm.json 1`] = `
{
  "idm": {
    "access": {
      "_id": "access",
      "configs": [
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/*",
          "roles": "*",
        },
        {
          "actions": "login,logout",
          "methods": "read,action",
          "pattern": "authentication",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fidc/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "*",
          "pattern": "config/fidc/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themeconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themerealm",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/uilocale/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fieldPolicy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/uiconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/dashboard",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "query",
          "pattern": "info/features",
          "roles": "*",
        },
        {
          "actions": "listPrivileges",
          "methods": "action",
          "pattern": "privilege",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "privilege/*",
          "roles": "*",
        },
        {
          "actions": "validate",
          "methods": "action",
          "pattern": "util/validateQueryFilter",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "checkIfAnyFeatureEnabled('kba')",
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "excludePatterns": "repo,repo/*",
          "methods": "*",
          "pattern": "*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "",
          "methods": "create,read,update,delete,patch,query",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "script",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "command",
          "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
          "methods": "action",
          "pattern": "repo/link",
          "roles": "internal/role/openidm-admin",
        },
        {
          "methods": "create,read,query,patch",
          "pattern": "managed/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read,query",
          "pattern": "internal/role/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "create,read,action,update",
          "pattern": "profile/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/terms",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "identityProviders",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "sendTemplate",
          "methods": "action",
          "pattern": "external/email",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "bind,unbind",
          "customAuthz": "ownDataOnly()",
          "methods": "read,action,delete",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
          "methods": "update,patch,action",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
          "methods": "patch,action",
          "pattern": "selfservice/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
          "methods": "patch,action",
          "pattern": "managed/user",
          "roles": "internal/role/openidm-cert",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_meta', false)",
          "methods": "read",
          "pattern": "internal/usermeta/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_notifications', true)",
          "methods": "read,delete",
          "pattern": "internal/notification/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "deleteNotificationsForTarget",
          "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
          "methods": "action",
          "pattern": "notification",
          "roles": "internal/role/openidm-authorized",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/alphaOrgPrivileges.idm.json 1`] = `
{
  "idm": {
    "alphaOrgPrivileges": {
      "_id": "alphaOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/audit.idm.json 1`] = `
{
  "idm": {
    "audit": {
      "_id": "audit",
      "auditServiceConfig": {
        "availableAuditEventHandlers": [
          "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
          "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
          "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
          "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
          "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
          "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
          "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler",
        ],
        "caseInsensitiveFields": [
          "/access/http/request/headers",
          "/access/http/response/headers",
        ],
        "filterPolicies": {
          "value": {
            "excludeIf": [
              "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
              "/access/http/request/cookies/session-jwt",
              "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
              "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
              "/access/http/request/headers/accept-encoding",
              "/access/http/request/headers/accept-language",
              "/access/http/request/headers/Authorization",
              "/access/http/request/headers/cache-control",
              "/access/http/request/headers/connection",
              "/access/http/request/headers/content-length",
              "/access/http/request/headers/content-type",
              "/access/http/request/headers/proxy-authorization",
              "/access/http/request/headers/X-OpenAM-Password",
              "/access/http/request/headers/X-OpenIDM-Password",
              "/access/http/request/queryParameters/access_token",
              "/access/http/request/queryParameters/IDToken1",
              "/access/http/request/queryParameters/id_token_hint",
              "/access/http/request/queryParameters/Login.Token1",
              "/access/http/request/queryParameters/redirect_uri",
              "/access/http/request/queryParameters/requester",
              "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
              "/access/http/request/queryParameters/tokenId",
              "/access/http/response/headers/Authorization",
              "/access/http/response/headers/Set-Cookie",
              "/access/http/response/headers/X-OpenIDM-Password",
            ],
            "includeIf": [],
          },
        },
        "handlerForQueries": "json",
      },
      "eventHandlers": [
        {
          "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "config": {
            "name": "json",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
        {
          "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "config": {
            "enabled": false,
            "name": "repo",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
      ],
      "eventTopics": {
        "activity": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
          "passwordFields": [
            "password",
          ],
          "watchedFields": [],
        },
        "config": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
        },
      },
      "exceptionFormatter": {
        "file": "bin/defaults/script/audit/stacktraceFormatter.js",
        "type": "text/javascript",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/authentication.idm.json 1`] = `
{
  "idm": {
    "authentication": {
      "_id": "authentication",
      "rsFilter": {
        "augmentSecurityContext": {
          "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
          "type": "text/javascript",
        },
        "cache": {
          "maxTimeout": "300 seconds",
        },
        "scopes": [
          "fr:idm:*",
        ],
        "staticUserMapping": [
          {
            "localUser": "internal/user/idm-provisioning",
            "roles": [
              "internal/role/openidm-admin",
            ],
            "subject": "autoid-resource-server",
          },
        ],
        "subjectMapping": [
          {
            "additionalUserFields": [
              "adminOfOrg",
              "ownerOfOrg",
            ],
            "defaultRoles": [
              "internal/role/openidm-authorized",
            ],
            "propertyMapping": {
              "sub": "_id",
            },
            "queryOnResource": "managed/{{substring realm 1}}_user",
            "userRoles": "authzRoles/*",
          },
        ],
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/bravoOrgPrivileges.idm.json 1`] = `
{
  "idm": {
    "bravoOrgPrivileges": {
      "_id": "bravoOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/baselineDemoEmailVerification.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/baselineDemoEmailVerification": {
      "_id": "emailTemplate/baselineDemoEmailVerification",
      "defaultLocale": "en",
      "displayName": "Baseline Demo Email Verification",
      "enabled": true,
      "from": "security@example.com",
      "html": {
        "en": "<div class="content"><h1 id="emailverification">Email Verification</h1><p><br></p><p>Hello,</p><p>Great to have you on board.</p><p><br></p><hr><h5 id="verifyyouraccount">Verify Your Account</h5><p>Finish the steps of verification for the account by clicking the button below. <br></p><p><br></p><p><row><a href="{{object.resumeURI}}" title="" class="button">Click Here to Verify Your Account</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #f6f6f6; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 600px;"><h1 id="emailverification" style="font-size: 40px; text-align: center;">Email Verification</h1><p><br></p><p>Hello,</p><p>Great to have you on board.</p><p><br></p><hr><h5 id="verifyyouraccount" style="font-size: 24px;">Verify Your Account</h5><p>Finish the steps of verfication for the account by clicking the button below. <br></p><p><br></p><p><row><a href="{{object.resumeURI}}" title class="button" style="background-color: #109cf1; border: none; color: white; padding: 15px 32px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px;">Click Here to Verify Your Account</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com" style="text-decoration: none; color: #109cf1;">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com" style="text-decoration: none; color: #109cf1;">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=" style="text-decoration: none; color: #109cf1;">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #f6f6f6;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 h1 {
 font-size: 40px;
 text-align: center;
}
 h2 {
 font-size: 36px;
}
 h3 {
 font-size: 32px;
}
 h4 {
 font-size: 28px;
}
 h5 {
 font-size: 24px;
}
 h6 {
 font-size: 20px;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 600px 
}
 .button {
 background-color: #109cf1;
 border: none;
 color: white;
 padding: 15px 32px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
}
 ",
      "subject": {
        "en": "Please verify your email address",
      },
      "templateId": "baselineDemoEmailVerification",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/baselineDemoMagicLink.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/baselineDemoMagicLink": {
      "_id": "emailTemplate/baselineDemoMagicLink",
      "defaultLocale": "en",
      "displayName": "Baseline Demo Magic Link",
      "enabled": true,
      "from": "security@example.com",
      "html": {
        "en": "<div class="content"><h1 id="welcomeback">Welcome back</h1><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to sign you into your account.</p><p><br></p><hr><p><row><a href="{{object.resumeURI}}" title="" class="button">Finish Signing In</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body><div class="content"><h1 id="welcomeback">Welcome back</h1><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to sign you into your account.</p><p><br></p><hr><p><row><a href="{{object.resumeURI}}" title class="button">Finish Signing In</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #f6f6f6;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 h1 {
 font-size: 40px;
 text-align: center;
}
 h2 {
 font-size: 36px;
}
 h3 {
 font-size: 32px;
}
 h4 {
 font-size: 28px;
}
 h5 {
 font-size: 24px;
}
 h6 {
 font-size: 20px;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 600px 
}
 .button {
 background-color: #109cf1;
 border: none;
 color: white;
 padding: 15px 32px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
}
 ",
      "subject": {
        "en": "Your sign-in link",
      },
      "templateId": "baselineDemoMagicLink",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/deleteTemplate.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/deleteTemplate": {
      "_id": "emailTemplate/deleteTemplate",
      "defaultLocale": "en",
      "description": "",
      "displayName": "deleteTemplate",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<div class="content"><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Email Title Text"></p><h1 id="emailtitle">Email Title</h1><p>Message text lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Email Title Text"></p><h1 id="emailtitle">Email Title</h1><p>Message text lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
   background-color: #324054;
   color: #455469;
   padding: 60px;
   text-align: center 
}
 a {
   text-decoration: none;
   color: #109cf1;
}
 .content {
   background-color: #fff;
   border-radius: 4px;
   margin: 0 auto;
   padding: 48px;
   width: 235px 
}
",
      "subject": {
        "en": "",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/forgottenUsername.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href="{{object.resumeURI}}">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}">Cliquez ici pour vous connecter</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Cliquez ici pour vous connecter</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frEmailUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frEmailUpdated": {
      "_id": "emailTemplate/frEmailUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account email has changed</h1></div><p>Your ForgeRock Identity Cloud email has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your email has been updated",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frForgotUsername.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frForgotUsername": {
      "_id": "emailTemplate/frForgotUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="height:50px;margin-bottom:16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Forgot your username?</h1></div><p>Your username is <b>{{ object.userName }}</b>.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Sign In to Your Account</a></p><p>If you didn't request this, please ignore this email.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Forgot Username",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frOnboarding.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frOnboarding": {
      "_id": "emailTemplate/frOnboarding",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account is ready</h1></div><p>Your ForgeRock Identity Cloud account is ready. Click the button below to complete registration and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Complete Registration</a></p><p>If you did not request this account, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Complete your ForgeRock Identity Cloud registration",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frPasswordUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frPasswordUpdated": {
      "_id": "emailTemplate/frPasswordUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account password has changed</h1></div><p>Your ForgeRock Identity Cloud password has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your password has been updated",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frProfileUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frProfileUpdated": {
      "_id": "emailTemplate/frProfileUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account profile has changed</h1></div><p>Your ForgeRock Identity Cloud profile has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your profile has been updated",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frResetPassword.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frResetPassword": {
      "_id": "emailTemplate/frResetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Reset your password</h1></div><p>It seems you have forgotten the password for your ForgeRock Identity Cloud account. Click the button below to reset your password and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Reset Password</a></p><p>If you did not request to reset your password, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/frUsernameUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frUsernameUpdated": {
      "_id": "emailTemplate/frUsernameUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account username has changed</h1></div><p>Your ForgeRock Identity Cloud username has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your username has been updated",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/idv.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/idv": {
      "_id": "emailTemplate/idv",
      "defaultLocale": "en",
      "description": "Identity Verification Invitation",
      "displayName": "idv",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<div class="content"><h3 id="clickthelinkbelowtoverifyyouridentity">Click the link below to verify your identity:</h3><p><a href="{{object.resumeURI}}">Verify my identity now</a></p></div>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="clickthelinkbelowtoverifyyouridentity">Click the link below to verify your identity:</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Verify my identity now</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></body></html>",
      },
      "mimeType": "text/html",
      "name": "registration",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "You have been invited to verify your identity",
        "fr": "Créer un nouveau compte",
      },
      "templateId": "idv",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/joiner.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/joiner": {
      "_id": "emailTemplate/joiner",
      "advancedEditor": true,
      "defaultLocale": "en",
      "description": "This email will be sent onCreate of user to the external eMail address provided during creation. An OTP will also be sent to Telephone Number provided during creation to validate the user.  The user will then be able to set their password and ForgeRock Push Authenticator",
      "displayName": "Joiner",
      "enabled": true,
      "from": ""Encore HR" <no-reply@encore.com>",
      "html": {
        "en": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="background-color:#324054;color:#455469;padding:60px;text-align:center">
    <div class="content" style="background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:500px">
      <p>
        <img src="https://encore.forgerock.com/media/logos/encore-icon-dark-logo.png" width="125" title="Welcome to Encore" />
      </p>
      <h1 id="welcometoencore">Welcome to Encore {{object.givenName}} {{object.sn}}</h1>
      <p>Please click on the link below to validate your phone number with a One Time Code that will be sent via SMS or called to you depending on your phone type. </p>
      <p>You will see your UserName and have the ability to set your password that will be used to login to Encore resources.  </p>
      <p>As we believe in enhanced security, you will also be setting up a Push Notification for future use.</p>
      <a href="https://openam-volker-demo.forgeblocks.com/am/XUI/?realm=alpha&amp;authIndexType=service&amp;authIndexValue=wks-NEO&amp;userName={{object.userName}}">Click to Join Encore</a>
    </div>
  </body>
</html>",
      },
      "mimeType": "text/html",
      "styles": "body {
   background-color: #324054;
   color: #455469;
   padding: 60px;
   text-align: center 
}
 a {
   text-decoration: none;
   color: #109cf1;
}
 .content {
   background-color: #fff;
   border-radius: 4px;
   margin: 0 auto;
   padding: 48px;
   width: 235px 
}
 ",
      "subject": {
        "en": "Welcome to Encore!",
      },
      "templateId": "joiner",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/registerPasswordlessDevice.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/registerPasswordlessDevice": {
      "_id": "emailTemplate/registerPasswordlessDevice",
      "defaultLocale": "en",
      "description": "",
      "displayName": "Register Passwordless Device",
      "enabled": true,
      "from": ""ForgeRock Identity Cloud" <no-reply@forgerock.com>",
      "html": {
        "en": "<div class="content"><h1 id="welcomeback">Welcome back</h1><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Passwordless Registration"></p><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to register a new passwordless device.</p><p><br></p><hr><p><a href="{{object.resumeURI}}">Register New Device</a></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h1 id="welcomeback">Welcome back</h1><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Passwordless Registration"></p><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to register a new passwordless device.</p><p><br></p><hr><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Register New Device</a></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com" style="text-decoration: none; color: #109cf1;">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com" style="text-decoration: none; color: #109cf1;">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=" style="text-decoration: none; color: #109cf1;">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
	background-color: #324054;
	color: #455469;
	padding: 60px;
	text-align: center
}

a {
	text-decoration: none;
	color: #109cf1;
}

.content {
	background-color: #fff;
	border-radius: 4px;
	margin: 0 auto;
	padding: 48px;
	width: 235px
}
",
      "subject": {
        "en": "Your magic link is here - register new WebAuthN device",
      },
      "templateId": "registerPasswordlessDevice",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/registration.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/registration": {
      "_id": "emailTemplate/registration",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}">Email verification link</a></p></body></html>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Email verification link</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Register new account",
        "fr": "Créer un nouveau compte",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/resetPassword.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href="{{object.resumeURI}}">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href="{{object.resumeURI}}">Mot de passe lien de réinitialisation</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/updatePassword.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href="{{object.resumeURI}}">Update password link</a></p>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="verifyemailtoupdatepassword">Verify email to update password</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Update password link</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/emailTemplate/welcome.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body><p>Welcome. Your username is '{{object.userName}}'.</p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Your account has been created",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/endpoint/Test.idm.json 1`] = `
{
  "idm": {
    "endpoint/Test": {
      "_id": "endpoint/Test",
      "description": "test",
      "globalsObject": ""  {\\n    \\"request\\": {\\n      \\"method\\": \\"create\\"\\n    }\\n  }"",
      "source": "  (function () {
    if (request.method === 'create') {
      // POST
      return {};
    } else if (request.method === 'read') {
      // GET
      return {};
    } else if (request.method === 'update') {
      // PUT
      return {};
    } else if (request.method === 'patch') {
      return {};
    } else if (request.method === 'delete') {
      return {};
    }
    throw { code: 500, message: 'Unknown error' };
  }());",
      "type": "text/javascript",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/endpoint/testEndpoint2.idm.json 1`] = `
{
  "idm": {
    "endpoint/testEndpoint2": {
      "_id": "endpoint/testEndpoint2",
      "description": "",
      "globalsObject": ""  {\\n    \\"request\\": {\\n      \\"method\\": \\"create\\"\\n    }\\n  }"",
      "source": "  (function () {
    if (request.method === 'create') {
      // POST
      return {};
    } else if (request.method === 'read') {
      // GET
      return {};
    } else if (request.method === 'update') {
      // PUT
      return {};
    } else if (request.method === 'patch') {
      return {};
    } else if (request.method === 'delete') {
      return {};
    }
    throw { code: 500, message: 'Unknown error' };
  }());",
      "type": "text/javascript",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/entityId.idm.json 1`] = `
{
  "idm": {
    "entityId": {
      "_id": "entityId",
      "defaultLocale": "en",
      "displayName": "Frodo Test Email Template Three",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><body><h3>You started a login or profile update that requires MFA. </h3><h4><a href="{{object.resumeURI}}">Click to Proceed</a></h4></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Multi-Factor Email for Identity Cloud login",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/external.email.idm.json 1`] = `
{
  "idm": {
    "external.email": {
      "_id": "external.email",
      "auth": {
        "enable": true,
        "password": "&{aic.customer.sasl.pass}",
        "username": "&{aic.customer.sasl.user|donotuse@pingidentity.com}",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "&{aic.smtp.relay.host|smtp-relay.fr-platform.svc.cluster.local}",
      "port": 25,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": false,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/external.emailDefault.idm.json 1`] = `
{
  "idm": {
    "external.emailDefault": {
      "_id": "external.emailDefault",
      "auth": {
        "enable": true,
        "password": "&{aic.customer.sasl.pass}",
        "username": "&{aic.customer.sasl.user|donotuse@pingidentity.com}",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "&{aic.smtp.relay.host|smtp-relay.fr-platform.svc.cluster.local}",
      "port": 25,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": false,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/fieldPolicy/alpha_user.idm.json 1`] = `
{
  "idm": {
    "fieldPolicy/alpha_user": {
      "_id": "fieldPolicy/alpha_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/alpha_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "alpha_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 10,
          "type": "length-based",
        },
        {
          "_id": "alpha_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "alpha_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "0:abcdefghijklmnopqrstuvwxyz",
            "0:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "0:0123456789",
            "0:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "minCharacterSets": 4,
          "type": "character-set",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/fieldPolicy/bravo_user.idm.json 1`] = `
{
  "idm": {
    "fieldPolicy/bravo_user": {
      "_id": "fieldPolicy/bravo_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/bravo_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "bravo_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based",
        },
        {
          "_id": "bravo_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "bravo_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "type": "character-set",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/internal.idm.json 1`] = `
{
  "idm": {
    "internal": {
      "_id": "internal",
      "objects": [
        {
          "name": "role",
          "properties": {
            "authzMembers": {
              "items": {
                "resourceCollection": [
                  {
                    "conditionalAssociation": true,
                    "label": "User",
                    "notify": true,
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/alpha_application.managed.json 1`] = `
{
  "name": "alpha_application",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "Application Object",
    "icon": "fa-folder",
    "order": [
      "name",
      "description",
      "url",
      "icon",
      "mappingNames",
      "owners",
      "roles",
      "members",
    ],
    "properties": {
      "_id": {
        "description": "Application ID",
        "isPersonal": false,
        "searchable": false,
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "authoritative": {
        "description": "Is this an authoritative application",
        "searchable": false,
        "title": "Authoritative",
        "type": "boolean",
        "viewable": false,
      },
      "connectorId": {
        "description": "Id of the connector associated with the application",
        "searchable": false,
        "title": "Connector ID",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "description": {
        "description": "Application Description",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "viewable": true,
      },
      "icon": {
        "searchable": true,
        "title": "Icon",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "mappingNames": {
        "description": "Names of the sync mappings used by an application with provisioning configured.",
        "items": {
          "title": "Mapping Name Items",
          "type": "string",
        },
        "searchable": true,
        "title": "Sync Mapping Names",
        "type": "array",
        "viewable": true,
      },
      "members": {
        "description": "Application Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Group Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": true,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "applications",
          "reverseRelationship": true,
          "title": "Group Members Items",
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Members",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "name": {
        "description": "Application name",
        "notifyRelationships": [
          "roles",
          "members",
        ],
        "policies": [
          {
            "policyId": "unique",
          },
        ],
        "returnByDefault": true,
        "searchable": true,
        "title": "Name",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "owners": {
        "description": "Application Owners",
        "items": {
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Application _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "ownerOfApp",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Owners",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "roles": {
        "description": "Roles granting users the application",
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Role",
              "notify": true,
              "path": "managed/alpha_role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "applications",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Roles",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "ssoEntities": {
        "description": "SSO Entity Id",
        "properties": {
          "idpLocation": {
            "type": "string",
          },
          "idpPrivateId": {
            "type": "string",
          },
          "spLocation": {
            "type": "string",
          },
          "spPrivate": {
            "type": "string",
          },
        },
        "searchable": false,
        "title": "SSO Entity Id",
        "type": "object",
        "userEditable": false,
        "viewable": false,
      },
      "templateName": {
        "description": "Name of the template the application was created from",
        "searchable": false,
        "title": "Template Name",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "templateVersion": {
        "description": "The template version",
        "searchable": false,
        "title": "Template Version",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "uiConfig": {
        "description": "UI Config",
        "isPersonal": false,
        "properties": {},
        "searchable": false,
        "title": "UI Config",
        "type": "object",
        "usageDescription": "",
        "viewable": false,
      },
      "url": {
        "searchable": true,
        "title": "Url",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
    },
    "required": [
      "name",
    ],
    "title": "Alpha realm - Application",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/alpha_assignment.managed.json 1`] = `
{
  "attributeEncryption": {},
  "name": "alpha_assignment",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "A role assignment",
    "icon": "fa-key",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
    "mat-icon": "vpn_key",
    "order": [
      "_id",
      "name",
      "description",
      "type",
      "mapping",
      "attributes",
      "linkQualifiers",
      "roles",
      "members",
      "condition",
      "weight",
    ],
    "properties": {
      "_id": {
        "description": "The assignment ID",
        "searchable": false,
        "title": "Name",
        "type": "string",
        "viewable": false,
      },
      "attributes": {
        "description": "The attributes operated on by this assignment.",
        "items": {
          "order": [
            "assignmentOperation",
            "unassignmentOperation",
            "name",
            "value",
          ],
          "properties": {
            "assignmentOperation": {
              "description": "Assignment operation",
              "type": "string",
            },
            "name": {
              "description": "Name",
              "type": "string",
            },
            "unassignmentOperation": {
              "description": "Unassignment operation",
              "type": "string",
            },
            "value": {
              "description": "Value",
              "type": "string",
            },
          },
          "required": [],
          "title": "Assignment Attributes Items",
          "type": "object",
        },
        "notifyRelationships": [
          "roles",
          "members",
        ],
        "title": "Assignment Attributes",
        "type": "array",
        "viewable": true,
      },
      "condition": {
        "description": "A conditional filter for this assignment",
        "isConditional": true,
        "searchable": false,
        "title": "Condition",
        "type": "string",
        "viewable": false,
      },
      "description": {
        "description": "The assignment description, used for display purposes.",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "viewable": true,
      },
      "linkQualifiers": {
        "description": "Conditional link qualifiers to restrict this assignment to.",
        "items": {
          "title": "Link Qualifiers Items",
          "type": "string",
        },
        "title": "Link Qualifiers",
        "type": "array",
        "viewable": true,
      },
      "mapping": {
        "description": "The name of the mapping this assignment applies to",
        "policies": [
          {
            "policyId": "mapping-exists",
          },
        ],
        "searchable": true,
        "title": "Mapping",
        "type": "string",
        "viewable": true,
      },
      "members": {
        "description": "Assignment Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Assignment Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociation": true,
              "label": "User",
              "notify": true,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "assignments",
          "reverseRelationship": true,
          "title": "Assignment Members Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Assignment Members",
        "type": "array",
        "viewable": true,
      },
      "name": {
        "description": "The assignment name, used for display purposes.",
        "searchable": true,
        "title": "Name",
        "type": "string",
        "viewable": true,
      },
      "roles": {
        "description": "Managed Roles",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Managed Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Role",
              "notify": true,
              "path": "managed/alpha_role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "assignments",
          "reverseRelationship": true,
          "title": "Managed Roles Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Managed Roles",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "type": {
        "description": "The type of object this assignment represents",
        "title": "Type",
        "type": "string",
        "viewable": true,
      },
      "weight": {
        "description": "The weight of the assignment.",
        "notifyRelationships": [
          "roles",
          "members",
        ],
        "searchable": false,
        "title": "Weight",
        "type": [
          "number",
          "null",
        ],
        "viewable": true,
      },
    },
    "required": [
      "name",
      "description",
      "mapping",
    ],
    "title": "Alpha realm - Assignment",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/alpha_group.managed.json 1`] = `
{
  "name": "alpha_group",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "icon": "fa-group",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
    "mat-icon": "group",
    "order": [
      "_id",
      "name",
      "description",
      "condition",
      "members",
    ],
    "properties": {
      "_id": {
        "description": "Group ID",
        "isPersonal": false,
        "policies": [
          {
            "params": {
              "propertyName": "name",
            },
            "policyId": "id-must-equal-property",
          },
        ],
        "searchable": false,
        "type": "string",
        "usageDescription": "",
        "userEditable": false,
        "viewable": false,
      },
      "condition": {
        "description": "A filter for conditionally assigned members",
        "isConditional": true,
        "policies": [
          {
            "policyId": "valid-query-filter",
          },
        ],
        "searchable": false,
        "title": "Condition",
        "type": "string",
        "viewable": false,
      },
      "description": {
        "description": "Group Description",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "userEditable": false,
        "viewable": true,
      },
      "members": {
        "description": "Group Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Group Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociation": true,
              "label": "User",
              "notify": true,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "groups",
          "reverseRelationship": true,
          "title": "Group Members Items",
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Members",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "name": {
        "description": "Group Name",
        "policies": [
          {
            "policyId": "required",
          },
          {
            "params": {
              "forbiddenChars": [
                "/*",
              ],
            },
            "policyId": "cannot-contain-characters",
          },
        ],
        "searchable": true,
        "title": "Name",
        "type": "string",
        "viewable": true,
      },
    },
    "required": [
      "name",
    ],
    "title": "Alpha realm - Group",
    "viewable": true,
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/alpha_organization.managed.json 1`] = `
{
  "name": "alpha_organization",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "An organization or tenant, whose resources are managed by organizational admins.",
    "icon": "fa-building",
    "mat-icon": "domain",
    "order": [
      "name",
      "description",
      "owners",
      "admins",
      "members",
      "parent",
      "children",
      "adminIDs",
      "ownerIDs",
      "parentAdminIDs",
      "parentOwnerIDs",
      "parentIDs",
    ],
    "properties": {
      "adminIDs": {
        "isVirtual": true,
        "items": {
          "title": "admin ids",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
          ],
          "referencedRelationshipFields": [
            "admins",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "Admin user ids",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "admins": {
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": false,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "adminOfOrg",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "children",
        ],
        "returnByDefault": false,
        "searchable": false,
        "title": "Administrators",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "children": {
        "description": "Child Organizations",
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": true,
              "path": "managed/alpha_organization",
              "query": {
                "fields": [
                  "name",
                  "description",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "parent",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Child Organizations",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "description": {
        "searchable": true,
        "title": "Description",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "members": {
        "items": {
          "notifySelf": false,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": true,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "memberOfOrg",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Members",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "name": {
        "searchable": true,
        "title": "Name",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "ownerIDs": {
        "isVirtual": true,
        "items": {
          "title": "owner ids",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
          ],
          "referencedRelationshipFields": [
            "owners",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "Owner user ids",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "owners": {
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": false,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "ownerOfOrg",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "children",
        ],
        "returnByDefault": false,
        "searchable": false,
        "title": "Owner",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "parent": {
        "description": "Parent Organization",
        "notifyRelationships": [
          "children",
          "members",
        ],
        "notifySelf": true,
        "properties": {
          "_ref": {
            "type": "string",
          },
          "_refProperties": {
            "properties": {
              "_id": {
                "propName": "_id",
                "required": false,
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "resourceCollection": [
          {
            "label": "Organization",
            "notify": false,
            "path": "managed/alpha_organization",
            "query": {
              "fields": [
                "name",
                "description",
              ],
              "queryFilter": "true",
              "sortKeys": [],
            },
          },
        ],
        "returnByDefault": false,
        "reversePropertyName": "children",
        "reverseRelationship": true,
        "searchable": false,
        "title": "Parent Organization",
        "type": "relationship",
        "userEditable": false,
        "validate": true,
        "viewable": true,
      },
      "parentAdminIDs": {
        "isVirtual": true,
        "items": {
          "title": "user ids of parent admins",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "adminIDs",
            "parentAdminIDs",
          ],
          "referencedRelationshipFields": [
            "parent",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "user ids of parent admins",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "parentIDs": {
        "isVirtual": true,
        "items": {
          "title": "parent org ids",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
            "parentIDs",
          ],
          "referencedRelationshipFields": [
            "parent",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "parent org ids",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "parentOwnerIDs": {
        "isVirtual": true,
        "items": {
          "title": "user ids of parent owners",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "ownerIDs",
            "parentOwnerIDs",
          ],
          "referencedRelationshipFields": [
            "parent",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "user ids of parent owners",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
    },
    "required": [
      "name",
    ],
    "title": "Alpha realm - Organization",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/alpha_role.managed.json 1`] = `
{
  "name": "alpha_role",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "",
    "icon": "fa-check-square-o",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
    "mat-icon": "assignment_ind",
    "order": [
      "_id",
      "name",
      "description",
      "members",
      "assignments",
      "applications",
      "condition",
      "temporalConstraints",
    ],
    "properties": {
      "_id": {
        "description": "Role ID",
        "searchable": false,
        "title": "Name",
        "type": "string",
        "viewable": false,
      },
      "applications": {
        "description": "Role Applications",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Role Application Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Application",
              "path": "managed/alpha_application",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "roles",
          "reverseRelationship": true,
          "title": "Role Application Items",
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "members",
        ],
        "relationshipGrantTemporalConstraintsEnforced": true,
        "returnByDefault": false,
        "title": "Applications",
        "type": "array",
        "viewable": false,
      },
      "assignments": {
        "description": "Managed Assignments",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Managed Assignments Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Assignment",
              "path": "managed/alpha_assignment",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "roles",
          "reverseRelationship": true,
          "title": "Managed Assignments Items",
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "members",
        ],
        "returnByDefault": false,
        "title": "Managed Assignments",
        "type": "array",
        "viewable": true,
      },
      "condition": {
        "description": "A conditional filter for this role",
        "isConditional": true,
        "searchable": false,
        "title": "Condition",
        "type": "string",
        "viewable": false,
      },
      "description": {
        "description": "The role description, used for display purposes.",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "viewable": true,
      },
      "members": {
        "description": "Role Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Role Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociation": true,
              "label": "User",
              "notify": true,
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "roles",
          "reverseRelationship": true,
          "title": "Role Members Items",
          "type": "relationship",
          "validate": true,
        },
        "relationshipGrantTemporalConstraintsEnforced": true,
        "returnByDefault": false,
        "title": "Role Members",
        "type": "array",
        "viewable": true,
      },
      "name": {
        "description": "The role name, used for display purposes.",
        "policies": [
          {
            "policyId": "unique",
          },
        ],
        "searchable": true,
        "title": "Name",
        "type": "string",
        "viewable": true,
      },
      "temporalConstraints": {
        "description": "An array of temporal constraints for a role",
        "isTemporalConstraint": true,
        "items": {
          "order": [
            "duration",
          ],
          "properties": {
            "duration": {
              "description": "Duration",
              "type": "string",
            },
          },
          "required": [
            "duration",
          ],
          "title": "Temporal Constraints Items",
          "type": "object",
        },
        "notifyRelationships": [
          "members",
        ],
        "returnByDefault": true,
        "title": "Temporal Constraints",
        "type": "array",
        "viewable": false,
      },
    },
    "required": [
      "name",
    ],
    "title": "Alpha realm - Role",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/alpha_user.managed.json 1`] = `
{
  "lastSync": {
    "effectiveAssignmentsProperty": "effectiveAssignments",
    "lastSyncProperty": "lastSync",
  },
  "name": "alpha_user",
  "notifications": {},
  "schema": {
    "$schema": "http://json-schema.org/draft-03/schema",
    "icon": "fa-user",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
    "mat-icon": "people",
    "order": [
      "_id",
      "userName",
      "password",
      "givenName",
      "cn",
      "sn",
      "mail",
      "profileImage",
      "description",
      "accountStatus",
      "telephoneNumber",
      "postalAddress",
      "city",
      "postalCode",
      "country",
      "stateProvince",
      "roles",
      "assignments",
      "groups",
      "applications",
      "manager",
      "authzRoles",
      "reports",
      "effectiveRoles",
      "effectiveAssignments",
      "effectiveGroups",
      "effectiveApplications",
      "lastSync",
      "kbaInfo",
      "preferences",
      "consentedMappings",
      "ownerOfOrg",
      "adminOfOrg",
      "memberOfOrg",
      "memberOfOrgIDs",
      "ownerOfApp",
      "frIndexedString1",
      "frIndexedString2",
      "frIndexedString3",
      "frIndexedString4",
      "frIndexedString5",
      "frUnindexedString1",
      "frUnindexedString2",
      "frUnindexedString3",
      "frUnindexedString4",
      "frUnindexedString5",
      "frIndexedMultivalued1",
      "frIndexedMultivalued2",
      "frIndexedMultivalued3",
      "frIndexedMultivalued4",
      "frIndexedMultivalued5",
      "frUnindexedMultivalued1",
      "frUnindexedMultivalued2",
      "frUnindexedMultivalued3",
      "frUnindexedMultivalued4",
      "frUnindexedMultivalued5",
      "frIndexedDate1",
      "frIndexedDate2",
      "frIndexedDate3",
      "frIndexedDate4",
      "frIndexedDate5",
      "frUnindexedDate1",
      "frUnindexedDate2",
      "frUnindexedDate3",
      "frUnindexedDate4",
      "frUnindexedDate5",
      "frIndexedInteger1",
      "frIndexedInteger2",
      "frIndexedInteger3",
      "frIndexedInteger4",
      "frIndexedInteger5",
      "frUnindexedInteger1",
      "frUnindexedInteger2",
      "frUnindexedInteger3",
      "frUnindexedInteger4",
      "frUnindexedInteger5",
      "assignedDashboard",
    ],
    "properties": {
      "_id": {
        "description": "User ID",
        "isPersonal": false,
        "policies": [
          {
            "params": {
              "forbiddenChars": [
                "/",
              ],
            },
            "policyId": "cannot-contain-characters",
          },
        ],
        "searchable": false,
        "type": "string",
        "usageDescription": "",
        "userEditable": false,
        "viewable": false,
      },
      "accountStatus": {
        "default": "active",
        "description": "Status",
        "isPersonal": false,
        "searchable": true,
        "title": "Status",
        "type": "string",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "adminOfOrg": {
        "items": {
          "notifySelf": false,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": true,
              "path": "managed/alpha_organization",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "admins",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Organizations I Administer",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "aliasList": {
        "description": "List of identity aliases used primarily to record social IdP subjects for this user",
        "isVirtual": false,
        "items": {
          "title": "User Alias Names Items",
          "type": "string",
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "User Alias Names List",
        "type": "array",
        "userEditable": true,
        "viewable": false,
      },
      "applications": {
        "description": "Applications",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Groups Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Application",
              "path": "managed/alpha_application",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [
                  "name",
                ],
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Groups Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Applications",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": false,
      },
      "assignedDashboard": {
        "description": "List of items to click on for this user",
        "isVirtual": true,
        "items": {
          "title": "Assigned Dashboard Items",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "name",
          ],
          "referencedRelationshipFields": [
            [
              "roles",
              "applications",
            ],
            [
              "applications",
            ],
          ],
        },
        "searchable": false,
        "title": "Assigned Dashboard",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "assignments": {
        "description": "Assignments",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Provisioning Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Assignment",
              "path": "managed/alpha_assignment",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Assignments Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Assignments",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "authzRoles": {
        "description": "Authorization Roles",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Authorization Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Internal Role",
              "path": "internal/role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "authzMembers",
          "reverseRelationship": true,
          "title": "Authorization Roles Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Authorization Roles",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "city": {
        "description": "City",
        "isPersonal": false,
        "title": "City",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "cn": {
        "default": "{{givenName}} {{sn}}",
        "description": "Common Name",
        "isPersonal": true,
        "scope": "private",
        "searchable": false,
        "title": "Common Name",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "consentedMappings": {
        "description": "Consented Mappings",
        "isPersonal": false,
        "isVirtual": false,
        "items": {
          "items": {
            "order": [
              "mapping",
              "consentDate",
            ],
            "properties": {
              "consentDate": {
                "description": "Consent Date",
                "searchable": true,
                "title": "Consent Date",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "mapping": {
                "description": "Mapping",
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "mapping",
              "consentDate",
            ],
            "title": "Consented Mappings Item",
            "type": "object",
          },
          "title": "Consented Mappings Items",
          "type": "array",
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Consented Mappings",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "country": {
        "description": "Country",
        "isPersonal": false,
        "title": "Country",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "description": {
        "description": "Description",
        "isPersonal": false,
        "searchable": true,
        "title": "Description",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "effectiveApplications": {
        "description": "Effective Applications",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Assigned Application Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedObjectFields": [
            "name",
          ],
          "referencedRelationshipFields": [
            [
              "roles",
              "applications",
            ],
            [
              "applications",
            ],
          ],
        },
        "returnByDefault": true,
        "title": "Effective Applications",
        "type": "array",
        "viewable": false,
      },
      "effectiveAssignments": {
        "description": "Effective Assignments",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Assignments Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedObjectFields": [
            "*",
          ],
          "referencedRelationshipFields": [
            [
              "roles",
              "assignments",
            ],
            [
              "assignments",
            ],
          ],
        },
        "returnByDefault": true,
        "title": "Effective Assignments",
        "type": "array",
        "usageDescription": "",
        "viewable": false,
      },
      "effectiveGroups": {
        "description": "Effective Groups",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Groups Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedRelationshipFields": [
            "groups",
          ],
        },
        "returnByDefault": true,
        "title": "Effective Groups",
        "type": "array",
        "usageDescription": "",
        "viewable": false,
      },
      "effectiveRoles": {
        "description": "Effective Roles",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Roles Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedRelationshipFields": [
            "roles",
          ],
        },
        "returnByDefault": true,
        "title": "Effective Roles",
        "type": "array",
        "usageDescription": "",
        "viewable": false,
      },
      "frIndexedDate1": {
        "description": "Generic Indexed Date 1",
        "isPersonal": false,
        "title": "Generic Indexed Date 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate2": {
        "description": "Generic Indexed Date 2",
        "isPersonal": false,
        "title": "Generic Indexed Date 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate3": {
        "description": "Generic Indexed Date 3",
        "isPersonal": false,
        "title": "Generic Indexed Date 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate4": {
        "description": "Generic Indexed Date 4",
        "isPersonal": false,
        "title": "Generic Indexed Date 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate5": {
        "description": "Generic Indexed Date 5",
        "isPersonal": false,
        "title": "Generic Indexed Date 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger1": {
        "description": "Generic Indexed Integer 1",
        "isPersonal": false,
        "title": "Generic Indexed Integer 1",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger2": {
        "description": "Generic Indexed Integer 2",
        "isPersonal": false,
        "title": "Generic Indexed Integer 2",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger3": {
        "description": "Generic Indexed Integer 3",
        "isPersonal": false,
        "title": "Generic Indexed Integer 3",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger4": {
        "description": "Generic Indexed Integer 4",
        "isPersonal": false,
        "title": "Generic Indexed Integer 4",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger5": {
        "description": "Generic Indexed Integer 5",
        "isPersonal": false,
        "title": "Generic Indexed Integer 5",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued1": {
        "description": "Generic Indexed Multivalue 1",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 1",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued2": {
        "description": "Generic Indexed Multivalue 2",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 2",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued3": {
        "description": "Generic Indexed Multivalue 3",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 3",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued4": {
        "description": "Generic Indexed Multivalue 4",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 4",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued5": {
        "description": "Generic Indexed Multivalue 5",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 5",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString1": {
        "description": "Generic Indexed String 1",
        "isPersonal": false,
        "title": "Generic Indexed String 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString2": {
        "description": "Generic Indexed String 2",
        "isPersonal": false,
        "title": "Generic Indexed String 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString3": {
        "description": "Generic Indexed String 3",
        "isPersonal": false,
        "title": "Generic Indexed String 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString4": {
        "description": "Generic Indexed String 4",
        "isPersonal": false,
        "title": "Generic Indexed String 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString5": {
        "description": "Generic Indexed String 5",
        "isPersonal": false,
        "title": "Generic Indexed String 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate1": {
        "description": "Generic Unindexed Date 1",
        "isPersonal": false,
        "title": "Generic Unindexed Date 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate2": {
        "description": "Generic Unindexed Date 2",
        "isPersonal": false,
        "title": "Generic Unindexed Date 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate3": {
        "description": "Generic Unindexed Date 3",
        "isPersonal": false,
        "title": "Generic Unindexed Date 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate4": {
        "description": "Generic Unindexed Date 4",
        "isPersonal": false,
        "title": "Generic Unindexed Date 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate5": {
        "description": "Generic Unindexed Date 5",
        "isPersonal": false,
        "title": "Generic Unindexed Date 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger1": {
        "description": "Generic Unindexed Integer 1",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 1",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger2": {
        "description": "Generic Unindexed Integer 2",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 2",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger3": {
        "description": "Generic Unindexed Integer 3",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 3",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger4": {
        "description": "Generic Unindexed Integer 4",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 4",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger5": {
        "description": "Generic Unindexed Integer 5",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 5",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued1": {
        "description": "Generic Unindexed Multivalue 1",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 1",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued2": {
        "description": "Generic Unindexed Multivalue 2",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 2",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued3": {
        "description": "Generic Unindexed Multivalue 3",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 3",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued4": {
        "description": "Generic Unindexed Multivalue 4",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 4",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued5": {
        "description": "Generic Unindexed Multivalue 5",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 5",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString1": {
        "description": "Generic Unindexed String 1",
        "isPersonal": false,
        "title": "Generic Unindexed String 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString2": {
        "description": "Generic Unindexed String 2",
        "isPersonal": false,
        "title": "Generic Unindexed String 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString3": {
        "description": "Generic Unindexed String 3",
        "isPersonal": false,
        "title": "Generic Unindexed String 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString4": {
        "description": "Generic Unindexed String 4",
        "isPersonal": false,
        "title": "Generic Unindexed String 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString5": {
        "description": "Generic Unindexed String 5",
        "isPersonal": false,
        "title": "Generic Unindexed String 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "givenName": {
        "description": "First Name",
        "isPersonal": true,
        "searchable": true,
        "title": "First Name",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "groups": {
        "description": "Groups",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Groups Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Group",
              "path": "managed/alpha_group",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Groups Items",
          "type": "relationship",
          "validate": true,
        },
        "relationshipGrantTemporalConstraintsEnforced": false,
        "returnByDefault": false,
        "title": "Groups",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "kbaInfo": {
        "description": "KBA Info",
        "isPersonal": true,
        "items": {
          "order": [
            "answer",
            "customQuestion",
            "questionId",
          ],
          "properties": {
            "answer": {
              "description": "Answer",
              "type": "string",
            },
            "customQuestion": {
              "description": "Custom question",
              "type": "string",
            },
            "questionId": {
              "description": "Question ID",
              "type": "string",
            },
          },
          "required": [],
          "title": "KBA Info Items",
          "type": "object",
        },
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "lastSync": {
        "description": "Last Sync timestamp",
        "isPersonal": false,
        "order": [
          "effectiveAssignments",
          "timestamp",
        ],
        "properties": {
          "effectiveAssignments": {
            "description": "Effective Assignments",
            "items": {
              "title": "Effective Assignments Items",
              "type": "object",
            },
            "title": "Effective Assignments",
            "type": "array",
          },
          "timestamp": {
            "description": "Timestamp",
            "type": "string",
          },
        },
        "required": [],
        "scope": "private",
        "searchable": false,
        "title": "Last Sync timestamp",
        "type": "object",
        "usageDescription": "",
        "viewable": false,
      },
      "mail": {
        "description": "Email Address",
        "isPersonal": true,
        "policies": [
          {
            "policyId": "valid-email-address-format",
          },
        ],
        "searchable": true,
        "title": "Email Address",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "manager": {
        "description": "Manager",
        "isPersonal": false,
        "properties": {
          "_ref": {
            "description": "References a relationship from a managed object",
            "type": "string",
          },
          "_refProperties": {
            "description": "Supports metadata within the relationship",
            "properties": {
              "_id": {
                "description": "_refProperties object ID",
                "type": "string",
              },
            },
            "title": "Manager _refProperties",
            "type": "object",
          },
        },
        "resourceCollection": [
          {
            "label": "User",
            "path": "managed/alpha_user",
            "query": {
              "fields": [
                "userName",
                "givenName",
                "sn",
              ],
              "queryFilter": "true",
            },
          },
        ],
        "reversePropertyName": "reports",
        "reverseRelationship": true,
        "searchable": false,
        "title": "Manager",
        "type": "relationship",
        "usageDescription": "",
        "userEditable": false,
        "validate": true,
        "viewable": true,
      },
      "memberOfOrg": {
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": false,
              "path": "managed/alpha_organization",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Organizations to which I Belong",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "memberOfOrgIDs": {
        "isVirtual": true,
        "items": {
          "title": "org identifiers",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
            "parentIDs",
          ],
          "referencedRelationshipFields": [
            "memberOfOrg",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "MemberOfOrgIDs",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "ownerOfApp": {
        "items": {
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Application",
              "path": "managed/alpha_application",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [
                  "name",
                ],
              },
            },
          ],
          "reversePropertyName": "owners",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Applications I Own",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "ownerOfOrg": {
        "items": {
          "notifySelf": false,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": true,
              "path": "managed/alpha_organization",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "owners",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Organizations I Own",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "password": {
        "description": "Password",
        "isPersonal": false,
        "isProtected": true,
        "scope": "private",
        "searchable": false,
        "title": "Password",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "postalAddress": {
        "description": "Address 1",
        "isPersonal": true,
        "title": "Address 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "postalCode": {
        "description": "Postal Code",
        "isPersonal": false,
        "title": "Postal Code",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "preferences": {
        "description": "Preferences",
        "isPersonal": false,
        "order": [
          "updates",
          "marketing",
        ],
        "properties": {
          "marketing": {
            "description": "Send me special offers and services",
            "type": "boolean",
          },
          "updates": {
            "description": "Send me news and updates",
            "type": "boolean",
          },
        },
        "required": [],
        "searchable": false,
        "title": "Preferences",
        "type": "object",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "profileImage": {
        "description": "Profile Image",
        "isPersonal": true,
        "searchable": true,
        "title": "Profile Image",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "reports": {
        "description": "Direct Reports",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Direct Reports Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "path": "managed/alpha_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "manager",
          "reverseRelationship": true,
          "title": "Direct Reports Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Direct Reports",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "roles": {
        "description": "Provisioning Roles",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Provisioning Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Role",
              "path": "managed/alpha_role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Provisioning Roles Items",
          "type": "relationship",
          "validate": true,
        },
        "relationshipGrantTemporalConstraintsEnforced": true,
        "returnByDefault": false,
        "title": "Provisioning Roles",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "sn": {
        "description": "Last Name",
        "isPersonal": true,
        "searchable": true,
        "title": "Last Name",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "stateProvince": {
        "description": "State/Province",
        "isPersonal": false,
        "title": "State/Province",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "telephoneNumber": {
        "description": "Telephone Number",
        "isPersonal": true,
        "pattern": "^\\+?([0-9\\- \\(\\)])*$",
        "title": "Telephone Number",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "userName": {
        "description": "Username",
        "isPersonal": true,
        "minLength": 1,
        "policies": [
          {
            "policyId": "valid-username",
          },
          {
            "params": {
              "forbiddenChars": [
                "/",
              ],
            },
            "policyId": "cannot-contain-characters",
          },
          {
            "params": {
              "minLength": 1,
            },
            "policyId": "minimum-length",
          },
          {
            "params": {
              "maxLength": 255,
            },
            "policyId": "maximum-length",
          },
        ],
        "searchable": true,
        "title": "Username",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
    },
    "required": [
      "userName",
      "givenName",
      "sn",
      "mail",
    ],
    "title": "Alpha realm - User",
    "type": "object",
    "viewable": true,
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/bravo_application.managed.json 1`] = `
{
  "name": "bravo_application",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "Application Object",
    "icon": "fa-folder",
    "order": [
      "name",
      "description",
      "url",
      "icon",
      "mappingNames",
      "owners",
      "roles",
      "members",
    ],
    "properties": {
      "_id": {
        "description": "Application ID",
        "isPersonal": false,
        "searchable": false,
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "authoritative": {
        "description": "Is this an authoritative application",
        "searchable": false,
        "title": "Authoritative",
        "type": "boolean",
        "viewable": false,
      },
      "connectorId": {
        "description": "Id of the connector associated with the application",
        "searchable": false,
        "title": "Connector ID",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "description": {
        "description": "Application Description",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "viewable": true,
      },
      "icon": {
        "searchable": true,
        "title": "Icon",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "mappingNames": {
        "description": "Names of the sync mappings used by an application with provisioning configured.",
        "items": {
          "title": "Mapping Name Items",
          "type": "string",
        },
        "searchable": true,
        "title": "Sync Mapping Names",
        "type": "array",
        "viewable": true,
      },
      "members": {
        "description": "Application Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Group Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": true,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "applications",
          "reverseRelationship": true,
          "title": "Group Members Items",
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Members",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "name": {
        "description": "Application name",
        "notifyRelationships": [
          "roles",
          "members",
        ],
        "policies": [
          {
            "policyId": "unique",
          },
        ],
        "returnByDefault": true,
        "searchable": true,
        "title": "Name",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "owners": {
        "description": "Application Owners",
        "items": {
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Application _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "ownerOfApp",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Owners",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "roles": {
        "description": "Roles granting users the application",
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Role",
              "notify": true,
              "path": "managed/bravo_role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "applications",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Roles",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "ssoEntities": {
        "description": "SSO Entity Id",
        "properties": {
          "idpLocation": {
            "type": "string",
          },
          "idpPrivateId": {
            "type": "string",
          },
          "spLocation": {
            "type": "string",
          },
          "spPrivate": {
            "type": "string",
          },
        },
        "searchable": false,
        "title": "SSO Entity Id",
        "type": "object",
        "userEditable": false,
        "viewable": false,
      },
      "templateName": {
        "description": "Name of the template the application was created from",
        "searchable": false,
        "title": "Template Name",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "templateVersion": {
        "description": "The template version",
        "searchable": false,
        "title": "Template Version",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "uiConfig": {
        "description": "UI Config",
        "isPersonal": false,
        "properties": {},
        "searchable": false,
        "title": "UI Config",
        "type": "object",
        "usageDescription": "",
        "viewable": false,
      },
      "url": {
        "searchable": true,
        "title": "Url",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
    },
    "required": [
      "name",
    ],
    "title": "Bravo realm - Application",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/bravo_assignment.managed.json 1`] = `
{
  "attributeEncryption": {},
  "name": "bravo_assignment",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "A role assignment",
    "icon": "fa-key",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
    "mat-icon": "vpn_key",
    "order": [
      "_id",
      "name",
      "description",
      "type",
      "mapping",
      "attributes",
      "linkQualifiers",
      "roles",
      "members",
      "condition",
      "weight",
    ],
    "properties": {
      "_id": {
        "description": "The assignment ID",
        "searchable": false,
        "title": "Name",
        "type": "string",
        "viewable": false,
      },
      "attributes": {
        "description": "The attributes operated on by this assignment.",
        "items": {
          "order": [
            "assignmentOperation",
            "unassignmentOperation",
            "name",
            "value",
          ],
          "properties": {
            "assignmentOperation": {
              "description": "Assignment operation",
              "type": "string",
            },
            "name": {
              "description": "Name",
              "type": "string",
            },
            "unassignmentOperation": {
              "description": "Unassignment operation",
              "type": "string",
            },
            "value": {
              "description": "Value",
              "type": "string",
            },
          },
          "required": [],
          "title": "Assignment Attributes Items",
          "type": "object",
        },
        "notifyRelationships": [
          "roles",
          "members",
        ],
        "title": "Assignment Attributes",
        "type": "array",
        "viewable": true,
      },
      "condition": {
        "description": "A conditional filter for this assignment",
        "isConditional": true,
        "searchable": false,
        "title": "Condition",
        "type": "string",
        "viewable": false,
      },
      "description": {
        "description": "The assignment description, used for display purposes.",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "viewable": true,
      },
      "linkQualifiers": {
        "description": "Conditional link qualifiers to restrict this assignment to.",
        "items": {
          "title": "Link Qualifiers Items",
          "type": "string",
        },
        "title": "Link Qualifiers",
        "type": "array",
        "viewable": true,
      },
      "mapping": {
        "description": "The name of the mapping this assignment applies to",
        "policies": [
          {
            "policyId": "mapping-exists",
          },
        ],
        "searchable": true,
        "title": "Mapping",
        "type": "string",
        "viewable": true,
      },
      "members": {
        "description": "Assignment Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Assignment Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociation": true,
              "label": "User",
              "notify": true,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "assignments",
          "reverseRelationship": true,
          "title": "Assignment Members Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Assignment Members",
        "type": "array",
        "viewable": true,
      },
      "name": {
        "description": "The assignment name, used for display purposes.",
        "searchable": true,
        "title": "Name",
        "type": "string",
        "viewable": true,
      },
      "roles": {
        "description": "Managed Roles",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Managed Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Role",
              "notify": true,
              "path": "managed/bravo_role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "assignments",
          "reverseRelationship": true,
          "title": "Managed Roles Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Managed Roles",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "type": {
        "description": "The type of object this assignment represents",
        "title": "Type",
        "type": "string",
        "viewable": true,
      },
      "weight": {
        "description": "The weight of the assignment.",
        "notifyRelationships": [
          "roles",
          "members",
        ],
        "searchable": false,
        "title": "Weight",
        "type": [
          "number",
          "null",
        ],
        "viewable": true,
      },
    },
    "required": [
      "name",
      "description",
      "mapping",
    ],
    "title": "Bravo realm - Assignment",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/bravo_group.managed.json 1`] = `
{
  "name": "bravo_group",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "icon": "fa-group",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
    "mat-icon": "group",
    "order": [
      "_id",
      "name",
      "description",
      "condition",
      "members",
    ],
    "properties": {
      "_id": {
        "description": "Group ID",
        "isPersonal": false,
        "policies": [
          {
            "params": {
              "propertyName": "name",
            },
            "policyId": "id-must-equal-property",
          },
        ],
        "searchable": false,
        "type": "string",
        "usageDescription": "",
        "userEditable": false,
        "viewable": false,
      },
      "condition": {
        "description": "A filter for conditionally assigned members",
        "isConditional": true,
        "policies": [
          {
            "policyId": "valid-query-filter",
          },
        ],
        "searchable": false,
        "title": "Condition",
        "type": "string",
        "viewable": false,
      },
      "description": {
        "description": "Group Description",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "userEditable": false,
        "viewable": true,
      },
      "members": {
        "description": "Group Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Group Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociation": true,
              "label": "User",
              "notify": true,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "groups",
          "reverseRelationship": true,
          "title": "Group Members Items",
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Members",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "name": {
        "description": "Group Name",
        "policies": [
          {
            "policyId": "required",
          },
          {
            "params": {
              "forbiddenChars": [
                "/*",
              ],
            },
            "policyId": "cannot-contain-characters",
          },
        ],
        "searchable": true,
        "title": "Name",
        "type": "string",
        "viewable": true,
      },
    },
    "required": [
      "name",
    ],
    "title": "Bravo realm - Group",
    "viewable": true,
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/bravo_organization.managed.json 1`] = `
{
  "name": "bravo_organization",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "An organization or tenant, whose resources are managed by organizational admins.",
    "icon": "fa-building",
    "mat-icon": "domain",
    "order": [
      "name",
      "description",
      "owners",
      "admins",
      "members",
      "parent",
      "children",
      "adminIDs",
      "ownerIDs",
      "parentAdminIDs",
      "parentOwnerIDs",
      "parentIDs",
    ],
    "properties": {
      "adminIDs": {
        "isVirtual": true,
        "items": {
          "title": "admin ids",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
          ],
          "referencedRelationshipFields": [
            "admins",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "Admin user ids",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "admins": {
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": false,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "adminOfOrg",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "children",
        ],
        "returnByDefault": false,
        "searchable": false,
        "title": "Administrators",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "children": {
        "description": "Child Organizations",
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": true,
              "path": "managed/bravo_organization",
              "query": {
                "fields": [
                  "name",
                  "description",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "parent",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Child Organizations",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "description": {
        "searchable": true,
        "title": "Description",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "members": {
        "items": {
          "notifySelf": false,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": true,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "memberOfOrg",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Members",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "name": {
        "searchable": true,
        "title": "Name",
        "type": "string",
        "userEditable": true,
        "viewable": true,
      },
      "ownerIDs": {
        "isVirtual": true,
        "items": {
          "title": "owner ids",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
          ],
          "referencedRelationshipFields": [
            "owners",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "Owner user ids",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "owners": {
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "notify": false,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "ownerOfOrg",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "children",
        ],
        "returnByDefault": false,
        "searchable": false,
        "title": "Owner",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "parent": {
        "description": "Parent Organization",
        "notifyRelationships": [
          "children",
          "members",
        ],
        "notifySelf": true,
        "properties": {
          "_ref": {
            "type": "string",
          },
          "_refProperties": {
            "properties": {
              "_id": {
                "propName": "_id",
                "required": false,
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "resourceCollection": [
          {
            "label": "Organization",
            "notify": false,
            "path": "managed/bravo_organization",
            "query": {
              "fields": [
                "name",
                "description",
              ],
              "queryFilter": "true",
              "sortKeys": [],
            },
          },
        ],
        "returnByDefault": false,
        "reversePropertyName": "children",
        "reverseRelationship": true,
        "searchable": false,
        "title": "Parent Organization",
        "type": "relationship",
        "userEditable": false,
        "validate": true,
        "viewable": true,
      },
      "parentAdminIDs": {
        "isVirtual": true,
        "items": {
          "title": "user ids of parent admins",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "adminIDs",
            "parentAdminIDs",
          ],
          "referencedRelationshipFields": [
            "parent",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "user ids of parent admins",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "parentIDs": {
        "isVirtual": true,
        "items": {
          "title": "parent org ids",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
            "parentIDs",
          ],
          "referencedRelationshipFields": [
            "parent",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "parent org ids",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "parentOwnerIDs": {
        "isVirtual": true,
        "items": {
          "title": "user ids of parent owners",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "ownerIDs",
            "parentOwnerIDs",
          ],
          "referencedRelationshipFields": [
            "parent",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "user ids of parent owners",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
    },
    "required": [
      "name",
    ],
    "title": "Bravo realm - Organization",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/bravo_role.managed.json 1`] = `
{
  "name": "bravo_role",
  "schema": {
    "$schema": "http://forgerock.org/json-schema#",
    "description": "",
    "icon": "fa-check-square-o",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
    "mat-icon": "assignment_ind",
    "order": [
      "_id",
      "name",
      "description",
      "members",
      "assignments",
      "applications",
      "condition",
      "temporalConstraints",
    ],
    "properties": {
      "_id": {
        "description": "Role ID",
        "searchable": false,
        "title": "Name",
        "type": "string",
        "viewable": false,
      },
      "applications": {
        "description": "Role Applications",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Role Application Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Application",
              "path": "managed/bravo_application",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "roles",
          "reverseRelationship": true,
          "title": "Role Application Items",
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "members",
        ],
        "relationshipGrantTemporalConstraintsEnforced": true,
        "returnByDefault": false,
        "title": "Applications",
        "type": "array",
        "viewable": false,
      },
      "assignments": {
        "description": "Managed Assignments",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Managed Assignments Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Assignment",
              "path": "managed/bravo_assignment",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "roles",
          "reverseRelationship": true,
          "title": "Managed Assignments Items",
          "type": "relationship",
          "validate": true,
        },
        "notifyRelationships": [
          "members",
        ],
        "returnByDefault": false,
        "title": "Managed Assignments",
        "type": "array",
        "viewable": true,
      },
      "condition": {
        "description": "A conditional filter for this role",
        "isConditional": true,
        "searchable": false,
        "title": "Condition",
        "type": "string",
        "viewable": false,
      },
      "description": {
        "description": "The role description, used for display purposes.",
        "searchable": true,
        "title": "Description",
        "type": "string",
        "viewable": true,
      },
      "members": {
        "description": "Role Members",
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Role Members Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociation": true,
              "label": "User",
              "notify": true,
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "roles",
          "reverseRelationship": true,
          "title": "Role Members Items",
          "type": "relationship",
          "validate": true,
        },
        "relationshipGrantTemporalConstraintsEnforced": true,
        "returnByDefault": false,
        "title": "Role Members",
        "type": "array",
        "viewable": true,
      },
      "name": {
        "description": "The role name, used for display purposes.",
        "policies": [
          {
            "policyId": "unique",
          },
        ],
        "searchable": true,
        "title": "Name",
        "type": "string",
        "viewable": true,
      },
      "temporalConstraints": {
        "description": "An array of temporal constraints for a role",
        "isTemporalConstraint": true,
        "items": {
          "order": [
            "duration",
          ],
          "properties": {
            "duration": {
              "description": "Duration",
              "type": "string",
            },
          },
          "required": [
            "duration",
          ],
          "title": "Temporal Constraints Items",
          "type": "object",
        },
        "notifyRelationships": [
          "members",
        ],
        "returnByDefault": true,
        "title": "Temporal Constraints",
        "type": "array",
        "viewable": false,
      },
    },
    "required": [
      "name",
    ],
    "title": "Bravo realm - Role",
    "type": "object",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/bravo_user.managed.json 1`] = `
{
  "lastSync": {
    "effectiveAssignmentsProperty": "effectiveAssignments",
    "lastSyncProperty": "lastSync",
  },
  "name": "bravo_user",
  "notifications": {},
  "schema": {
    "$schema": "http://json-schema.org/draft-03/schema",
    "icon": "fa-user",
    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
    "mat-icon": "people",
    "order": [
      "_id",
      "userName",
      "password",
      "givenName",
      "cn",
      "sn",
      "mail",
      "profileImage",
      "description",
      "accountStatus",
      "telephoneNumber",
      "postalAddress",
      "city",
      "postalCode",
      "country",
      "stateProvince",
      "roles",
      "assignments",
      "groups",
      "applications",
      "manager",
      "authzRoles",
      "reports",
      "effectiveRoles",
      "effectiveAssignments",
      "effectiveGroups",
      "effectiveApplications",
      "lastSync",
      "kbaInfo",
      "preferences",
      "consentedMappings",
      "ownerOfOrg",
      "adminOfOrg",
      "memberOfOrg",
      "memberOfOrgIDs",
      "ownerOfApp",
      "frIndexedString1",
      "frIndexedString2",
      "frIndexedString3",
      "frIndexedString4",
      "frIndexedString5",
      "frUnindexedString1",
      "frUnindexedString2",
      "frUnindexedString3",
      "frUnindexedString4",
      "frUnindexedString5",
      "frIndexedMultivalued1",
      "frIndexedMultivalued2",
      "frIndexedMultivalued3",
      "frIndexedMultivalued4",
      "frIndexedMultivalued5",
      "frUnindexedMultivalued1",
      "frUnindexedMultivalued2",
      "frUnindexedMultivalued3",
      "frUnindexedMultivalued4",
      "frUnindexedMultivalued5",
      "frIndexedDate1",
      "frIndexedDate2",
      "frIndexedDate3",
      "frIndexedDate4",
      "frIndexedDate5",
      "frUnindexedDate1",
      "frUnindexedDate2",
      "frUnindexedDate3",
      "frUnindexedDate4",
      "frUnindexedDate5",
      "frIndexedInteger1",
      "frIndexedInteger2",
      "frIndexedInteger3",
      "frIndexedInteger4",
      "frIndexedInteger5",
      "frUnindexedInteger1",
      "frUnindexedInteger2",
      "frUnindexedInteger3",
      "frUnindexedInteger4",
      "frUnindexedInteger5",
      "assignedDashboard",
    ],
    "properties": {
      "_id": {
        "description": "User ID",
        "isPersonal": false,
        "policies": [
          {
            "params": {
              "forbiddenChars": [
                "/",
              ],
            },
            "policyId": "cannot-contain-characters",
          },
        ],
        "searchable": false,
        "type": "string",
        "usageDescription": "",
        "userEditable": false,
        "viewable": false,
      },
      "accountStatus": {
        "default": "active",
        "description": "Status",
        "isPersonal": false,
        "searchable": true,
        "title": "Status",
        "type": "string",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "adminOfOrg": {
        "items": {
          "notifySelf": false,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": true,
              "path": "managed/bravo_organization",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "admins",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Organizations I Administer",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "aliasList": {
        "description": "List of identity aliases used primarily to record social IdP subjects for this user",
        "isVirtual": false,
        "items": {
          "title": "User Alias Names Items",
          "type": "string",
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "User Alias Names List",
        "type": "array",
        "userEditable": true,
        "viewable": false,
      },
      "applications": {
        "description": "Applications",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Groups Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Application",
              "path": "managed/bravo_application",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [
                  "name",
                ],
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Groups Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Applications",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": false,
      },
      "assignedDashboard": {
        "description": "List of items to click on for this user",
        "isVirtual": true,
        "items": {
          "title": "Assigned Dashboard Items",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "name",
          ],
          "referencedRelationshipFields": [
            [
              "roles",
              "applications",
            ],
            [
              "applications",
            ],
          ],
        },
        "searchable": false,
        "title": "Assigned Dashboard",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "assignments": {
        "description": "Assignments",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Provisioning Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Assignment",
              "path": "managed/bravo_assignment",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Assignments Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Assignments",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "authzRoles": {
        "description": "Authorization Roles",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Authorization Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Internal Role",
              "path": "internal/role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "authzMembers",
          "reverseRelationship": true,
          "title": "Authorization Roles Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Authorization Roles",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "city": {
        "description": "City",
        "isPersonal": false,
        "title": "City",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "cn": {
        "default": "{{givenName}} {{sn}}",
        "description": "Common Name",
        "isPersonal": true,
        "scope": "private",
        "searchable": false,
        "title": "Common Name",
        "type": "string",
        "userEditable": false,
        "viewable": false,
      },
      "consentedMappings": {
        "description": "Consented Mappings",
        "isPersonal": false,
        "isVirtual": false,
        "items": {
          "items": {
            "order": [
              "mapping",
              "consentDate",
            ],
            "properties": {
              "consentDate": {
                "description": "Consent Date",
                "searchable": true,
                "title": "Consent Date",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "mapping": {
                "description": "Mapping",
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "mapping",
              "consentDate",
            ],
            "title": "Consented Mappings Item",
            "type": "object",
          },
          "title": "Consented Mappings Items",
          "type": "array",
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Consented Mappings",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "country": {
        "description": "Country",
        "isPersonal": false,
        "title": "Country",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "description": {
        "description": "Description",
        "isPersonal": false,
        "searchable": true,
        "title": "Description",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "effectiveApplications": {
        "description": "Effective Applications",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Assigned Application Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedObjectFields": [
            "name",
          ],
          "referencedRelationshipFields": [
            [
              "roles",
              "applications",
            ],
            [
              "applications",
            ],
          ],
        },
        "returnByDefault": true,
        "title": "Effective Applications",
        "type": "array",
        "viewable": false,
      },
      "effectiveAssignments": {
        "description": "Effective Assignments",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Assignments Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedObjectFields": [
            "*",
          ],
          "referencedRelationshipFields": [
            [
              "roles",
              "assignments",
            ],
            [
              "assignments",
            ],
          ],
        },
        "returnByDefault": true,
        "title": "Effective Assignments",
        "type": "array",
        "usageDescription": "",
        "viewable": false,
      },
      "effectiveGroups": {
        "description": "Effective Groups",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Groups Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedRelationshipFields": [
            "groups",
          ],
        },
        "returnByDefault": true,
        "title": "Effective Groups",
        "type": "array",
        "usageDescription": "",
        "viewable": false,
      },
      "effectiveRoles": {
        "description": "Effective Roles",
        "isPersonal": false,
        "isVirtual": true,
        "items": {
          "title": "Effective Roles Items",
          "type": "object",
        },
        "queryConfig": {
          "referencedRelationshipFields": [
            "roles",
          ],
        },
        "returnByDefault": true,
        "title": "Effective Roles",
        "type": "array",
        "usageDescription": "",
        "viewable": false,
      },
      "frIndexedDate1": {
        "description": "Generic Indexed Date 1",
        "isPersonal": false,
        "title": "Generic Indexed Date 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate2": {
        "description": "Generic Indexed Date 2",
        "isPersonal": false,
        "title": "Generic Indexed Date 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate3": {
        "description": "Generic Indexed Date 3",
        "isPersonal": false,
        "title": "Generic Indexed Date 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate4": {
        "description": "Generic Indexed Date 4",
        "isPersonal": false,
        "title": "Generic Indexed Date 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedDate5": {
        "description": "Generic Indexed Date 5",
        "isPersonal": false,
        "title": "Generic Indexed Date 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger1": {
        "description": "Generic Indexed Integer 1",
        "isPersonal": false,
        "title": "Generic Indexed Integer 1",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger2": {
        "description": "Generic Indexed Integer 2",
        "isPersonal": false,
        "title": "Generic Indexed Integer 2",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger3": {
        "description": "Generic Indexed Integer 3",
        "isPersonal": false,
        "title": "Generic Indexed Integer 3",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger4": {
        "description": "Generic Indexed Integer 4",
        "isPersonal": false,
        "title": "Generic Indexed Integer 4",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedInteger5": {
        "description": "Generic Indexed Integer 5",
        "isPersonal": false,
        "title": "Generic Indexed Integer 5",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued1": {
        "description": "Generic Indexed Multivalue 1",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 1",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued2": {
        "description": "Generic Indexed Multivalue 2",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 2",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued3": {
        "description": "Generic Indexed Multivalue 3",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 3",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued4": {
        "description": "Generic Indexed Multivalue 4",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 4",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedMultivalued5": {
        "description": "Generic Indexed Multivalue 5",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Indexed Multivalue 5",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString1": {
        "description": "Generic Indexed String 1",
        "isPersonal": false,
        "title": "Generic Indexed String 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString2": {
        "description": "Generic Indexed String 2",
        "isPersonal": false,
        "title": "Generic Indexed String 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString3": {
        "description": "Generic Indexed String 3",
        "isPersonal": false,
        "title": "Generic Indexed String 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString4": {
        "description": "Generic Indexed String 4",
        "isPersonal": false,
        "title": "Generic Indexed String 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frIndexedString5": {
        "description": "Generic Indexed String 5",
        "isPersonal": false,
        "title": "Generic Indexed String 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate1": {
        "description": "Generic Unindexed Date 1",
        "isPersonal": false,
        "title": "Generic Unindexed Date 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate2": {
        "description": "Generic Unindexed Date 2",
        "isPersonal": false,
        "title": "Generic Unindexed Date 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate3": {
        "description": "Generic Unindexed Date 3",
        "isPersonal": false,
        "title": "Generic Unindexed Date 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate4": {
        "description": "Generic Unindexed Date 4",
        "isPersonal": false,
        "title": "Generic Unindexed Date 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedDate5": {
        "description": "Generic Unindexed Date 5",
        "isPersonal": false,
        "title": "Generic Unindexed Date 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger1": {
        "description": "Generic Unindexed Integer 1",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 1",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger2": {
        "description": "Generic Unindexed Integer 2",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 2",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger3": {
        "description": "Generic Unindexed Integer 3",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 3",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger4": {
        "description": "Generic Unindexed Integer 4",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 4",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedInteger5": {
        "description": "Generic Unindexed Integer 5",
        "isPersonal": false,
        "title": "Generic Unindexed Integer 5",
        "type": "number",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued1": {
        "description": "Generic Unindexed Multivalue 1",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 1",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued2": {
        "description": "Generic Unindexed Multivalue 2",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 2",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued3": {
        "description": "Generic Unindexed Multivalue 3",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 3",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued4": {
        "description": "Generic Unindexed Multivalue 4",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 4",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedMultivalued5": {
        "description": "Generic Unindexed Multivalue 5",
        "isPersonal": false,
        "items": {
          "type": "string",
        },
        "title": "Generic Unindexed Multivalue 5",
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString1": {
        "description": "Generic Unindexed String 1",
        "isPersonal": false,
        "title": "Generic Unindexed String 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString2": {
        "description": "Generic Unindexed String 2",
        "isPersonal": false,
        "title": "Generic Unindexed String 2",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString3": {
        "description": "Generic Unindexed String 3",
        "isPersonal": false,
        "title": "Generic Unindexed String 3",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString4": {
        "description": "Generic Unindexed String 4",
        "isPersonal": false,
        "title": "Generic Unindexed String 4",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "frUnindexedString5": {
        "description": "Generic Unindexed String 5",
        "isPersonal": false,
        "title": "Generic Unindexed String 5",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "givenName": {
        "description": "First Name",
        "isPersonal": true,
        "searchable": true,
        "title": "First Name",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "groups": {
        "description": "Groups",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Groups Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Group",
              "path": "managed/bravo_group",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Groups Items",
          "type": "relationship",
          "validate": true,
        },
        "relationshipGrantTemporalConstraintsEnforced": false,
        "returnByDefault": false,
        "title": "Groups",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "kbaInfo": {
        "description": "KBA Info",
        "isPersonal": true,
        "items": {
          "order": [
            "answer",
            "customQuestion",
            "questionId",
          ],
          "properties": {
            "answer": {
              "description": "Answer",
              "type": "string",
            },
            "customQuestion": {
              "description": "Custom question",
              "type": "string",
            },
            "questionId": {
              "description": "Question ID",
              "type": "string",
            },
          },
          "required": [],
          "title": "KBA Info Items",
          "type": "object",
        },
        "type": "array",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "lastSync": {
        "description": "Last Sync timestamp",
        "isPersonal": false,
        "order": [
          "effectiveAssignments",
          "timestamp",
        ],
        "properties": {
          "effectiveAssignments": {
            "description": "Effective Assignments",
            "items": {
              "title": "Effective Assignments Items",
              "type": "object",
            },
            "title": "Effective Assignments",
            "type": "array",
          },
          "timestamp": {
            "description": "Timestamp",
            "type": "string",
          },
        },
        "required": [],
        "scope": "private",
        "searchable": false,
        "title": "Last Sync timestamp",
        "type": "object",
        "usageDescription": "",
        "viewable": false,
      },
      "mail": {
        "description": "Email Address",
        "isPersonal": true,
        "policies": [
          {
            "policyId": "valid-email-address-format",
          },
        ],
        "searchable": true,
        "title": "Email Address",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "manager": {
        "description": "Manager",
        "isPersonal": false,
        "properties": {
          "_ref": {
            "description": "References a relationship from a managed object",
            "type": "string",
          },
          "_refProperties": {
            "description": "Supports metadata within the relationship",
            "properties": {
              "_id": {
                "description": "_refProperties object ID",
                "type": "string",
              },
            },
            "title": "Manager _refProperties",
            "type": "object",
          },
        },
        "resourceCollection": [
          {
            "label": "User",
            "path": "managed/bravo_user",
            "query": {
              "fields": [
                "userName",
                "givenName",
                "sn",
              ],
              "queryFilter": "true",
            },
          },
        ],
        "reversePropertyName": "reports",
        "reverseRelationship": true,
        "searchable": false,
        "title": "Manager",
        "type": "relationship",
        "usageDescription": "",
        "userEditable": false,
        "validate": true,
        "viewable": true,
      },
      "memberOfOrg": {
        "items": {
          "notifySelf": true,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": false,
              "path": "managed/bravo_organization",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Organizations to which I Belong",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "memberOfOrgIDs": {
        "isVirtual": true,
        "items": {
          "title": "org identifiers",
          "type": "string",
        },
        "queryConfig": {
          "flattenProperties": true,
          "referencedObjectFields": [
            "_id",
            "parentIDs",
          ],
          "referencedRelationshipFields": [
            "memberOfOrg",
          ],
        },
        "returnByDefault": true,
        "searchable": false,
        "title": "MemberOfOrgIDs",
        "type": "array",
        "userEditable": false,
        "viewable": false,
      },
      "ownerOfApp": {
        "items": {
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Application",
              "path": "managed/bravo_application",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [
                  "name",
                ],
              },
            },
          ],
          "reversePropertyName": "owners",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "searchable": false,
        "title": "Applications I Own",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "ownerOfOrg": {
        "items": {
          "notifySelf": false,
          "properties": {
            "_ref": {
              "type": "string",
            },
            "_refProperties": {
              "properties": {
                "_id": {
                  "propName": "_id",
                  "required": false,
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "Organization",
              "notify": true,
              "path": "managed/bravo_organization",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
                "sortKeys": [],
              },
            },
          ],
          "reversePropertyName": "owners",
          "reverseRelationship": true,
          "type": "relationship",
          "validate": true,
        },
        "policies": [],
        "returnByDefault": false,
        "searchable": false,
        "title": "Organizations I Own",
        "type": "array",
        "userEditable": false,
        "viewable": true,
      },
      "password": {
        "description": "Password",
        "isPersonal": false,
        "isProtected": true,
        "scope": "private",
        "searchable": false,
        "title": "Password",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "postalAddress": {
        "description": "Address 1",
        "isPersonal": true,
        "title": "Address 1",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "postalCode": {
        "description": "Postal Code",
        "isPersonal": false,
        "title": "Postal Code",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "preferences": {
        "description": "Preferences",
        "isPersonal": false,
        "order": [
          "updates",
          "marketing",
        ],
        "properties": {
          "marketing": {
            "description": "Send me special offers and services",
            "type": "boolean",
          },
          "updates": {
            "description": "Send me news and updates",
            "type": "boolean",
          },
        },
        "required": [],
        "searchable": false,
        "title": "Preferences",
        "type": "object",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "profileImage": {
        "description": "Profile Image",
        "isPersonal": true,
        "searchable": true,
        "title": "Profile Image",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": false,
      },
      "reports": {
        "description": "Direct Reports",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Direct Reports Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "label": "User",
              "path": "managed/bravo_user",
              "query": {
                "fields": [
                  "userName",
                  "givenName",
                  "sn",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "manager",
          "reverseRelationship": true,
          "title": "Direct Reports Items",
          "type": "relationship",
          "validate": true,
        },
        "returnByDefault": false,
        "title": "Direct Reports",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "roles": {
        "description": "Provisioning Roles",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
        "isPersonal": false,
        "items": {
          "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
          "notifySelf": true,
          "properties": {
            "_ref": {
              "description": "References a relationship from a managed object",
              "type": "string",
            },
            "_refProperties": {
              "description": "Supports metadata within the relationship",
              "properties": {
                "_grantType": {
                  "description": "Grant Type",
                  "label": "Grant Type",
                  "type": "string",
                },
                "_id": {
                  "description": "_refProperties object ID",
                  "type": "string",
                },
              },
              "title": "Provisioning Roles Items _refProperties",
              "type": "object",
            },
          },
          "resourceCollection": [
            {
              "conditionalAssociationField": "condition",
              "label": "Role",
              "path": "managed/bravo_role",
              "query": {
                "fields": [
                  "name",
                ],
                "queryFilter": "true",
              },
            },
          ],
          "reversePropertyName": "members",
          "reverseRelationship": true,
          "title": "Provisioning Roles Items",
          "type": "relationship",
          "validate": true,
        },
        "relationshipGrantTemporalConstraintsEnforced": true,
        "returnByDefault": false,
        "title": "Provisioning Roles",
        "type": "array",
        "usageDescription": "",
        "userEditable": false,
        "viewable": true,
      },
      "sn": {
        "description": "Last Name",
        "isPersonal": true,
        "searchable": true,
        "title": "Last Name",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "stateProvince": {
        "description": "State/Province",
        "isPersonal": false,
        "title": "State/Province",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "telephoneNumber": {
        "description": "Telephone Number",
        "isPersonal": true,
        "pattern": "^\\+?([0-9\\- \\(\\)])*$",
        "title": "Telephone Number",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
      "userName": {
        "description": "Username",
        "isPersonal": true,
        "minLength": 1,
        "policies": [
          {
            "policyId": "valid-username",
          },
          {
            "params": {
              "forbiddenChars": [
                "/",
              ],
            },
            "policyId": "cannot-contain-characters",
          },
          {
            "params": {
              "minLength": 1,
            },
            "policyId": "minimum-length",
          },
          {
            "params": {
              "maxLength": 255,
            },
            "policyId": "maximum-length",
          },
        ],
        "searchable": true,
        "title": "Username",
        "type": "string",
        "usageDescription": "",
        "userEditable": true,
        "viewable": true,
      },
    },
    "required": [
      "userName",
      "givenName",
      "sn",
      "mail",
    ],
    "title": "Bravo realm - User",
    "type": "object",
    "viewable": true,
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/managed/managed.idm.json 1`] = `
{
  "idm": {
    "managed": {
      "_id": "managed",
      "objects": [
        "file://alpha_user.managed.json",
        "file://bravo_user.managed.json",
        "file://alpha_role.managed.json",
        "file://bravo_role.managed.json",
        "file://alpha_assignment.managed.json",
        "file://bravo_assignment.managed.json",
        "file://alpha_organization.managed.json",
        "file://bravo_organization.managed.json",
        "file://alpha_group.managed.json",
        "file://bravo_group.managed.json",
        "file://alpha_application.managed.json",
        "file://bravo_application.managed.json",
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/managedAlpha_assignment_managedBravo_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/managedAlpha_assignment_managedBravo_assignment": {
      "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
      "consentRequired": false,
      "displayName": "managedAlpha_assignment_managedBravo_assignment",
      "icon": null,
      "name": "managedAlpha_assignment_managedBravo_assignment",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/alpha_assignment",
      "target": "managed/bravo_assignment",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/managedAlpha_user_systemAzureUser.idm.json 1`] = `
{
  "idm": {
    "mapping/managedAlpha_user_systemAzureUser": {
      "_id": "mapping/managedAlpha_user_systemAzureUser",
      "consentRequired": false,
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__",
      ],
      "displayName": "managedAlpha_user_systemAzureUser",
      "icon": null,
      "name": "managedAlpha_user_systemAzureUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "mail",
          "target": "mail",
        },
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "sn",
          "target": "surname",
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName+" "+source.sn",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "mailNickname",
          "transform": {
            "source": "source.givenName[0].toLowerCase()+source.sn.toLowerCase()",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "accountEnabled",
          "transform": {
            "source": "true",
            "type": "text/javascript",
          },
        },
        {
          "condition": {
            "globals": {},
            "source": "(typeof oldTarget === 'undefined' || oldTarget === null)",
            "type": "text/javascript",
          },
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": ""!@#$%"[Math.floor(Math.random()*5)] + Math.random().toString(36).slice(2, 13).toUpperCase()+Math.random().toString(36).slice(2,13)",
            "type": "text/javascript",
          },
        },
      ],
      "queuedSync": {
        "enabled": true,
        "maxRetries": 0,
        "pollingInterval": 10000,
      },
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "0f357b7e-6c54-4351-a094-43916877d7e5"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemAzureUser" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "0f357b7e-6c54-4351-a094-43916877d7e5"] or lastSync/managedAlpha_user_systemAzureUser pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemAzureUser" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/Azure/User",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/managedBravo_group_managedBravo_group.idm.json 1`] = `
{
  "idm": {
    "mapping/managedBravo_group_managedBravo_group": {
      "_id": "mapping/managedBravo_group_managedBravo_group",
      "consentRequired": false,
      "displayName": "managedBravo_group_managedBravo_group",
      "icon": null,
      "name": "managedBravo_group_managedBravo_group",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_group",
      "target": "managed/bravo_group",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/managedBravo_user_managedBravo_user0.idm.json 1`] = `
{
  "idm": {
    "mapping/managedBravo_user_managedBravo_user0": {
      "_id": "mapping/managedBravo_user_managedBravo_user0",
      "consentRequired": false,
      "displayName": "managedBravo_user_managedBravo_user0",
      "icon": null,
      "name": "managedBravo_user_managedBravo_user0",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_user",
      "target": "managed/bravo_user",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/mapping12.idm.json 1`] = `
{
  "idm": {
    "mapping/mapping12": {
      "_id": "mapping/mapping12",
      "consentRequired": false,
      "displayName": "mapping12",
      "linkQualifiers": [],
      "name": "mapping12",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/systemAzure__group___managedAlpha_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzure__group___managedAlpha_assignment": {
      "_id": "mapping/systemAzure__group___managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzure__group___managedAlpha_assignment",
      "icon": null,
      "name": "systemAzure__group___managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== "undefined" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== "undefined" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'memberOf',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure___GROUP___",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/__GROUP__",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "memberOf"]",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/systemAzureDirectoryrole_managedAlpha_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzureDirectoryrole_managedAlpha_assignment": {
      "_id": "mapping/systemAzureDirectoryrole_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureDirectoryrole_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureDirectoryrole_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== "undefined" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== "undefined" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': '__roles__',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_directoryRole_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/directoryRole",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "__roles__"]",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/systemAzureServiceplan_managedAlpha_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzureServiceplan_managedAlpha_assignment": {
      "_id": "mapping/systemAzureServiceplan_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureServiceplan_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureServiceplan_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== "undefined" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== "undefined" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': '__servicePlanIds__',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_servicePlan_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/servicePlan",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "__servicePlanIds__"]",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/mapping/systemAzureUser_managedAlpha_user.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzureUser_managedAlpha_user": {
      "_id": "mapping/systemAzureUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.mail + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemAzureUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemAzureUser",
      "name": "systemAzureUser_managedAlpha_user",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ONBOARD",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectType": "__GROUP__",
          "source": "memberOf",
          "target": "assignments",
        },
        {
          "referencedObjectType": "directoryRole",
          "source": "__roles__",
          "target": "assignments",
        },
        {
          "referencedObjectType": "servicePlan",
          "source": "__servicePlanIds__",
          "target": "assignments",
        },
      ],
      "reconSourceQueryPageSize": 999,
      "reconSourceQueryPaging": true,
      "runTargetPhase": false,
      "source": "system/Azure/User",
      "sourceQueryFullEntry": true,
      "target": "managed/alpha_user",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/policy.idm.json 1`] = `
{
  "idm": {
    "policy": {
      "_id": "policy",
      "additionalFiles": [],
      "resources": [],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/privilegeAssignments.idm.json 1`] = `
{
  "idm": {
    "privilegeAssignments": {
      "_id": "privilegeAssignments",
      "privilegeAssignments": [
        {
          "name": "ownerPrivileges",
          "privileges": [
            "owner-view-update-delete-orgs",
            "owner-create-orgs",
            "owner-view-update-delete-admins-and-members",
            "owner-create-admins",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "ownerOfOrg",
        },
        {
          "name": "adminPrivileges",
          "privileges": [
            "admin-view-update-delete-orgs",
            "admin-create-orgs",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "adminOfOrg",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/privileges.idm.json 1`] = `
{
  "idm": {
    "privileges": {
      "_id": "privileges",
      "privileges": [],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/provisioner.openic/GoogleApps.idm.json 1`] = `
{
  "idm": {
    "provisioner.openic/GoogleApps": {
      "_id": "provisioner.openic/GoogleApps",
      "configurationProperties": {
        "availableLicenses": [
          "101005/1010050001",
          "101001/1010010001",
          "101031/1010310010",
          "101034/1010340002",
          "101038/1010380002",
          "101034/1010340001",
          "101038/1010380003",
          "101034/1010340004",
          "101034/1010340003",
          "101034/1010340006",
          "Google-Apps/Google-Apps-For-Business",
          "101034/1010340005",
          "Google-Vault/Google-Vault",
          "Google-Apps/1010020031",
          "Google-Apps/1010020030",
          "Google-Apps/1010060003",
          "Google-Apps/1010060005",
          "Google-Apps/Google-Apps-Unlimited",
          "Google-Apps/1010020029",
          "Google-Apps/Google-Apps-Lite",
          "101031/1010310003",
          "101033/1010330002",
          "101033/1010330004",
          "Google-Apps/Google-Apps-For-Education",
          "101031/1010310002",
          "101033/1010330003",
          "Google-Apps/1010020026",
          "101031/1010310007",
          "Google-Apps/1010020025",
          "101031/1010310008",
          "Google-Apps/1010020028",
          "Google-Apps/Google-Apps-For-Postini",
          "101031/1010310005",
          "Google-Apps/1010020027",
          "101031/1010310006",
          "101031/1010310009",
          "Google-Vault/Google-Vault-Former-Employee",
          "101038/1010370001",
          "Google-Apps/1010020020",
          "Google-Apps/1010060001",
        ],
        "clientId": "&{esv.gac.client.id}",
        "clientSecret": "&{esv.gac.secret}",
        "domain": "&{esv.gac.domain}",
        "groupsMaxResults": "200",
        "listProductAndSkuMaxResults": "100",
        "listProductMaxResults": "100",
        "membersMaxResults": "200",
        "proxyHost": null,
        "proxyPort": 8080,
        "refreshToken": "&{esv.gac.refresh}",
        "roleAssignmentMaxResults": 100,
        "roleMaxResults": 100,
        "usersMaxResults": "100",
        "validateCertificate": true,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.googleapps-connector",
        "bundleVersion": "[1.5.0.0,1.6.0.0)",
        "connectorHostRef": "",
        "connectorName": "org.forgerock.openicf.connectors.googleapps.GoogleAppsConnector",
        "displayName": "GoogleApps Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": {
        "$bool": "&{esv.gac.enable.connector}",
      },
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__GROUPS__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__GROUPS__",
              "nativeType": "string",
              "type": "array",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__PHOTO__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PHOTO__",
              "nativeType": "JAVA_TYPE_BYTE_ARRAY",
              "type": "string",
            },
            "__SECONDARY_EMAILS__": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__SECONDARY_EMAILS__",
              "nativeType": "object",
              "type": "array",
            },
            "__UID__": {
              "nativeName": "__UID__",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "addresses": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addresses",
              "nativeType": "object",
              "type": "array",
            },
            "agreedToTerms": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "agreedToTerms",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "aliases": {
              "flags": [
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "aliases",
              "nativeType": "string",
              "type": "array",
            },
            "archived": {
              "nativeName": "archived",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "changePasswordAtNextLogin": {
              "nativeName": "changePasswordAtNextLogin",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "creationTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "creationTime",
              "nativeType": "string",
              "type": "array",
            },
            "customSchemas": {
              "nativeName": "customSchemas",
              "nativeType": "object",
              "type": "object",
            },
            "customerId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "customerId",
              "nativeType": "string",
              "type": "string",
            },
            "deletionTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletionTime",
              "nativeType": "string",
              "type": "string",
            },
            "externalIds": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "externalIds",
              "nativeType": "object",
              "type": "array",
            },
            "familyName": {
              "nativeName": "familyName",
              "nativeType": "string",
              "type": "string",
            },
            "fullName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "fullName",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "hashFunction": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "hashFunction",
              "nativeType": "string",
              "type": "string",
            },
            "ims": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "ims",
              "nativeType": "object",
              "type": "array",
            },
            "includeInGlobalAddressList": {
              "nativeName": "includeInGlobalAddressList",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "ipWhitelisted": {
              "nativeName": "ipWhitelisted",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isAdmin": {
              "nativeName": "isAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isDelegatedAdmin": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isDelegatedAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isEnforcedIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnforcedIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isEnrolledIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnrolledIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isMailboxSetup": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isMailboxSetup",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "languages": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "languages",
              "nativeType": "object",
              "type": "array",
            },
            "lastLoginTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "lastLoginTime",
              "nativeType": "string",
              "type": "array",
            },
            "nonEditableAliases": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "nonEditableAliases",
              "nativeType": "string",
              "type": "array",
            },
            "orgUnitPath": {
              "nativeName": "orgUnitPath",
              "nativeType": "string",
              "type": "string",
            },
            "organizations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "organizations",
              "nativeType": "object",
              "type": "array",
            },
            "phones": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "phones",
              "nativeType": "object",
              "type": "array",
            },
            "primaryEmail": {
              "nativeName": "primaryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryEmail": {
              "nativeName": "recoveryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryPhone": {
              "nativeName": "recoveryPhone",
              "nativeType": "string",
              "type": "string",
            },
            "relations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "relations",
              "nativeType": "object",
              "type": "array",
            },
            "suspended": {
              "nativeName": "suspended",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "suspensionReason": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "suspensionReason",
              "nativeType": "string",
              "type": "string",
            },
            "thumbnailPhotoUrl": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "thumbnailPhotoUrl",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/provisioner.openicf.connectorinfoprovider.idm.json 1`] = `
{
  "idm": {
    "provisioner.openicf.connectorinfoprovider": {
      "_id": "provisioner.openicf.connectorinfoprovider",
      "connectorsLocation": "connectors",
      "remoteConnectorClients": [
        {
          "enabled": true,
          "name": "rcs1",
          "useSSL": true,
        },
      ],
      "remoteConnectorClientsGroups": [],
      "remoteConnectorServers": [],
      "remoteConnectorServersGroups": [],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/provisioner.openicf/Azure.idm.json 1`] = `
{
  "idm": {
    "provisioner.openicf/Azure": {
      "_id": "provisioner.openicf/Azure",
      "configurationProperties": {
        "clientId": "4b07adcc-329c-434c-aa83-49a14bef3c49",
        "clientSecret": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "W63amdvzlmynT40WOTl1wPWDc8FUlGWQZK158lmlFTrnhy9PbWZV5YE4v3VeMUDC",
              "iv": "KG/YFc8v26QHJzRI3uFhzw==",
              "keySize": 16,
              "mac": "mA4BzCNS7tuLhosQ+es1Tg==",
              "purpose": "idm.config.encryption",
              "salt": "vvPwKk0KqOqMjElQgICqEA==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "httpProxyHost": null,
        "httpProxyPassword": null,
        "httpProxyPort": null,
        "httpProxyUsername": null,
        "licenseCacheExpiryTime": 60,
        "performHardDelete": true,
        "readRateLimit": null,
        "tenant": "711ffa9c-5972-4713-ace3-688c9732614a",
        "writeRateLimit": null,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.msgraphapi-connector",
        "bundleVersion": "1.5.20.21",
        "connectorName": "org.forgerock.openicf.connectors.msgraphapi.MSGraphAPIConnector",
        "displayName": "MSGraphAPI Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__PASSWORD__": {
              "autocomplete": "new-password",
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__roles__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__roles__",
              "nativeType": "string",
              "type": "array",
            },
            "__servicePlanIds__": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__servicePlanIds__",
              "nativeType": "string",
              "type": "array",
            },
            "accountEnabled": {
              "nativeName": "accountEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "type": "string",
            },
            "companyName": {
              "nativeName": "companyName",
              "nativeType": "string",
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "jobTitle": {
              "nativeName": "jobTitle",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "mailNickname": {
              "nativeName": "mailNickname",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "object",
              "type": "object",
            },
            "memberOf": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "mobilePhone": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "mobilePhone",
              "nativeType": "string",
              "type": "string",
            },
            "onPremisesImmutableId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesImmutableId",
              "nativeType": "string",
              "type": "string",
            },
            "onPremisesSecurityIdentifier": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesSecurityIdentifier",
              "nativeType": "string",
              "type": "string",
            },
            "otherMails": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherMails",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "preferredLanguage": {
              "nativeName": "preferredLanguage",
              "nativeType": "string",
              "type": "string",
            },
            "proxyAddresses": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "proxyAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "surname": {
              "nativeName": "surname",
              "nativeType": "string",
              "type": "string",
            },
            "usageLocation": {
              "nativeName": "usageLocation",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "userType": {
              "nativeName": "userType",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "__GROUP__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "groupTypes": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "groupTypes",
              "nativeType": "string",
              "type": "string",
            },
            "id": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "id",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "mailEnabled": {
              "nativeName": "mailEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "onPremisesSecurityIdentifier": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesSecurityIdentifier",
              "nativeType": "string",
              "type": "string",
            },
            "proxyAddresses": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "proxyAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "securityEnabled": {
              "nativeName": "securityEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "type": {
              "nativeName": "type",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "directoryRole": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "directoryRole",
          "nativeType": "directoryRole",
          "properties": {
            "description": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "servicePlan": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "servicePlan",
          "nativeType": "servicePlan",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "appliesTo": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "appliesTo",
              "nativeType": "string",
              "type": "string",
            },
            "provisioningStatus": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "provisioningStatus",
              "nativeType": "string",
              "type": "string",
            },
            "servicePlanId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "servicePlanId",
              "nativeType": "string",
              "type": "string",
            },
            "servicePlanName": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "servicePlanName",
              "nativeType": "string",
              "type": "string",
            },
            "subscriberSkuId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "subscriberSkuId",
              "type": "string",
            },
          },
          "type": "object",
        },
        "servicePrincipal": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "servicePrincipal",
          "nativeType": "servicePrincipal",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__addAppRoleAssignedTo__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__addAppRoleAssignedTo__",
              "nativeType": "object",
              "type": "array",
            },
            "__addAppRoleAssignments__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__addAppRoleAssignments__",
              "nativeType": "object",
              "type": "array",
            },
            "__removeAppRoleAssignedTo__": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__removeAppRoleAssignedTo__",
              "nativeType": "string",
              "type": "array",
            },
            "__removeAppRoleAssignments__": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__removeAppRoleAssignments__",
              "nativeType": "string",
              "type": "array",
            },
            "accountEnabled": {
              "nativeName": "accountEnabled",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "addIns": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addIns",
              "nativeType": "object",
              "type": "array",
            },
            "alternativeNames": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "alternativeNames",
              "nativeType": "string",
              "type": "array",
            },
            "appDescription": {
              "nativeName": "appDescription",
              "nativeType": "string",
              "type": "string",
            },
            "appDisplayName": {
              "nativeName": "appDisplayName",
              "nativeType": "string",
              "type": "string",
            },
            "appId": {
              "nativeName": "appId",
              "nativeType": "string",
              "type": "string",
            },
            "appOwnerOrganizationId": {
              "nativeName": "appOwnerOrganizationId",
              "nativeType": "string",
              "type": "string",
            },
            "appRoleAssignmentRequired": {
              "nativeName": "appRoleAssignmentRequired",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "appRoles": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "appRoles",
              "nativeType": "object",
              "type": "array",
            },
            "applicationTemplateId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "applicationTemplateId",
              "nativeType": "string",
              "type": "string",
            },
            "deletedDateTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletedDateTime",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "disabledByMicrosoftStatus": {
              "nativeName": "disabledByMicrosoftStatus",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "homepage": {
              "nativeName": "homepage",
              "nativeType": "string",
              "type": "string",
            },
            "info": {
              "nativeName": "info",
              "nativeType": "object",
              "type": "object",
            },
            "keyCredentials": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "keyCredentials",
              "nativeType": "object",
              "type": "array",
            },
            "loginUrl": {
              "nativeName": "loginUrl",
              "nativeType": "string",
              "type": "string",
            },
            "logoutUrl": {
              "nativeName": "logoutUrl",
              "nativeType": "string",
              "type": "string",
            },
            "notes": {
              "nativeName": "notes",
              "nativeType": "string",
              "type": "string",
            },
            "notificationEmailAddresses": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "notificationEmailAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "oauth2PermissionScopes": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "oauth2PermissionScopes",
              "nativeType": "object",
              "type": "array",
            },
            "passwordCredentials": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "passwordCredentials",
              "nativeType": "object",
              "type": "array",
            },
            "preferredSingleSignOnMode": {
              "nativeName": "preferredSingleSignOnMode",
              "nativeType": "string",
              "type": "string",
            },
            "replyUrls": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "replyUrls",
              "nativeType": "string",
              "type": "array",
            },
            "resourceSpecificApplicationPermissions": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "resourceSpecificApplicationPermissions",
              "nativeType": "object",
              "type": "array",
            },
            "samlSingleSignOnSettings": {
              "nativeName": "samlSingleSignOnSettings",
              "nativeType": "object",
              "type": "object",
            },
            "servicePrincipalNames": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "servicePrincipalNames",
              "nativeType": "string",
              "type": "array",
            },
            "servicePrincipalType": {
              "nativeName": "servicePrincipalType",
              "nativeType": "string",
              "type": "string",
            },
            "signInAudience": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "signInAudience",
              "nativeType": "string",
              "type": "string",
            },
            "tags": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "tags",
              "nativeType": "string",
              "type": "array",
            },
            "tokenEncryptionKeyId": {
              "nativeName": "tokenEncryptionKeyId",
              "nativeType": "string",
              "type": "string",
            },
            "verifiedPublisher": {
              "nativeName": "verifiedPublisher",
              "nativeType": "object",
              "type": "object",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/provisioner.openicf/GoogleApps.idm.json 1`] = `
{
  "idm": {
    "provisioner.openicf/GoogleApps": {
      "_id": "provisioner.openicf/GoogleApps",
      "configurationProperties": {
        "availableLicenses": [
          "101005/1010050001",
          "101001/1010010001",
          "101031/1010310010",
          "101034/1010340002",
          "101038/1010380002",
          "101034/1010340001",
          "101038/1010380003",
          "101034/1010340004",
          "101034/1010340003",
          "101034/1010340006",
          "Google-Apps/Google-Apps-For-Business",
          "101034/1010340005",
          "Google-Vault/Google-Vault",
          "Google-Apps/1010020031",
          "Google-Apps/1010020030",
          "Google-Apps/1010060003",
          "Google-Apps/1010060005",
          "Google-Apps/Google-Apps-Unlimited",
          "Google-Apps/1010020029",
          "Google-Apps/Google-Apps-Lite",
          "101031/1010310003",
          "101033/1010330002",
          "101033/1010330004",
          "Google-Apps/Google-Apps-For-Education",
          "101031/1010310002",
          "101033/1010330003",
          "Google-Apps/1010020026",
          "101031/1010310007",
          "Google-Apps/1010020025",
          "101031/1010310008",
          "Google-Apps/1010020028",
          "Google-Apps/Google-Apps-For-Postini",
          "101031/1010310005",
          "Google-Apps/1010020027",
          "101031/1010310006",
          "101031/1010310009",
          "Google-Vault/Google-Vault-Former-Employee",
          "101038/1010370001",
          "Google-Apps/1010020020",
          "Google-Apps/1010060001",
        ],
        "clientId": "&{esv.gac.client.id}",
        "clientSecret": "&{esv.gac.secret}",
        "domain": "&{esv.gac.domain}",
        "groupsMaxResults": "200",
        "listProductAndSkuMaxResults": "100",
        "listProductMaxResults": "100",
        "membersMaxResults": "200",
        "proxyHost": null,
        "proxyPort": 8080,
        "refreshToken": "&{esv.gac.refresh}",
        "roleAssignmentMaxResults": 100,
        "roleMaxResults": 100,
        "usersMaxResults": "100",
        "validateCertificate": true,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.googleapps-connector",
        "bundleVersion": "[1.5.0.0,1.6.0.0)",
        "connectorHostRef": "",
        "connectorName": "org.forgerock.openicf.connectors.googleapps.GoogleAppsConnector",
        "displayName": "GoogleApps Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": {
        "$bool": "&{esv.gac.enable.connector}",
      },
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__GROUPS__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__GROUPS__",
              "nativeType": "string",
              "type": "array",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__PHOTO__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PHOTO__",
              "nativeType": "JAVA_TYPE_BYTE_ARRAY",
              "type": "string",
            },
            "__SECONDARY_EMAILS__": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__SECONDARY_EMAILS__",
              "nativeType": "object",
              "type": "array",
            },
            "__UID__": {
              "nativeName": "__UID__",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "addresses": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addresses",
              "nativeType": "object",
              "type": "array",
            },
            "agreedToTerms": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "agreedToTerms",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "aliases": {
              "flags": [
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "aliases",
              "nativeType": "string",
              "type": "array",
            },
            "archived": {
              "nativeName": "archived",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "changePasswordAtNextLogin": {
              "nativeName": "changePasswordAtNextLogin",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "creationTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "creationTime",
              "nativeType": "string",
              "type": "array",
            },
            "customSchemas": {
              "nativeName": "customSchemas",
              "nativeType": "object",
              "type": "object",
            },
            "customerId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "customerId",
              "nativeType": "string",
              "type": "string",
            },
            "deletionTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletionTime",
              "nativeType": "string",
              "type": "string",
            },
            "externalIds": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "externalIds",
              "nativeType": "object",
              "type": "array",
            },
            "familyName": {
              "nativeName": "familyName",
              "nativeType": "string",
              "type": "string",
            },
            "fullName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "fullName",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "hashFunction": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "hashFunction",
              "nativeType": "string",
              "type": "string",
            },
            "ims": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "ims",
              "nativeType": "object",
              "type": "array",
            },
            "includeInGlobalAddressList": {
              "nativeName": "includeInGlobalAddressList",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "ipWhitelisted": {
              "nativeName": "ipWhitelisted",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isAdmin": {
              "nativeName": "isAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isDelegatedAdmin": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isDelegatedAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isEnforcedIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnforcedIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isEnrolledIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnrolledIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isMailboxSetup": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isMailboxSetup",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "languages": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "languages",
              "nativeType": "object",
              "type": "array",
            },
            "lastLoginTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "lastLoginTime",
              "nativeType": "string",
              "type": "array",
            },
            "nonEditableAliases": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "nonEditableAliases",
              "nativeType": "string",
              "type": "array",
            },
            "orgUnitPath": {
              "nativeName": "orgUnitPath",
              "nativeType": "string",
              "type": "string",
            },
            "organizations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "organizations",
              "nativeType": "object",
              "type": "array",
            },
            "phones": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "phones",
              "nativeType": "object",
              "type": "array",
            },
            "primaryEmail": {
              "nativeName": "primaryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryEmail": {
              "nativeName": "recoveryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryPhone": {
              "nativeName": "recoveryPhone",
              "nativeType": "string",
              "type": "string",
            },
            "relations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "relations",
              "nativeType": "object",
              "type": "array",
            },
            "suspended": {
              "nativeName": "suspended",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "suspensionReason": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "suspensionReason",
              "nativeType": "string",
              "type": "string",
            },
            "thumbnailPhotoUrl": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "thumbnailPhotoUrl",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/repo.ds.idm.json 1`] = `
{
  "idm": {
    "repo.ds": {
      "_id": "repo.ds",
      "commands": {
        "delete-mapping-links": {
          "_queryFilter": "/linkType eq "\${mapping}"",
          "operation": "DELETE",
        },
        "delete-target-ids-for-recon": {
          "_queryFilter": "/reconId eq "\${reconId}"",
          "operation": "DELETE",
        },
      },
      "embedded": false,
      "ldapConnectionFactories": {
        "bind": {
          "availabilityCheckIntervalSeconds": 30,
          "availabilityCheckTimeoutMilliSeconds": 10000,
          "connectionPoolSize": 50,
          "connectionSecurity": "none",
          "heartBeatIntervalSeconds": 60,
          "heartBeatTimeoutMilliSeconds": 10000,
          "primaryLdapServers": [
            {
              "hostname": "userstore-0.userstore",
              "port": 1389,
            },
          ],
          "secondaryLdapServers": [
            {
              "hostname": "userstore-2.userstore",
              "port": 1389,
            },
          ],
        },
        "root": {
          "authentication": {
            "simple": {
              "bindDn": "uid=admin",
              "bindPassword": "&{userstore.password}",
            },
          },
          "inheritFrom": "bind",
        },
      },
      "maxConnectionAttempts": 5,
      "queries": {
        "explicit": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
        },
        "generic": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "find-relationship-edges": {
            "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
          },
          "find-relationships-for-resource": {
            "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "get-by-field-value": {
            "_queryFilter": "/\${field} eq "\${value}"",
          },
          "get-notifications-for-user": {
            "_queryFilter": "/receiverId eq "\${userId}"",
            "_sortKeys": "-createDate",
          },
          "get-recons": {
            "_fields": "reconId,mapping,activitydate",
            "_queryFilter": "/entryType eq "summary"",
            "_sortKeys": "-activitydate",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
          "query-cluster-events": {
            "_queryFilter": "/instanceId eq "\${instanceId}"",
          },
          "query-cluster-failed-instances": {
            "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
          },
          "query-cluster-instances": {
            "_queryFilter": "true",
          },
          "query-cluster-running-instances": {
            "_queryFilter": "/state eq 1",
          },
        },
      },
      "resourceMapping": {
        "defaultMapping": {
          "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
        },
        "explicitMapping": {
          "clusteredrecontargetids": {
            "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-recon-clusteredTargetIds",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-recon-id",
                "type": "simple",
              },
              "targetIds": {
                "ldapAttribute": "fr-idm-recon-targetIds",
                "type": "json",
              },
            },
          },
          "dsconfig/attributeValue": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-attribute-value-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "matchAttribute": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-match-attribute",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/characterSet": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-character-set-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowUnclassifiedCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                "type": "simple",
              },
              "characterSet": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-character-set",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minCharacterSets": {
                "ldapAttribute": "ds-cfg-min-character-sets",
                "type": "simple",
              },
            },
          },
          "dsconfig/dictionary": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-dictionary-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "dictionaryFile": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-dictionary-file",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/lengthBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-length-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxPasswordLength": {
                "ldapAttribute": "ds-cfg-max-password-length",
                "type": "simple",
              },
              "minPasswordLength": {
                "ldapAttribute": "ds-cfg-min-password-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/passwordPolicies": {
            "dnTemplate": "cn=Password Policies,cn=config",
            "objectClasses": [
              "ds-cfg-password-policy",
              "ds-cfg-authentication-policy",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowPreEncodedPasswords": {
                "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
                "type": "simple",
              },
              "defaultPasswordStorageScheme": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                "type": "simple",
              },
              "deprecatedPasswordStorageScheme": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
                "type": "simple",
              },
              "maxPasswordAge": {
                "ldapAttribute": "ds-cfg-max-password-age",
                "type": "simple",
              },
              "passwordAttribute": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-password-attribute",
                "type": "simple",
              },
              "passwordHistoryCount": {
                "ldapAttribute": "ds-cfg-password-history-count",
                "type": "simple",
              },
              "validator": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-password-validator",
                "type": "simple",
              },
            },
          },
          "dsconfig/repeatedCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-repeated-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxConsecutiveLength": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-max-consecutive-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/similarityBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-similarity-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minPasswordDifference": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-password-difference",
                "type": "simple",
              },
            },
          },
          "dsconfig/uniqueCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-unique-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minUniqueCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-unique-characters",
                "type": "simple",
              },
            },
          },
          "dsconfig/userDefinedVirtualAttribute": {
            "dnTemplate": "cn=Virtual Attributes,cn=config",
            "objectClasses": [
              "ds-cfg-user-defined-virtual-attribute",
              "ds-cfg-virtual-attribute",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "attributeType": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-attribute-type",
                "type": "simple",
              },
              "baseDn": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-base-dn",
                "type": "simple",
              },
              "conflictBehavior": {
                "ldapAttribute": "ds-cfg-conflict-behavior",
                "type": "simple",
              },
              "enabled": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "filter": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-filter",
                "type": "simple",
              },
              "groupDn": {
                "ldapAttribute": "ds-cfg-group-dn",
                "type": "simple",
              },
              "javaClass": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "scope": {
                "ldapAttribute": "ds-cfg-scope",
                "type": "simple",
              },
              "value": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-value",
                "type": "simple",
              },
            },
          },
          "identities/admin": {
            "dnTemplate": "o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/alpha": {
            "dnTemplate": "o=alpha,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/bravo": {
            "dnTemplate": "o=bravo,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "internal/role": {
            "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "fr-idm-internal-role",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "authzMembers": {
                "isMultiValued": true,
                "propertyName": "authzRoles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "condition": {
                "ldapAttribute": "fr-idm-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "name": {
                "ldapAttribute": "fr-idm-name",
                "type": "simple",
              },
              "privileges": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-privilege",
                "type": "json",
              },
              "temporalConstraints": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-temporal-constraints",
                "type": "json",
              },
            },
          },
          "internal/user": {
            "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-internal-user",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "password": {
                "ldapAttribute": "fr-idm-password",
                "type": "json",
              },
            },
          },
          "link": {
            "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-link",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "firstId": {
                "ldapAttribute": "fr-idm-link-firstId",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-link-qualifier",
                "type": "simple",
              },
              "linkType": {
                "ldapAttribute": "fr-idm-link-type",
                "type": "simple",
              },
              "secondId": {
                "ldapAttribute": "fr-idm-link-secondId",
                "type": "simple",
              },
            },
          },
          "locks": {
            "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-lock",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-lock-nodeid",
                "type": "simple",
              },
            },
          },
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple",
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple",
              },
            },
          },
          "recon/assoc": {
            "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
            "namingStrategy": {
              "dnAttribute": "fr-idm-reconassoc-reconid",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "fr-idm-reconassoc",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "fr-idm-reconassoc-reconid",
                "type": "simple",
              },
              "finishTime": {
                "ldapAttribute": "fr-idm-reconassoc-finishtime",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "subResources": {
              "entry": {
                "namingStrategy": {
                  "dnAttribute": "uid",
                  "type": "clientDnNaming",
                },
                "resource": "recon-assoc-entry",
                "type": "collection",
              },
            },
          },
          "recon/assoc/entry": {
            "objectClasses": [
              "uidObject",
              "fr-idm-reconassocentry",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "action": {
                "ldapAttribute": "fr-idm-reconassocentry-action",
                "type": "simple",
              },
              "ambiguousTargetObjectIds": {
                "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                "type": "simple",
              },
              "exception": {
                "ldapAttribute": "fr-idm-reconassocentry-exception",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "message": {
                "ldapAttribute": "fr-idm-reconassocentry-message",
                "type": "simple",
              },
              "messageDetail": {
                "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                "type": "simple",
              },
              "phase": {
                "ldapAttribute": "fr-idm-reconassocentry-phase",
                "type": "simple",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-reconassocentry-reconid",
                "type": "simple",
              },
              "situation": {
                "ldapAttribute": "fr-idm-reconassocentry-situation",
                "type": "simple",
              },
              "sourceObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "status": {
                "ldapAttribute": "fr-idm-reconassocentry-status",
                "type": "simple",
              },
              "targetObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "resourceName": "recon-assoc-entry",
            "subResourceRouting": [
              {
                "prefix": "entry",
                "template": "recon/assoc/{reconId}/entry",
              },
            ],
          },
          "sync/queue": {
            "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-syncqueue",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "context": {
                "ldapAttribute": "fr-idm-syncqueue-context",
                "type": "json",
              },
              "createDate": {
                "ldapAttribute": "fr-idm-syncqueue-createdate",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-syncqueue-mapping",
                "type": "simple",
              },
              "newObject": {
                "ldapAttribute": "fr-idm-syncqueue-newobject",
                "type": "json",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-syncqueue-nodeid",
                "type": "simple",
              },
              "objectRev": {
                "ldapAttribute": "fr-idm-syncqueue-objectRev",
                "type": "simple",
              },
              "oldObject": {
                "ldapAttribute": "fr-idm-syncqueue-oldobject",
                "type": "json",
              },
              "remainingRetries": {
                "ldapAttribute": "fr-idm-syncqueue-remainingretries",
                "type": "simple",
              },
              "resourceCollection": {
                "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                "type": "simple",
              },
              "resourceId": {
                "ldapAttribute": "fr-idm-syncqueue-resourceid",
                "type": "simple",
              },
              "state": {
                "ldapAttribute": "fr-idm-syncqueue-state",
                "type": "simple",
              },
              "syncAction": {
                "ldapAttribute": "fr-idm-syncqueue-syncaction",
                "type": "simple",
              },
            },
          },
        },
        "genericMapping": {
          "cluster/*": {
            "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-cluster-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
            "objectClasses": [
              "uidObject",
              "fr-idm-cluster-obj",
            ],
          },
          "config": {
            "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
          },
          "file": {
            "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
          },
          "internal/notification": {
            "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-notification-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-notification",
            ],
            "properties": {
              "target": {
                "propertyName": "_notifications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "internal/usermeta": {
            "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "jsonstorage": {
            "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
          },
          "managed/*": {
            "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
            },
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
            },
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference",
              },
            },
          },
          "reconprogressstate": {
            "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
          },
          "relationships": {
            "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-relationship-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
            "objectClasses": [
              "uidObject",
              "fr-idm-relationship",
            ],
          },
          "scheduler": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "scheduler/*": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "ui/*": {
            "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
          },
          "updates": {
            "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
          },
        },
      },
      "rest2LdapOptions": {
        "mvccAttribute": "etag",
        "readOnUpdatePolicy": "controls",
        "returnNullForMissingProperties": true,
        "useMvcc": true,
        "usePermissiveModify": true,
        "useSubtreeDelete": true,
      },
      "security": {
        "keyManager": "jvm",
        "trustManager": "jvm",
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/router.idm.json 1`] = `
{
  "idm": {
    "router": {
      "_id": "router",
      "filters": [],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/script.idm.json 1`] = `
{
  "idm": {
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": ".groovy",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{idm.install.dir}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{idm.install.dir}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{idm.install.dir}/bin/defaults/script",
        },
        "install": {
          "directory": "&{idm.install.dir}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/secrets.idm.json 1`] = `
{
  "idm": {
    "secrets": {
      "_id": "secrets",
      "populateDefaults": true,
      "stores": [
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
            "mappings": [
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                  "openidm-localhost",
                ],
                "secretId": "idm.default",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.config.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.password.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.https.keystore.cert.alias|openidm-localhost}",
                ],
                "secretId": "idm.jwt.session.module.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}",
                ],
                "secretId": "idm.jwt.session.module.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "selfservice",
                ],
                "secretId": "idm.selfservice.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}",
                ],
                "secretId": "idm.selfservice.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.assignment.attribute.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
            ],
            "providerName": "&{openidm.keystore.provider|SunJCE}",
            "storePassword": "&{openidm.keystore.password|changeit}",
            "storetype": "&{openidm.keystore.type|JCEKS}",
          },
          "name": "mainKeyStore",
        },
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
            "mappings": [],
            "providerName": "&{openidm.truststore.provider|SUN}",
            "storePassword": "&{openidm.truststore.password|changeit}",
            "storetype": "&{openidm.truststore.type|JKS}",
          },
          "name": "mainTrustStore",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/selfservice.kba.idm.json 1`] = `
{
  "idm": {
    "selfservice.kba": {
      "_id": "selfservice.kba",
      "kbaPropertyName": "kbaInfo",
      "minimumAnswersToDefine": 1,
      "minimumAnswersToVerify": 1,
      "questions": {
        "1": {
          "en": "What's your favorite color?",
        },
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/selfservice.terms.idm.json 1`] = `
{
  "idm": {
    "selfservice.terms": {
      "_id": "selfservice.terms",
      "active": "0.0",
      "uiConfig": {
        "buttonText": "Accept",
        "displayName": "We've updated our terms",
        "purpose": "You must accept the updated terms in order to proceed.",
      },
      "versions": [
        {
          "createDate": "2019-10-28T04:20:11.320Z",
          "termsTranslations": {
            "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
          "version": "0.0",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/servletfilter/cors.idm.json 1`] = `
{
  "idm": {
    "servletfilter/cors": {
      "_id": "servletfilter/cors",
      "initParams": {
        "allowCredentials": false,
        "allowedHeaders": "authorization,accept,content-type,origin,x-requested-with,cache-control,accept-api-version,if-match,if-none-match",
        "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
        "allowedOrigins": "*",
        "chainPreflight": false,
        "exposedHeaders": "WWW-Authenticate",
      },
      "urlPatterns": [
        "/*",
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/servletfilter/payload.idm.json 1`] = `
{
  "idm": {
    "servletfilter/payload": {
      "_id": "servletfilter/payload",
      "initParams": {
        "maxRequestSizeInMegabytes": 5,
      },
      "urlPatterns": [
        "&{openidm.servlet.alias}/*",
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/servletfilter/upload.idm.json 1`] = `
{
  "idm": {
    "servletfilter/upload": {
      "_id": "servletfilter/upload",
      "initParams": {
        "maxRequestSizeInMegabytes": 50,
      },
      "urlPatterns": [
        "&{openidm.servlet.upload.alias}/*",
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/sync.idm.json 1`] = `
{
  "idm": {
    "sync": {
      "_id": "sync",
      "mappings": [],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui.context/admin.idm.json 1`] = `
{
  "idm": {
    "ui.context/admin": {
      "_id": "ui.context/admin",
      "defaultDir": "&{idm.install.dir}/ui/admin/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/admin/extension",
      "responseHeaders": {
        "X-Frame-Options": "SAMEORIGIN",
      },
      "urlContextRoot": "/admin",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui.context/api.idm.json 1`] = `
{
  "idm": {
    "ui.context/api": {
      "_id": "ui.context/api",
      "authEnabled": true,
      "cacheEnabled": false,
      "defaultDir": "&{idm.install.dir}/ui/api/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/api/extension",
      "urlContextRoot": "/api",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui.context/enduser.idm.json 1`] = `
{
  "idm": {
    "ui.context/enduser": {
      "_id": "ui.context/enduser",
      "defaultDir": "&{idm.install.dir}/ui/enduser",
      "enabled": true,
      "responseHeaders": {
        "X-Frame-Options": "DENY",
      },
      "urlContextRoot": "/",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui.context/oauth.idm.json 1`] = `
{
  "idm": {
    "ui.context/oauth": {
      "_id": "ui.context/oauth",
      "cacheEnabled": true,
      "defaultDir": "&{idm.install.dir}/ui/oauth/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
      "urlContextRoot": "/oauthReturn",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui/configuration.idm.json 1`] = `
{
  "idm": {
    "ui/configuration": {
      "_id": "ui/configuration",
      "configuration": {
        "defaultNotificationType": "info",
        "forgotUsername": false,
        "lang": "en",
        "notificationTypes": {
          "error": {
            "iconPath": "images/notifications/error.png",
            "name": "common.notification.types.error",
          },
          "info": {
            "iconPath": "images/notifications/info.png",
            "name": "common.notification.types.info",
          },
          "warning": {
            "iconPath": "images/notifications/warning.png",
            "name": "common.notification.types.warning",
          },
        },
        "passwordReset": true,
        "passwordResetLink": "",
        "platformSettings": {
          "adminOauthClient": "idmAdminClient",
          "adminOauthClientScopes": "fr:idm:*",
          "amUrl": "/am",
          "loginUrl": "",
        },
        "roles": {
          "internal/role/openidm-admin": "ui-admin",
          "internal/role/openidm-authorized": "ui-user",
        },
        "selfRegistration": true,
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui/dashboard.idm.json 1`] = `
{
  "idm": {
    "ui/dashboard": {
      "_id": "ui/dashboard",
      "adminDashboards": [
        {
          "isDefault": true,
          "name": "Quick Start",
          "widgets": [
            {
              "cards": [
                {
                  "href": "#resource/managed/alpha_user/list/",
                  "icon": "fa-user",
                  "name": "Manage Users",
                },
                {
                  "href": "#resource/managed/alpha_role/list/",
                  "icon": "fa-check-square-o",
                  "name": "Manage Roles",
                },
                {
                  "href": "#connectors/add/",
                  "icon": "fa-database",
                  "name": "Add Connector",
                },
                {
                  "href": "#mapping/add/",
                  "icon": "fa-map-marker",
                  "name": "Create Mapping",
                },
                {
                  "href": "#managed/add/",
                  "icon": "fa-tablet",
                  "name": "Add Device",
                },
                {
                  "href": "#settings/",
                  "icon": "fa-user",
                  "name": "Configure System Preferences",
                },
              ],
              "size": "large",
              "type": "quickStart",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "System Monitoring",
          "widgets": [
            {
              "legendRange": {
                "month": [
                  500,
                  2500,
                  5000,
                ],
                "week": [
                  10,
                  30,
                  90,
                  270,
                  810,
                ],
                "year": [
                  10000,
                  40000,
                  100000,
                  250000,
                ],
              },
              "maxRange": "#24423c",
              "minRange": "#b0d4cd",
              "size": "large",
              "type": "audit",
            },
            {
              "size": "large",
              "type": "clusterStatus",
            },
            {
              "size": "large",
              "type": "systemHealthFull",
            },
            {
              "barchart": "false",
              "size": "large",
              "type": "lastRecon",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Resource Report",
          "widgets": [
            {
              "selected": "activeUsers",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "rolesEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "activeConnectors",
              "size": "x-small",
              "type": "counter",
            },
            {
              "size": "large",
              "type": "resourceList",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Business Report",
          "widgets": [
            {
              "graphType": "fa-pie-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "signIns",
              "widgetTitle": "Sign-Ins",
            },
            {
              "graphType": "fa-bar-chart",
              "size": "x-small",
              "type": "passwordResets",
              "widgetTitle": "Password Resets",
            },
            {
              "graphType": "fa-line-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "newRegistrations",
              "widgetTitle": "New Registrations",
            },
            {
              "size": "x-small",
              "timezone": {
                "hours": "07",
                "minutes": "00",
                "negative": true,
              },
              "type": "socialLogin",
            },
            {
              "selected": "socialEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "manualRegistrations",
              "size": "x-small",
              "type": "counter",
            },
          ],
        },
      ],
      "dashboard": {
        "widgets": [
          {
            "size": "large",
            "type": "Welcome",
          },
        ],
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui/profile.idm.json 1`] = `
{
  "idm": {
    "ui/profile": {
      "_id": "ui/profile",
      "tabs": [
        {
          "name": "personalInfoTab",
          "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab",
        },
        {
          "name": "signInAndSecurity",
          "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab",
        },
        {
          "name": "preference",
          "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab",
        },
        {
          "name": "trustedDevice",
          "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab",
        },
        {
          "name": "oauthApplication",
          "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab",
        },
        {
          "name": "privacyAndConsent",
          "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab",
        },
        {
          "name": "sharing",
          "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab",
        },
        {
          "name": "auditHistory",
          "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab",
        },
        {
          "name": "accountControls",
          "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab",
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui/themeconfig.idm.json 1`] = `
{
  "idm": {
    "ui/themeconfig": {
      "_id": "ui/themeconfig",
      "icon": "favicon.ico",
      "path": "",
      "settings": {
        "footer": {
          "mailto": "info@forgerock.com",
        },
        "loginLogo": {
          "alt": "ForgeRock",
          "height": "104px",
          "src": "images/login-logo-dark.png",
          "title": "ForgeRock",
          "width": "210px",
        },
        "logo": {
          "alt": "ForgeRock",
          "src": "images/logo-horizontal-white.png",
          "title": "ForgeRock",
        },
      },
      "stylesheets": [
        "css/bootstrap-3.4.1-custom.css",
        "css/structure.css",
        "css/theme.css",
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/ui/themerealm.idm.json 1`] = `
{
  "idm": {
    "ui/themerealm": {
      "_id": "ui/themerealm",
      "realm": {
        "/alpha": [
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
        "alpha": [
          {
            "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "e47838b5-48c9-4dea-8a84-43f4b4ea8e04",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputSelectHoverColor": "#f6f8fa",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountFooterScriptTag": "",
            "accountFooterScriptTagEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "boldLinks": false,
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyA11yAddFallbackErrorHeading": true,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardBorderRadius": 4,
            "journeyCardHeaderBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFloatingLabels": true,
            "journeyFocusElement": "header",
            "journeyFocusFirstFocusableItemEnabled": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyFooterScriptTag": "",
            "journeyFooterScriptTagEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyHeaderSkipLinkEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputSelectHoverColor": "#f6f8fa",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyJustifiedContentMobileViewEnabled": false,
            "journeyLayout": "justified-right",
            "journeyRememberMeEnabled": false,
            "journeyRememberMeLabel": "",
            "journeySignInButtonPosition": "flex-column",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Copy of Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "successColor": "#2ed47a",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "63e19668-909f-479e-83d7-be7a01cd8187",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": true,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "boldLinks": false,
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [
              "FrodoTest",
              "AA-FrodoTest",
            ],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": false,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "NoAccess",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
          {
            "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
        "bravo": [
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/uilocale/fr.idm.json 1`] = `
{
  "idm": {
    "uilocale/fr": {
      "_id": "uilocale/fr",
      "admin": {
        "overrides": {
          "AppLogoURI": "URI du logo de l’application",
          "EmailAddress": "Adresse e-mail",
          "Name": "Nom",
          "Owners": "Les propriétaires",
        },
        "sideMenu": {
          "securityQuestions": "Questions de sécurité",
        },
      },
      "enduser": {
        "overrides": {
          "FirstName": "Prénom",
          "LastName": "Nom de famille",
        },
        "pages": {
          "dashboard": {
            "widgets": {
              "welcome": {
                "greeting": "Bonjour",
              },
            },
          },
        },
      },
      "login": {
        "login": {
          "next": "Suivant",
        },
        "overrides": {
          "Password": "Mot de passe",
          "UserName": "Nom d'utilisateur",
        },
      },
      "shared": {
        "sideMenu": {
          "dashboard": "Tableau de bord",
        },
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --no-metadata --separate-objects --directory testDir5": should export all idm config entities to separate files in the "testDir5" directory: testDir5/undefined.idm.json 1`] = `
{
  "idm": {
    "undefined": {
      "_id": "undefined",
      "mapping": {
        "mapping/managedBravo_user_managedBravo_user0": {
          "_id": "mapping/managedBravo_user_managedBravo_user0",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user0",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user0",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "target": "managed/bravo_user",
        },
      },
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --entity-id script": should export the idm config entity with idm id "script" 1`] = `0`;

exports[`frodo idm export "frodo idm export --entity-id script": should export the idm config entity with idm id "script" 2`] = `""`;

exports[`frodo idm export "frodo idm export --entity-id script": should export the idm config entity with idm id "script": script.idm.json 1`] = `
{
  "idm": {
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": ".groovy",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{idm.install.dir}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{idm.install.dir}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{idm.install.dir}/bin/defaults/script",
        },
        "install": {
          "directory": "&{idm.install.dir}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory 1`] = `1`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory 2`] = `""`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/access.idm.json 1`] = `
{
  "idm": {
    "access": {
      "_id": "access",
      "configs": [
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/*",
          "roles": "*",
        },
        {
          "actions": "login,logout",
          "methods": "read,action",
          "pattern": "authentication",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fidc/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "*",
          "pattern": "config/fidc/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themeconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themerealm",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/uilocale/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fieldPolicy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/uiconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/dashboard",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "query",
          "pattern": "info/features",
          "roles": "*",
        },
        {
          "actions": "listPrivileges",
          "methods": "action",
          "pattern": "privilege",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "privilege/*",
          "roles": "*",
        },
        {
          "actions": "validate",
          "methods": "action",
          "pattern": "util/validateQueryFilter",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "checkIfAnyFeatureEnabled('kba')",
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "excludePatterns": "repo,repo/*",
          "methods": "*",
          "pattern": "*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "",
          "methods": "create,read,update,delete,patch,query",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "script",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "command",
          "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
          "methods": "action",
          "pattern": "repo/link",
          "roles": "internal/role/openidm-admin",
        },
        {
          "methods": "create,read,query,patch",
          "pattern": "managed/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read,query",
          "pattern": "internal/role/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "create,read,action,update",
          "pattern": "profile/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/terms",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "identityProviders",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "sendTemplate",
          "methods": "action",
          "pattern": "external/email",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "bind,unbind",
          "customAuthz": "ownDataOnly()",
          "methods": "read,action,delete",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
          "methods": "update,patch,action",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
          "methods": "patch,action",
          "pattern": "selfservice/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
          "methods": "patch,action",
          "pattern": "managed/user",
          "roles": "internal/role/openidm-cert",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_meta', false)",
          "methods": "read",
          "pattern": "internal/usermeta/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_notifications', true)",
          "methods": "read,delete",
          "pattern": "internal/notification/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "deleteNotificationsForTarget",
          "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
          "methods": "action",
          "pattern": "notification",
          "roles": "internal/role/openidm-authorized",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/alphaOrgPrivileges.idm.json 1`] = `
{
  "idm": {
    "alphaOrgPrivileges": {
      "_id": "alphaOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/audit.idm.json 1`] = `
{
  "idm": {
    "audit": {
      "_id": "audit",
      "auditServiceConfig": {
        "availableAuditEventHandlers": [
          "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
          "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
          "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
          "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
          "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
          "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
          "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler",
        ],
        "caseInsensitiveFields": [
          "/access/http/request/headers",
          "/access/http/response/headers",
        ],
        "filterPolicies": {
          "value": {
            "excludeIf": [
              "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
              "/access/http/request/cookies/session-jwt",
              "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
              "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
              "/access/http/request/headers/accept-encoding",
              "/access/http/request/headers/accept-language",
              "/access/http/request/headers/Authorization",
              "/access/http/request/headers/cache-control",
              "/access/http/request/headers/connection",
              "/access/http/request/headers/content-length",
              "/access/http/request/headers/content-type",
              "/access/http/request/headers/proxy-authorization",
              "/access/http/request/headers/X-OpenAM-Password",
              "/access/http/request/headers/X-OpenIDM-Password",
              "/access/http/request/queryParameters/access_token",
              "/access/http/request/queryParameters/IDToken1",
              "/access/http/request/queryParameters/id_token_hint",
              "/access/http/request/queryParameters/Login.Token1",
              "/access/http/request/queryParameters/redirect_uri",
              "/access/http/request/queryParameters/requester",
              "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
              "/access/http/request/queryParameters/tokenId",
              "/access/http/response/headers/Authorization",
              "/access/http/response/headers/Set-Cookie",
              "/access/http/response/headers/X-OpenIDM-Password",
            ],
            "includeIf": [],
          },
        },
        "handlerForQueries": "json",
      },
      "eventHandlers": [
        {
          "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "config": {
            "name": "json",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
        {
          "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "config": {
            "enabled": false,
            "name": "repo",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
      ],
      "eventTopics": {
        "activity": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
          "passwordFields": [
            "password",
          ],
          "watchedFields": [],
        },
        "config": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
        },
      },
      "exceptionFormatter": {
        "file": "bin/defaults/script/audit/stacktraceFormatter.js",
        "type": "text/javascript",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/authentication.idm.json 1`] = `
{
  "idm": {
    "authentication": {
      "_id": "authentication",
      "rsFilter": {
        "augmentSecurityContext": {
          "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
          "type": "text/javascript",
        },
        "cache": {
          "maxTimeout": "300 seconds",
        },
        "scopes": [
          "fr:idm:*",
        ],
        "staticUserMapping": [
          {
            "localUser": "internal/user/idm-provisioning",
            "roles": [
              "internal/role/openidm-admin",
            ],
            "subject": "autoid-resource-server",
          },
        ],
        "subjectMapping": [
          {
            "additionalUserFields": [
              "adminOfOrg",
              "ownerOfOrg",
            ],
            "defaultRoles": [
              "internal/role/openidm-authorized",
            ],
            "propertyMapping": {
              "sub": "_id",
            },
            "queryOnResource": "managed/{{substring realm 1}}_user",
            "userRoles": "authzRoles/*",
          },
        ],
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/bravoOrgPrivileges.idm.json 1`] = `
{
  "idm": {
    "bravoOrgPrivileges": {
      "_id": "bravoOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/baselineDemoEmailVerification.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/baselineDemoEmailVerification": {
      "_id": "emailTemplate/baselineDemoEmailVerification",
      "defaultLocale": "en",
      "displayName": "Baseline Demo Email Verification",
      "enabled": true,
      "from": "security@example.com",
      "html": {
        "en": "<div class="content"><h1 id="emailverification">Email Verification</h1><p><br></p><p>Hello,</p><p>Great to have you on board.</p><p><br></p><hr><h5 id="verifyyouraccount">Verify Your Account</h5><p>Finish the steps of verification for the account by clicking the button below. <br></p><p><br></p><p><row><a href="{{object.resumeURI}}" title="" class="button">Click Here to Verify Your Account</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #f6f6f6; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 600px;"><h1 id="emailverification" style="font-size: 40px; text-align: center;">Email Verification</h1><p><br></p><p>Hello,</p><p>Great to have you on board.</p><p><br></p><hr><h5 id="verifyyouraccount" style="font-size: 24px;">Verify Your Account</h5><p>Finish the steps of verfication for the account by clicking the button below. <br></p><p><br></p><p><row><a href="{{object.resumeURI}}" title class="button" style="background-color: #109cf1; border: none; color: white; padding: 15px 32px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px;">Click Here to Verify Your Account</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com" style="text-decoration: none; color: #109cf1;">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com" style="text-decoration: none; color: #109cf1;">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=" style="text-decoration: none; color: #109cf1;">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #f6f6f6;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 h1 {
 font-size: 40px;
 text-align: center;
}
 h2 {
 font-size: 36px;
}
 h3 {
 font-size: 32px;
}
 h4 {
 font-size: 28px;
}
 h5 {
 font-size: 24px;
}
 h6 {
 font-size: 20px;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 600px 
}
 .button {
 background-color: #109cf1;
 border: none;
 color: white;
 padding: 15px 32px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
}
 ",
      "subject": {
        "en": "Please verify your email address",
      },
      "templateId": "baselineDemoEmailVerification",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/baselineDemoMagicLink.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/baselineDemoMagicLink": {
      "_id": "emailTemplate/baselineDemoMagicLink",
      "defaultLocale": "en",
      "displayName": "Baseline Demo Magic Link",
      "enabled": true,
      "from": "security@example.com",
      "html": {
        "en": "<div class="content"><h1 id="welcomeback">Welcome back</h1><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to sign you into your account.</p><p><br></p><hr><p><row><a href="{{object.resumeURI}}" title="" class="button">Finish Signing In</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body><div class="content"><h1 id="welcomeback">Welcome back</h1><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to sign you into your account.</p><p><br></p><hr><p><row><a href="{{object.resumeURI}}" title class="button">Finish Signing In</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #f6f6f6;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 h1 {
 font-size: 40px;
 text-align: center;
}
 h2 {
 font-size: 36px;
}
 h3 {
 font-size: 32px;
}
 h4 {
 font-size: 28px;
}
 h5 {
 font-size: 24px;
}
 h6 {
 font-size: 20px;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 600px 
}
 .button {
 background-color: #109cf1;
 border: none;
 color: white;
 padding: 15px 32px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
}
 ",
      "subject": {
        "en": "Your sign-in link",
      },
      "templateId": "baselineDemoMagicLink",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/forgottenUsername.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href="{{object.resumeURI}}">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}">Cliquez ici pour vous connecter</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Cliquez ici pour vous connecter</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frEmailUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frEmailUpdated": {
      "_id": "emailTemplate/frEmailUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account email has changed</h1></div><p>Your ForgeRock Identity Cloud email has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your email has been updated",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frForgotUsername.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frForgotUsername": {
      "_id": "emailTemplate/frForgotUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="height:50px;margin-bottom:16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Forgot your username?</h1></div><p>Your username is <b>{{ object.userName }}</b>.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Sign In to Your Account</a></p><p>If you didn't request this, please ignore this email.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Forgot Username",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frOnboarding.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frOnboarding": {
      "_id": "emailTemplate/frOnboarding",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account is ready</h1></div><p>Your ForgeRock Identity Cloud account is ready. Click the button below to complete registration and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Complete Registration</a></p><p>If you did not request this account, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Complete your ForgeRock Identity Cloud registration",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frPasswordUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frPasswordUpdated": {
      "_id": "emailTemplate/frPasswordUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account password has changed</h1></div><p>Your ForgeRock Identity Cloud password has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your password has been updated",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frProfileUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frProfileUpdated": {
      "_id": "emailTemplate/frProfileUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account profile has changed</h1></div><p>Your ForgeRock Identity Cloud profile has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your profile has been updated",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frResetPassword.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frResetPassword": {
      "_id": "emailTemplate/frResetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Reset your password</h1></div><p>It seems you have forgotten the password for your ForgeRock Identity Cloud account. Click the button below to reset your password and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Reset Password</a></p><p>If you did not request to reset your password, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frUsernameUpdated.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/frUsernameUpdated": {
      "_id": "emailTemplate/frUsernameUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account username has changed</h1></div><p>Your ForgeRock Identity Cloud username has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your username has been updated",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/idv.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/idv": {
      "_id": "emailTemplate/idv",
      "defaultLocale": "en",
      "description": "Identity Verification Invitation",
      "displayName": "idv",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<div class="content"><h3 id="clickthelinkbelowtoverifyyouridentity">Click the link below to verify your identity:</h3><p><a href="{{object.resumeURI}}">Verify my identity now</a></p></div>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="clickthelinkbelowtoverifyyouridentity">Click the link below to verify your identity:</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Verify my identity now</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></body></html>",
      },
      "mimeType": "text/html",
      "name": "registration",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "You have been invited to verify your identity",
        "fr": "Créer un nouveau compte",
      },
      "templateId": "idv",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/joiner.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/joiner": {
      "_id": "emailTemplate/joiner",
      "advancedEditor": true,
      "defaultLocale": "en",
      "description": "This email will be sent onCreate of user to the external eMail address provided during creation. An OTP will also be sent to Telephone Number provided during creation to validate the user.  The user will then be able to set their password and ForgeRock Push Authenticator",
      "displayName": "Joiner",
      "enabled": true,
      "from": ""Encore HR" <no-reply@encore.com>",
      "html": {
        "en": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="background-color:#324054;color:#455469;padding:60px;text-align:center">
    <div class="content" style="background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:500px">
      <p>
        <img src="https://encore.forgerock.com/media/logos/encore-icon-dark-logo.png" width="125" title="Welcome to Encore" />
      </p>
      <h1 id="welcometoencore">Welcome to Encore {{object.givenName}} {{object.sn}}</h1>
      <p>Please click on the link below to validate your phone number with a One Time Code that will be sent via SMS or called to you depending on your phone type. </p>
      <p>You will see your UserName and have the ability to set your password that will be used to login to Encore resources.  </p>
      <p>As we believe in enhanced security, you will also be setting up a Push Notification for future use.</p>
      <a href="https://openam-volker-demo.forgeblocks.com/am/XUI/?realm=alpha&amp;authIndexType=service&amp;authIndexValue=wks-NEO&amp;userName={{object.userName}}">Click to Join Encore</a>
    </div>
  </body>
</html>",
      },
      "mimeType": "text/html",
      "styles": "body {
   background-color: #324054;
   color: #455469;
   padding: 60px;
   text-align: center 
}
 a {
   text-decoration: none;
   color: #109cf1;
}
 .content {
   background-color: #fff;
   border-radius: 4px;
   margin: 0 auto;
   padding: 48px;
   width: 235px 
}
 ",
      "subject": {
        "en": "Welcome to Encore!",
      },
      "templateId": "joiner",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/registerPasswordlessDevice.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/registerPasswordlessDevice": {
      "_id": "emailTemplate/registerPasswordlessDevice",
      "defaultLocale": "en",
      "description": "",
      "displayName": "Register Passwordless Device",
      "enabled": true,
      "from": ""ForgeRock Identity Cloud" <no-reply@forgerock.com>",
      "html": {
        "en": "<div class="content"><h1 id="welcomeback">Welcome back</h1><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Passwordless Registration"></p><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to register a new passwordless device.</p><p><br></p><hr><p><a href="{{object.resumeURI}}">Register New Device</a></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h1 id="welcomeback">Welcome back</h1><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Passwordless Registration"></p><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to register a new passwordless device.</p><p><br></p><hr><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Register New Device</a></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com" style="text-decoration: none; color: #109cf1;">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com" style="text-decoration: none; color: #109cf1;">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=" style="text-decoration: none; color: #109cf1;">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
	background-color: #324054;
	color: #455469;
	padding: 60px;
	text-align: center
}

a {
	text-decoration: none;
	color: #109cf1;
}

.content {
	background-color: #fff;
	border-radius: 4px;
	margin: 0 auto;
	padding: 48px;
	width: 235px
}
",
      "subject": {
        "en": "Your magic link is here - register new WebAuthN device",
      },
      "templateId": "registerPasswordlessDevice",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/registration.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/registration": {
      "_id": "emailTemplate/registration",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}">Email verification link</a></p></body></html>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Email verification link</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Register new account",
        "fr": "Créer un nouveau compte",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/resetPassword.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href="{{object.resumeURI}}">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href="{{object.resumeURI}}">Mot de passe lien de réinitialisation</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/updatePassword.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href="{{object.resumeURI}}">Update password link</a></p>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="verifyemailtoupdatepassword">Verify email to update password</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Update password link</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/welcome.idm.json 1`] = `
{
  "idm": {
    "emailTemplate/welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Welcome. Your username is '{{object.userName}}'.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{
 background-color:#324054;
 color:#5e6d82;
 padding:60px;
 text-align:center
}
a{
 text-decoration:none;
 color:#109cf1
}
.content{
 background-color:#fff;
 border-radius:4px;
 margin:0 auto;
 padding:48px;
 width:235px
}
",
      "subject": {
        "en": "Your account has been created",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/entityId.idm.json 1`] = `
{
  "idm": {
    "entityId": {
      "_id": "entityId",
      "defaultLocale": "en",
      "displayName": "Frodo Test Email Template Three",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><body><h3>You started a login or profile update that requires MFA. </h3><h4><a href="{{object.resumeURI}}">Click to Proceed</a></h4></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Multi-Factor Email for Identity Cloud login",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.email.idm.json 1`] = `
{
  "idm": {
    "external.email": {
      "_id": "external.email",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": true,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.emailDefault.idm.json 1`] = `
{
  "idm": {
    "external.emailDefault": {
      "_id": "external.emailDefault",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": true,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/fieldPolicy/alpha_user.idm.json 1`] = `
{
  "idm": {
    "fieldPolicy/alpha_user": {
      "_id": "fieldPolicy/alpha_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/alpha_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "alpha_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 10,
          "type": "length-based",
        },
        {
          "_id": "alpha_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "alpha_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "0:abcdefghijklmnopqrstuvwxyz",
            "0:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "0:0123456789",
            "0:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "minCharacterSets": 4,
          "type": "character-set",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/fieldPolicy/bravo_user.idm.json 1`] = `
{
  "idm": {
    "fieldPolicy/bravo_user": {
      "_id": "fieldPolicy/bravo_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/bravo_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "bravo_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based",
        },
        {
          "_id": "bravo_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "bravo_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "type": "character-set",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/internal.idm.json 1`] = `
{
  "idm": {
    "internal": {
      "_id": "internal",
      "objects": [
        {
          "name": "role",
          "properties": {
            "authzMembers": {
              "items": {
                "resourceCollection": [
                  {
                    "conditionalAssociation": true,
                    "label": "User",
                    "notify": true,
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/managed.idm.json 1`] = `
{
  "idm": {
    "managed": {
      "_id": "managed",
      "objects": [
        {
          "lastSync": {
            "effectiveAssignmentsProperty": "effectiveAssignments",
            "lastSyncProperty": "lastSync",
          },
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/alpha_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged",
            ],
          },
          "name": "alpha_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "assignments",
              "groups",
              "applications",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "effectiveGroups",
              "effectiveApplications",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "ownerOfApp",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard",
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false,
              },
              "applications": {
                "description": "Applications",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": true,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "assignments": {
                "description": "Assignments",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignments",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "cn": {
                "default": "{{givenName}} {{sn}}",
                "description": "Common Name",
                "isPersonal": true,
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate",
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                    },
                    "required": [
                      "mapping",
                      "consentDate",
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object",
                  },
                  "title": "Consented Mappings Items",
                  "type": "array",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "effectiveApplications": {
                "description": "Effective Applications",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assigned Application Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Applications",
                "type": "array",
                "viewable": false,
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "assignments",
                    ],
                    [
                      "assignments",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/alpha_group",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId",
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string",
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string",
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object",
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp",
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object",
                    },
                    "title": "Effective Assignments",
                    "type": "array",
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string",
                  },
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format",
                  },
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string",
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string",
                      },
                    },
                    "title": "Manager _refProperties",
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "ownerOfApp": {
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Applications I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing",
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean",
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean",
                  },
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                  {
                    "params": {
                      "minLength": 1,
                    },
                    "policyId": "minimum-length",
                  },
                  {
                    "params": {
                      "maxLength": 255,
                    },
                    "policyId": "maximum-length",
                  },
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail",
            ],
            "title": "Alpha realm - User",
            "type": "object",
            "viewable": true,
          },
        },
        {
          "lastSync": {
            "effectiveAssignmentsProperty": "effectiveAssignments",
            "lastSyncProperty": "lastSync",
          },
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/bravo_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged",
            ],
          },
          "name": "bravo_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "assignments",
              "groups",
              "applications",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "effectiveGroups",
              "effectiveApplications",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "ownerOfApp",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard",
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false,
              },
              "applications": {
                "description": "Applications",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": true,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "assignments": {
                "description": "Assignments",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignments",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "cn": {
                "default": "{{givenName}} {{sn}}",
                "description": "Common Name",
                "isPersonal": true,
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate",
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                    },
                    "required": [
                      "mapping",
                      "consentDate",
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object",
                  },
                  "title": "Consented Mappings Items",
                  "type": "array",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "effectiveApplications": {
                "description": "Effective Applications",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assigned Application Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Applications",
                "type": "array",
                "viewable": false,
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "assignments",
                    ],
                    [
                      "assignments",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/bravo_group",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId",
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string",
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string",
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object",
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp",
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object",
                    },
                    "title": "Effective Assignments",
                    "type": "array",
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string",
                  },
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format",
                  },
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string",
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string",
                      },
                    },
                    "title": "Manager _refProperties",
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/bravo_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "ownerOfApp": {
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Applications I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing",
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean",
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean",
                  },
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                  {
                    "params": {
                      "minLength": 1,
                    },
                    "policyId": "minimum-length",
                  },
                  {
                    "params": {
                      "maxLength": 255,
                    },
                    "policyId": "maximum-length",
                  },
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail",
            ],
            "title": "Bravo realm - User",
            "type": "object",
            "viewable": true,
          },
        },
        {
          "name": "alpha_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "applications",
              "condition",
              "temporalConstraints",
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "applications": {
                "description": "Role Applications",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Application Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Application Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "viewable": false,
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration",
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string",
                    },
                  },
                  "required": [
                    "duration",
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Role",
            "type": "object",
          },
        },
        {
          "name": "bravo_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "applications",
              "condition",
              "temporalConstraints",
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "applications": {
                "description": "Role Applications",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Application Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Application Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "viewable": false,
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration",
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string",
                    },
                  },
                  "required": [
                    "duration",
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Role",
            "type": "object",
          },
        },
        {
          "attributeEncryption": {},
          "name": "alpha_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "type",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
              "members",
              "condition",
              "weight",
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value",
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string",
                    },
                    "name": {
                      "description": "Name",
                      "type": "string",
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string",
                    },
                    "value": {
                      "description": "Value",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this assignment",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string",
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true,
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists",
                  },
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Assignment Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Assignment Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Assignment Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignment Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "type": {
                "description": "The type of object this assignment represents",
                "title": "Type",
                "type": "string",
                "viewable": true,
              },
              "weight": {
                "description": "The weight of the assignment.",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "searchable": false,
                "title": "Weight",
                "type": [
                  "number",
                  "null",
                ],
                "viewable": true,
              },
            },
            "required": [
              "name",
              "description",
              "mapping",
            ],
            "title": "Alpha realm - Assignment",
            "type": "object",
          },
        },
        {
          "attributeEncryption": {},
          "name": "bravo_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "type",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
              "members",
              "condition",
              "weight",
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value",
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string",
                    },
                    "name": {
                      "description": "Name",
                      "type": "string",
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string",
                    },
                    "value": {
                      "description": "Value",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this assignment",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string",
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true,
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists",
                  },
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Assignment Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Assignment Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Assignment Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignment Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "type": {
                "description": "The type of object this assignment represents",
                "title": "Type",
                "type": "string",
                "viewable": true,
              },
              "weight": {
                "description": "The weight of the assignment.",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "searchable": false,
                "title": "Weight",
                "type": [
                  "number",
                  "null",
                ],
                "viewable": true,
              },
            },
            "required": [
              "name",
              "description",
              "mapping",
            ],
            "title": "Bravo realm - Assignment",
            "type": "object",
          },
        },
        {
          "name": "alpha_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "mat-icon": "domain",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs",
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "admins",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "owners",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members",
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string",
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/alpha_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description",
                      ],
                      "queryFilter": "true",
                      "sortKeys": [],
                    },
                  },
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Organization",
            "type": "object",
          },
        },
        {
          "name": "bravo_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "mat-icon": "domain",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs",
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "admins",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "owners",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members",
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string",
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/bravo_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description",
                      ],
                      "queryFilter": "true",
                      "sortKeys": [],
                    },
                  },
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Organization",
            "type": "object",
          },
        },
        {
          "name": "alpha_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name",
                    },
                    "policyId": "id-must-equal-property",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter",
                  },
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true,
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Group",
            "viewable": true,
          },
        },
        {
          "name": "bravo_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name",
                    },
                    "policyId": "id-must-equal-property",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter",
                  },
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true,
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Group",
            "viewable": true,
          },
        },
        {
          "name": "alpha_application",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "Application Object",
            "icon": "fa-folder",
            "order": [
              "name",
              "description",
              "url",
              "icon",
              "mappingNames",
              "owners",
              "roles",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Application ID",
                "isPersonal": false,
                "searchable": false,
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "authoritative": {
                "description": "Is this an authoritative application",
                "searchable": false,
                "title": "Authoritative",
                "type": "boolean",
                "viewable": false,
              },
              "connectorId": {
                "description": "Id of the connector associated with the application",
                "searchable": false,
                "title": "Connector ID",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "description": "Application Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "icon": {
                "searchable": true,
                "title": "Icon",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "mappingNames": {
                "description": "Names of the sync mappings used by an application with provisioning configured.",
                "items": {
                  "title": "Mapping Name Items",
                  "type": "string",
                },
                "searchable": true,
                "title": "Sync Mapping Names",
                "type": "array",
                "viewable": true,
              },
              "members": {
                "description": "Application Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Application name",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "returnByDefault": true,
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "owners": {
                "description": "Application Owners",
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Application _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfApp",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Owners",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Roles granting users the application",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ssoEntities": {
                "description": "SSO Entity Id",
                "properties": {
                  "idpLocation": {
                    "type": "string",
                  },
                  "idpPrivateId": {
                    "type": "string",
                  },
                  "spLocation": {
                    "type": "string",
                  },
                  "spPrivate": {
                    "type": "string",
                  },
                },
                "searchable": false,
                "title": "SSO Entity Id",
                "type": "object",
                "userEditable": false,
                "viewable": false,
              },
              "templateName": {
                "description": "Name of the template the application was created from",
                "searchable": false,
                "title": "Template Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "templateVersion": {
                "description": "The template version",
                "searchable": false,
                "title": "Template Version",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "uiConfig": {
                "description": "UI Config",
                "isPersonal": false,
                "properties": {},
                "searchable": false,
                "title": "UI Config",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "url": {
                "searchable": true,
                "title": "Url",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Application",
            "type": "object",
          },
        },
        {
          "name": "bravo_application",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "Application Object",
            "icon": "fa-folder",
            "order": [
              "name",
              "description",
              "url",
              "icon",
              "mappingNames",
              "owners",
              "roles",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Application ID",
                "isPersonal": false,
                "searchable": false,
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "authoritative": {
                "description": "Is this an authoritative application",
                "searchable": false,
                "title": "Authoritative",
                "type": "boolean",
                "viewable": false,
              },
              "connectorId": {
                "description": "Id of the connector associated with the application",
                "searchable": false,
                "title": "Connector ID",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "description": "Application Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "icon": {
                "searchable": true,
                "title": "Icon",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "mappingNames": {
                "description": "Names of the sync mappings used by an application with provisioning configured.",
                "items": {
                  "title": "Mapping Name Items",
                  "type": "string",
                },
                "searchable": true,
                "title": "Sync Mapping Names",
                "type": "array",
                "viewable": true,
              },
              "members": {
                "description": "Application Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Application name",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "returnByDefault": true,
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "owners": {
                "description": "Application Owners",
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Application _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfApp",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Owners",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Roles granting users the application",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ssoEntities": {
                "description": "SSO Entity Id",
                "properties": {
                  "idpLocation": {
                    "type": "string",
                  },
                  "idpPrivateId": {
                    "type": "string",
                  },
                  "spLocation": {
                    "type": "string",
                  },
                  "spPrivate": {
                    "type": "string",
                  },
                },
                "searchable": false,
                "title": "SSO Entity Id",
                "type": "object",
                "userEditable": false,
                "viewable": false,
              },
              "templateName": {
                "description": "Name of the template the application was created from",
                "searchable": false,
                "title": "Template Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "templateVersion": {
                "description": "The template version",
                "searchable": false,
                "title": "Template Version",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "uiConfig": {
                "description": "UI Config",
                "isPersonal": false,
                "properties": {},
                "searchable": false,
                "title": "UI Config",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "url": {
                "searchable": true,
                "title": "Url",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Application",
            "type": "object",
          },
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/managedAlpha_assignment_managedBravo_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/managedAlpha_assignment_managedBravo_assignment": {
      "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
      "consentRequired": false,
      "displayName": "managedAlpha_assignment_managedBravo_assignment",
      "icon": null,
      "name": "managedAlpha_assignment_managedBravo_assignment",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/alpha_assignment",
      "target": "managed/bravo_assignment",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/managedAlpha_user_systemAzureUser.idm.json 1`] = `
{
  "idm": {
    "mapping/managedAlpha_user_systemAzureUser": {
      "_id": "mapping/managedAlpha_user_systemAzureUser",
      "consentRequired": false,
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__",
      ],
      "displayName": "managedAlpha_user_systemAzureUser",
      "icon": null,
      "name": "managedAlpha_user_systemAzureUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "mail",
          "target": "mail",
        },
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "sn",
          "target": "surname",
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName+" "+source.sn",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "mailNickname",
          "transform": {
            "source": "source.givenName[0].toLowerCase()+source.sn.toLowerCase()",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "accountEnabled",
          "transform": {
            "source": "true",
            "type": "text/javascript",
          },
        },
        {
          "condition": {
            "globals": {},
            "source": "(typeof oldTarget === 'undefined' || oldTarget === null)",
            "type": "text/javascript",
          },
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": ""!@#$%"[Math.floor(Math.random()*5)] + Math.random().toString(36).slice(2, 13).toUpperCase()+Math.random().toString(36).slice(2,13)",
            "type": "text/javascript",
          },
        },
      ],
      "queuedSync": {
        "enabled": true,
        "maxRetries": 0,
        "pollingInterval": 10000,
      },
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "0f357b7e-6c54-4351-a094-43916877d7e5"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemAzureUser" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "0f357b7e-6c54-4351-a094-43916877d7e5"] or lastSync/managedAlpha_user_systemAzureUser pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemAzureUser" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/Azure/User",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/managedBravo_group_managedBravo_group.idm.json 1`] = `
{
  "idm": {
    "mapping/managedBravo_group_managedBravo_group": {
      "_id": "mapping/managedBravo_group_managedBravo_group",
      "consentRequired": false,
      "displayName": "managedBravo_group_managedBravo_group",
      "icon": null,
      "name": "managedBravo_group_managedBravo_group",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_group",
      "target": "managed/bravo_group",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/managedBravo_user_managedBravo_user0.idm.json 1`] = `
{
  "idm": {
    "mapping/managedBravo_user_managedBravo_user0": {
      "_id": "mapping/managedBravo_user_managedBravo_user0",
      "consentRequired": false,
      "displayName": "managedBravo_user_managedBravo_user0",
      "icon": null,
      "name": "managedBravo_user_managedBravo_user0",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_user",
      "target": "managed/bravo_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/mapping12.idm.json 1`] = `
{
  "idm": {
    "mapping/mapping12": {
      "_id": "mapping/mapping12",
      "consentRequired": false,
      "displayName": "mapping12",
      "linkQualifiers": [],
      "name": "mapping12",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/systemAzure__group___managedAlpha_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzure__group___managedAlpha_assignment": {
      "_id": "mapping/systemAzure__group___managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzure__group___managedAlpha_assignment",
      "icon": null,
      "name": "systemAzure__group___managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== "undefined" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== "undefined" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'memberOf',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure___GROUP___",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/__GROUP__",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "memberOf"]",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/systemAzureDirectoryrole_managedAlpha_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzureDirectoryrole_managedAlpha_assignment": {
      "_id": "mapping/systemAzureDirectoryrole_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureDirectoryrole_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureDirectoryrole_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== "undefined" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== "undefined" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': '__roles__',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_directoryRole_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/directoryRole",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "__roles__"]",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/systemAzureServiceplan_managedAlpha_assignment.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzureServiceplan_managedAlpha_assignment": {
      "_id": "mapping/systemAzureServiceplan_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureServiceplan_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureServiceplan_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== "undefined" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== "undefined" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': '__servicePlanIds__',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_servicePlan_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/servicePlan",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "__servicePlanIds__"]",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/mapping/systemAzureUser_managedAlpha_user.idm.json 1`] = `
{
  "idm": {
    "mapping/systemAzureUser_managedAlpha_user": {
      "_id": "mapping/systemAzureUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.mail + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemAzureUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemAzureUser",
      "name": "systemAzureUser_managedAlpha_user",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ONBOARD",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectType": "__GROUP__",
          "source": "memberOf",
          "target": "assignments",
        },
        {
          "referencedObjectType": "directoryRole",
          "source": "__roles__",
          "target": "assignments",
        },
        {
          "referencedObjectType": "servicePlan",
          "source": "__servicePlanIds__",
          "target": "assignments",
        },
      ],
      "reconSourceQueryPageSize": 999,
      "reconSourceQueryPaging": true,
      "runTargetPhase": false,
      "source": "system/Azure/User",
      "sourceQueryFullEntry": true,
      "target": "managed/alpha_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/policy.idm.json 1`] = `
{
  "idm": {
    "policy": {
      "_id": "policy",
      "additionalFiles": [],
      "resources": [],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/privilegeAssignments.idm.json 1`] = `
{
  "idm": {
    "privilegeAssignments": {
      "_id": "privilegeAssignments",
      "privilegeAssignments": [
        {
          "name": "ownerPrivileges",
          "privileges": [
            "owner-view-update-delete-orgs",
            "owner-create-orgs",
            "owner-view-update-delete-admins-and-members",
            "owner-create-admins",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "ownerOfOrg",
        },
        {
          "name": "adminPrivileges",
          "privileges": [
            "admin-view-update-delete-orgs",
            "admin-create-orgs",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "adminOfOrg",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/privileges.idm.json 1`] = `
{
  "idm": {
    "privileges": {
      "_id": "privileges",
      "privileges": [],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/provisioner.openic/GoogleApps.idm.json 1`] = `
{
  "idm": {
    "provisioner.openic/GoogleApps": {
      "_id": "provisioner.openic/GoogleApps",
      "configurationProperties": {
        "availableLicenses": [
          "101005/1010050001",
          "101001/1010010001",
          "101031/1010310010",
          "101034/1010340002",
          "101038/1010380002",
          "101034/1010340001",
          "101038/1010380003",
          "101034/1010340004",
          "101034/1010340003",
          "101034/1010340006",
          "Google-Apps/Google-Apps-For-Business",
          "101034/1010340005",
          "Google-Vault/Google-Vault",
          "Google-Apps/1010020031",
          "Google-Apps/1010020030",
          "Google-Apps/1010060003",
          "Google-Apps/1010060005",
          "Google-Apps/Google-Apps-Unlimited",
          "Google-Apps/1010020029",
          "Google-Apps/Google-Apps-Lite",
          "101031/1010310003",
          "101033/1010330002",
          "101033/1010330004",
          "Google-Apps/Google-Apps-For-Education",
          "101031/1010310002",
          "101033/1010330003",
          "Google-Apps/1010020026",
          "101031/1010310007",
          "Google-Apps/1010020025",
          "101031/1010310008",
          "Google-Apps/1010020028",
          "Google-Apps/Google-Apps-For-Postini",
          "101031/1010310005",
          "Google-Apps/1010020027",
          "101031/1010310006",
          "101031/1010310009",
          "Google-Vault/Google-Vault-Former-Employee",
          "101038/1010370001",
          "Google-Apps/1010020020",
          "Google-Apps/1010060001",
        ],
        "clientId": "&{esv.gac.client.id}",
        "clientSecret": "&{esv.gac.secret}",
        "domain": "&{esv.gac.domain}",
        "groupsMaxResults": "200",
        "listProductAndSkuMaxResults": "100",
        "listProductMaxResults": "100",
        "membersMaxResults": "200",
        "proxyHost": null,
        "proxyPort": 8080,
        "refreshToken": "&{esv.gac.refresh}",
        "roleAssignmentMaxResults": 100,
        "roleMaxResults": 100,
        "usersMaxResults": "100",
        "validateCertificate": true,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.googleapps-connector",
        "bundleVersion": "[1.5.0.0,1.6.0.0)",
        "connectorHostRef": "",
        "connectorName": "org.forgerock.openicf.connectors.googleapps.GoogleAppsConnector",
        "displayName": "GoogleApps Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": {
        "$bool": "&{esv.gac.enable.connector}",
      },
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__GROUPS__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__GROUPS__",
              "nativeType": "string",
              "type": "array",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__PHOTO__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PHOTO__",
              "nativeType": "JAVA_TYPE_BYTE_ARRAY",
              "type": "string",
            },
            "__SECONDARY_EMAILS__": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__SECONDARY_EMAILS__",
              "nativeType": "object",
              "type": "array",
            },
            "__UID__": {
              "nativeName": "__UID__",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "addresses": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addresses",
              "nativeType": "object",
              "type": "array",
            },
            "agreedToTerms": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "agreedToTerms",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "aliases": {
              "flags": [
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "aliases",
              "nativeType": "string",
              "type": "array",
            },
            "archived": {
              "nativeName": "archived",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "changePasswordAtNextLogin": {
              "nativeName": "changePasswordAtNextLogin",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "creationTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "creationTime",
              "nativeType": "string",
              "type": "array",
            },
            "customSchemas": {
              "nativeName": "customSchemas",
              "nativeType": "object",
              "type": "object",
            },
            "customerId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "customerId",
              "nativeType": "string",
              "type": "string",
            },
            "deletionTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletionTime",
              "nativeType": "string",
              "type": "string",
            },
            "externalIds": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "externalIds",
              "nativeType": "object",
              "type": "array",
            },
            "familyName": {
              "nativeName": "familyName",
              "nativeType": "string",
              "type": "string",
            },
            "fullName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "fullName",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "hashFunction": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "hashFunction",
              "nativeType": "string",
              "type": "string",
            },
            "ims": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "ims",
              "nativeType": "object",
              "type": "array",
            },
            "includeInGlobalAddressList": {
              "nativeName": "includeInGlobalAddressList",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "ipWhitelisted": {
              "nativeName": "ipWhitelisted",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isAdmin": {
              "nativeName": "isAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isDelegatedAdmin": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isDelegatedAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isEnforcedIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnforcedIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isEnrolledIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnrolledIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isMailboxSetup": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isMailboxSetup",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "languages": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "languages",
              "nativeType": "object",
              "type": "array",
            },
            "lastLoginTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "lastLoginTime",
              "nativeType": "string",
              "type": "array",
            },
            "nonEditableAliases": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "nonEditableAliases",
              "nativeType": "string",
              "type": "array",
            },
            "orgUnitPath": {
              "nativeName": "orgUnitPath",
              "nativeType": "string",
              "type": "string",
            },
            "organizations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "organizations",
              "nativeType": "object",
              "type": "array",
            },
            "phones": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "phones",
              "nativeType": "object",
              "type": "array",
            },
            "primaryEmail": {
              "nativeName": "primaryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryEmail": {
              "nativeName": "recoveryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryPhone": {
              "nativeName": "recoveryPhone",
              "nativeType": "string",
              "type": "string",
            },
            "relations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "relations",
              "nativeType": "object",
              "type": "array",
            },
            "suspended": {
              "nativeName": "suspended",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "suspensionReason": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "suspensionReason",
              "nativeType": "string",
              "type": "string",
            },
            "thumbnailPhotoUrl": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "thumbnailPhotoUrl",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/provisioner.openicf.connectorinfoprovider.idm.json 1`] = `
{
  "idm": {
    "provisioner.openicf.connectorinfoprovider": {
      "_id": "provisioner.openicf.connectorinfoprovider",
      "connectorsLocation": "connectors",
      "remoteConnectorClients": [
        {
          "enabled": true,
          "name": "rcs1",
          "useSSL": true,
        },
      ],
      "remoteConnectorClientsGroups": [],
      "remoteConnectorServers": [],
      "remoteConnectorServersGroups": [],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/provisioner.openicf/Azure.idm.json 1`] = `
{
  "idm": {
    "provisioner.openicf/Azure": {
      "_id": "provisioner.openicf/Azure",
      "configurationProperties": {
        "clientId": "4b07adcc-329c-434c-aa83-49a14bef3c49",
        "clientSecret": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "W63amdvzlmynT40WOTl1wPWDc8FUlGWQZK158lmlFTrnhy9PbWZV5YE4v3VeMUDC",
              "iv": "KG/YFc8v26QHJzRI3uFhzw==",
              "keySize": 16,
              "mac": "mA4BzCNS7tuLhosQ+es1Tg==",
              "purpose": "idm.config.encryption",
              "salt": "vvPwKk0KqOqMjElQgICqEA==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "httpProxyHost": null,
        "httpProxyPassword": null,
        "httpProxyPort": null,
        "httpProxyUsername": null,
        "licenseCacheExpiryTime": 60,
        "performHardDelete": true,
        "readRateLimit": null,
        "tenant": "711ffa9c-5972-4713-ace3-688c9732614a",
        "writeRateLimit": null,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.msgraphapi-connector",
        "bundleVersion": "1.5.20.21",
        "connectorName": "org.forgerock.openicf.connectors.msgraphapi.MSGraphAPIConnector",
        "displayName": "MSGraphAPI Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__PASSWORD__": {
              "autocomplete": "new-password",
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__roles__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__roles__",
              "nativeType": "string",
              "type": "array",
            },
            "__servicePlanIds__": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__servicePlanIds__",
              "nativeType": "string",
              "type": "array",
            },
            "accountEnabled": {
              "nativeName": "accountEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "type": "string",
            },
            "companyName": {
              "nativeName": "companyName",
              "nativeType": "string",
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "jobTitle": {
              "nativeName": "jobTitle",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "mailNickname": {
              "nativeName": "mailNickname",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "object",
              "type": "object",
            },
            "memberOf": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "mobilePhone": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "mobilePhone",
              "nativeType": "string",
              "type": "string",
            },
            "onPremisesImmutableId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesImmutableId",
              "nativeType": "string",
              "type": "string",
            },
            "onPremisesSecurityIdentifier": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesSecurityIdentifier",
              "nativeType": "string",
              "type": "string",
            },
            "otherMails": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherMails",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "preferredLanguage": {
              "nativeName": "preferredLanguage",
              "nativeType": "string",
              "type": "string",
            },
            "proxyAddresses": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "proxyAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "surname": {
              "nativeName": "surname",
              "nativeType": "string",
              "type": "string",
            },
            "usageLocation": {
              "nativeName": "usageLocation",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "userType": {
              "nativeName": "userType",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "__GROUP__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "groupTypes": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "groupTypes",
              "nativeType": "string",
              "type": "string",
            },
            "id": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "id",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "mailEnabled": {
              "nativeName": "mailEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "onPremisesSecurityIdentifier": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesSecurityIdentifier",
              "nativeType": "string",
              "type": "string",
            },
            "proxyAddresses": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "proxyAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "securityEnabled": {
              "nativeName": "securityEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "type": {
              "nativeName": "type",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "directoryRole": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "directoryRole",
          "nativeType": "directoryRole",
          "properties": {
            "description": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "servicePlan": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "servicePlan",
          "nativeType": "servicePlan",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "appliesTo": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "appliesTo",
              "nativeType": "string",
              "type": "string",
            },
            "provisioningStatus": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "provisioningStatus",
              "nativeType": "string",
              "type": "string",
            },
            "servicePlanId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "servicePlanId",
              "nativeType": "string",
              "type": "string",
            },
            "servicePlanName": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "servicePlanName",
              "nativeType": "string",
              "type": "string",
            },
            "subscriberSkuId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "subscriberSkuId",
              "type": "string",
            },
          },
          "type": "object",
        },
        "servicePrincipal": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "servicePrincipal",
          "nativeType": "servicePrincipal",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__addAppRoleAssignedTo__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__addAppRoleAssignedTo__",
              "nativeType": "object",
              "type": "array",
            },
            "__addAppRoleAssignments__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__addAppRoleAssignments__",
              "nativeType": "object",
              "type": "array",
            },
            "__removeAppRoleAssignedTo__": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__removeAppRoleAssignedTo__",
              "nativeType": "string",
              "type": "array",
            },
            "__removeAppRoleAssignments__": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__removeAppRoleAssignments__",
              "nativeType": "string",
              "type": "array",
            },
            "accountEnabled": {
              "nativeName": "accountEnabled",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "addIns": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addIns",
              "nativeType": "object",
              "type": "array",
            },
            "alternativeNames": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "alternativeNames",
              "nativeType": "string",
              "type": "array",
            },
            "appDescription": {
              "nativeName": "appDescription",
              "nativeType": "string",
              "type": "string",
            },
            "appDisplayName": {
              "nativeName": "appDisplayName",
              "nativeType": "string",
              "type": "string",
            },
            "appId": {
              "nativeName": "appId",
              "nativeType": "string",
              "type": "string",
            },
            "appOwnerOrganizationId": {
              "nativeName": "appOwnerOrganizationId",
              "nativeType": "string",
              "type": "string",
            },
            "appRoleAssignmentRequired": {
              "nativeName": "appRoleAssignmentRequired",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "appRoles": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "appRoles",
              "nativeType": "object",
              "type": "array",
            },
            "applicationTemplateId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "applicationTemplateId",
              "nativeType": "string",
              "type": "string",
            },
            "deletedDateTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletedDateTime",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "disabledByMicrosoftStatus": {
              "nativeName": "disabledByMicrosoftStatus",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "homepage": {
              "nativeName": "homepage",
              "nativeType": "string",
              "type": "string",
            },
            "info": {
              "nativeName": "info",
              "nativeType": "object",
              "type": "object",
            },
            "keyCredentials": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "keyCredentials",
              "nativeType": "object",
              "type": "array",
            },
            "loginUrl": {
              "nativeName": "loginUrl",
              "nativeType": "string",
              "type": "string",
            },
            "logoutUrl": {
              "nativeName": "logoutUrl",
              "nativeType": "string",
              "type": "string",
            },
            "notes": {
              "nativeName": "notes",
              "nativeType": "string",
              "type": "string",
            },
            "notificationEmailAddresses": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "notificationEmailAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "oauth2PermissionScopes": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "oauth2PermissionScopes",
              "nativeType": "object",
              "type": "array",
            },
            "passwordCredentials": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "passwordCredentials",
              "nativeType": "object",
              "type": "array",
            },
            "preferredSingleSignOnMode": {
              "nativeName": "preferredSingleSignOnMode",
              "nativeType": "string",
              "type": "string",
            },
            "replyUrls": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "replyUrls",
              "nativeType": "string",
              "type": "array",
            },
            "resourceSpecificApplicationPermissions": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "resourceSpecificApplicationPermissions",
              "nativeType": "object",
              "type": "array",
            },
            "samlSingleSignOnSettings": {
              "nativeName": "samlSingleSignOnSettings",
              "nativeType": "object",
              "type": "object",
            },
            "servicePrincipalNames": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "servicePrincipalNames",
              "nativeType": "string",
              "type": "array",
            },
            "servicePrincipalType": {
              "nativeName": "servicePrincipalType",
              "nativeType": "string",
              "type": "string",
            },
            "signInAudience": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "signInAudience",
              "nativeType": "string",
              "type": "string",
            },
            "tags": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "tags",
              "nativeType": "string",
              "type": "array",
            },
            "tokenEncryptionKeyId": {
              "nativeName": "tokenEncryptionKeyId",
              "nativeType": "string",
              "type": "string",
            },
            "verifiedPublisher": {
              "nativeName": "verifiedPublisher",
              "nativeType": "object",
              "type": "object",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/provisioner.openicf/GoogleApps.idm.json 1`] = `
{
  "idm": {
    "provisioner.openicf/GoogleApps": {
      "_id": "provisioner.openicf/GoogleApps",
      "configurationProperties": {
        "availableLicenses": [
          "101005/1010050001",
          "101001/1010010001",
          "101031/1010310010",
          "101034/1010340002",
          "101038/1010380002",
          "101034/1010340001",
          "101038/1010380003",
          "101034/1010340004",
          "101034/1010340003",
          "101034/1010340006",
          "Google-Apps/Google-Apps-For-Business",
          "101034/1010340005",
          "Google-Vault/Google-Vault",
          "Google-Apps/1010020031",
          "Google-Apps/1010020030",
          "Google-Apps/1010060003",
          "Google-Apps/1010060005",
          "Google-Apps/Google-Apps-Unlimited",
          "Google-Apps/1010020029",
          "Google-Apps/Google-Apps-Lite",
          "101031/1010310003",
          "101033/1010330002",
          "101033/1010330004",
          "Google-Apps/Google-Apps-For-Education",
          "101031/1010310002",
          "101033/1010330003",
          "Google-Apps/1010020026",
          "101031/1010310007",
          "Google-Apps/1010020025",
          "101031/1010310008",
          "Google-Apps/1010020028",
          "Google-Apps/Google-Apps-For-Postini",
          "101031/1010310005",
          "Google-Apps/1010020027",
          "101031/1010310006",
          "101031/1010310009",
          "Google-Vault/Google-Vault-Former-Employee",
          "101038/1010370001",
          "Google-Apps/1010020020",
          "Google-Apps/1010060001",
        ],
        "clientId": "&{esv.gac.client.id}",
        "clientSecret": "&{esv.gac.secret}",
        "domain": "&{esv.gac.domain}",
        "groupsMaxResults": "200",
        "listProductAndSkuMaxResults": "100",
        "listProductMaxResults": "100",
        "membersMaxResults": "200",
        "proxyHost": null,
        "proxyPort": 8080,
        "refreshToken": "&{esv.gac.refresh}",
        "roleAssignmentMaxResults": 100,
        "roleMaxResults": 100,
        "usersMaxResults": "100",
        "validateCertificate": true,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.googleapps-connector",
        "bundleVersion": "[1.5.0.0,1.6.0.0)",
        "connectorHostRef": "",
        "connectorName": "org.forgerock.openicf.connectors.googleapps.GoogleAppsConnector",
        "displayName": "GoogleApps Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": {
        "$bool": "&{esv.gac.enable.connector}",
      },
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__GROUPS__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__GROUPS__",
              "nativeType": "string",
              "type": "array",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__PHOTO__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PHOTO__",
              "nativeType": "JAVA_TYPE_BYTE_ARRAY",
              "type": "string",
            },
            "__SECONDARY_EMAILS__": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__SECONDARY_EMAILS__",
              "nativeType": "object",
              "type": "array",
            },
            "__UID__": {
              "nativeName": "__UID__",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "addresses": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addresses",
              "nativeType": "object",
              "type": "array",
            },
            "agreedToTerms": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "agreedToTerms",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "aliases": {
              "flags": [
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "aliases",
              "nativeType": "string",
              "type": "array",
            },
            "archived": {
              "nativeName": "archived",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "changePasswordAtNextLogin": {
              "nativeName": "changePasswordAtNextLogin",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "creationTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "creationTime",
              "nativeType": "string",
              "type": "array",
            },
            "customSchemas": {
              "nativeName": "customSchemas",
              "nativeType": "object",
              "type": "object",
            },
            "customerId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "customerId",
              "nativeType": "string",
              "type": "string",
            },
            "deletionTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletionTime",
              "nativeType": "string",
              "type": "string",
            },
            "externalIds": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "externalIds",
              "nativeType": "object",
              "type": "array",
            },
            "familyName": {
              "nativeName": "familyName",
              "nativeType": "string",
              "type": "string",
            },
            "fullName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "fullName",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "hashFunction": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "hashFunction",
              "nativeType": "string",
              "type": "string",
            },
            "ims": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "ims",
              "nativeType": "object",
              "type": "array",
            },
            "includeInGlobalAddressList": {
              "nativeName": "includeInGlobalAddressList",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "ipWhitelisted": {
              "nativeName": "ipWhitelisted",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isAdmin": {
              "nativeName": "isAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isDelegatedAdmin": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isDelegatedAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isEnforcedIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnforcedIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isEnrolledIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnrolledIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isMailboxSetup": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isMailboxSetup",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "languages": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "languages",
              "nativeType": "object",
              "type": "array",
            },
            "lastLoginTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "lastLoginTime",
              "nativeType": "string",
              "type": "array",
            },
            "nonEditableAliases": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "nonEditableAliases",
              "nativeType": "string",
              "type": "array",
            },
            "orgUnitPath": {
              "nativeName": "orgUnitPath",
              "nativeType": "string",
              "type": "string",
            },
            "organizations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "organizations",
              "nativeType": "object",
              "type": "array",
            },
            "phones": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "phones",
              "nativeType": "object",
              "type": "array",
            },
            "primaryEmail": {
              "nativeName": "primaryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryEmail": {
              "nativeName": "recoveryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryPhone": {
              "nativeName": "recoveryPhone",
              "nativeType": "string",
              "type": "string",
            },
            "relations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "relations",
              "nativeType": "object",
              "type": "array",
            },
            "suspended": {
              "nativeName": "suspended",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "suspensionReason": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "suspensionReason",
              "nativeType": "string",
              "type": "string",
            },
            "thumbnailPhotoUrl": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "thumbnailPhotoUrl",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/repo.ds.idm.json 1`] = `
{
  "idm": {
    "repo.ds": {
      "_id": "repo.ds",
      "commands": {
        "delete-mapping-links": {
          "_queryFilter": "/linkType eq "\${mapping}"",
          "operation": "DELETE",
        },
        "delete-target-ids-for-recon": {
          "_queryFilter": "/reconId eq "\${reconId}"",
          "operation": "DELETE",
        },
      },
      "embedded": false,
      "ldapConnectionFactories": {
        "bind": {
          "availabilityCheckIntervalSeconds": 30,
          "availabilityCheckTimeoutMilliSeconds": 10000,
          "connectionPoolSize": 50,
          "connectionSecurity": "none",
          "heartBeatIntervalSeconds": 60,
          "heartBeatTimeoutMilliSeconds": 10000,
          "primaryLdapServers": [
            {
              "hostname": "userstore-0.userstore",
              "port": 1389,
            },
          ],
          "secondaryLdapServers": [
            {
              "hostname": "userstore-2.userstore",
              "port": 1389,
            },
          ],
        },
        "root": {
          "authentication": {
            "simple": {
              "bindDn": "uid=admin",
              "bindPassword": "&{userstore.password}",
            },
          },
          "inheritFrom": "bind",
        },
      },
      "maxConnectionAttempts": 5,
      "queries": {
        "explicit": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
        },
        "generic": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "find-relationship-edges": {
            "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
          },
          "find-relationships-for-resource": {
            "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "get-by-field-value": {
            "_queryFilter": "/\${field} eq "\${value}"",
          },
          "get-notifications-for-user": {
            "_queryFilter": "/receiverId eq "\${userId}"",
            "_sortKeys": "-createDate",
          },
          "get-recons": {
            "_fields": "reconId,mapping,activitydate",
            "_queryFilter": "/entryType eq "summary"",
            "_sortKeys": "-activitydate",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
          "query-cluster-events": {
            "_queryFilter": "/instanceId eq "\${instanceId}"",
          },
          "query-cluster-failed-instances": {
            "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
          },
          "query-cluster-instances": {
            "_queryFilter": "true",
          },
          "query-cluster-running-instances": {
            "_queryFilter": "/state eq 1",
          },
        },
      },
      "resourceMapping": {
        "defaultMapping": {
          "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
        },
        "explicitMapping": {
          "clusteredrecontargetids": {
            "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-recon-clusteredTargetIds",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-recon-id",
                "type": "simple",
              },
              "targetIds": {
                "ldapAttribute": "fr-idm-recon-targetIds",
                "type": "json",
              },
            },
          },
          "dsconfig/attributeValue": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-attribute-value-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "matchAttribute": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-match-attribute",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/characterSet": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-character-set-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowUnclassifiedCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                "type": "simple",
              },
              "characterSet": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-character-set",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minCharacterSets": {
                "ldapAttribute": "ds-cfg-min-character-sets",
                "type": "simple",
              },
            },
          },
          "dsconfig/dictionary": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-dictionary-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "dictionaryFile": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-dictionary-file",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/lengthBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-length-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxPasswordLength": {
                "ldapAttribute": "ds-cfg-max-password-length",
                "type": "simple",
              },
              "minPasswordLength": {
                "ldapAttribute": "ds-cfg-min-password-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/passwordPolicies": {
            "dnTemplate": "cn=Password Policies,cn=config",
            "objectClasses": [
              "ds-cfg-password-policy",
              "ds-cfg-authentication-policy",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowPreEncodedPasswords": {
                "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
                "type": "simple",
              },
              "defaultPasswordStorageScheme": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                "type": "simple",
              },
              "deprecatedPasswordStorageScheme": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
                "type": "simple",
              },
              "maxPasswordAge": {
                "ldapAttribute": "ds-cfg-max-password-age",
                "type": "simple",
              },
              "passwordAttribute": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-password-attribute",
                "type": "simple",
              },
              "passwordHistoryCount": {
                "ldapAttribute": "ds-cfg-password-history-count",
                "type": "simple",
              },
              "validator": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-password-validator",
                "type": "simple",
              },
            },
          },
          "dsconfig/repeatedCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-repeated-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxConsecutiveLength": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-max-consecutive-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/similarityBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-similarity-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minPasswordDifference": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-password-difference",
                "type": "simple",
              },
            },
          },
          "dsconfig/uniqueCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-unique-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minUniqueCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-unique-characters",
                "type": "simple",
              },
            },
          },
          "dsconfig/userDefinedVirtualAttribute": {
            "dnTemplate": "cn=Virtual Attributes,cn=config",
            "objectClasses": [
              "ds-cfg-user-defined-virtual-attribute",
              "ds-cfg-virtual-attribute",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "attributeType": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-attribute-type",
                "type": "simple",
              },
              "baseDn": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-base-dn",
                "type": "simple",
              },
              "conflictBehavior": {
                "ldapAttribute": "ds-cfg-conflict-behavior",
                "type": "simple",
              },
              "enabled": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "filter": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-filter",
                "type": "simple",
              },
              "groupDn": {
                "ldapAttribute": "ds-cfg-group-dn",
                "type": "simple",
              },
              "javaClass": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "scope": {
                "ldapAttribute": "ds-cfg-scope",
                "type": "simple",
              },
              "value": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-value",
                "type": "simple",
              },
            },
          },
          "identities/admin": {
            "dnTemplate": "o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/alpha": {
            "dnTemplate": "o=alpha,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/bravo": {
            "dnTemplate": "o=bravo,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "internal/role": {
            "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "fr-idm-internal-role",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "authzMembers": {
                "isMultiValued": true,
                "propertyName": "authzRoles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "condition": {
                "ldapAttribute": "fr-idm-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "name": {
                "ldapAttribute": "fr-idm-name",
                "type": "simple",
              },
              "privileges": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-privilege",
                "type": "json",
              },
              "temporalConstraints": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-temporal-constraints",
                "type": "json",
              },
            },
          },
          "internal/user": {
            "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-internal-user",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "password": {
                "ldapAttribute": "fr-idm-password",
                "type": "json",
              },
            },
          },
          "link": {
            "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-link",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "firstId": {
                "ldapAttribute": "fr-idm-link-firstId",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-link-qualifier",
                "type": "simple",
              },
              "linkType": {
                "ldapAttribute": "fr-idm-link-type",
                "type": "simple",
              },
              "secondId": {
                "ldapAttribute": "fr-idm-link-secondId",
                "type": "simple",
              },
            },
          },
          "locks": {
            "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-lock",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-lock-nodeid",
                "type": "simple",
              },
            },
          },
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple",
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple",
              },
            },
          },
          "recon/assoc": {
            "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
            "namingStrategy": {
              "dnAttribute": "fr-idm-reconassoc-reconid",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "fr-idm-reconassoc",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "fr-idm-reconassoc-reconid",
                "type": "simple",
              },
              "finishTime": {
                "ldapAttribute": "fr-idm-reconassoc-finishtime",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "subResources": {
              "entry": {
                "namingStrategy": {
                  "dnAttribute": "uid",
                  "type": "clientDnNaming",
                },
                "resource": "recon-assoc-entry",
                "type": "collection",
              },
            },
          },
          "recon/assoc/entry": {
            "objectClasses": [
              "uidObject",
              "fr-idm-reconassocentry",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "action": {
                "ldapAttribute": "fr-idm-reconassocentry-action",
                "type": "simple",
              },
              "ambiguousTargetObjectIds": {
                "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                "type": "simple",
              },
              "exception": {
                "ldapAttribute": "fr-idm-reconassocentry-exception",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "message": {
                "ldapAttribute": "fr-idm-reconassocentry-message",
                "type": "simple",
              },
              "messageDetail": {
                "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                "type": "simple",
              },
              "phase": {
                "ldapAttribute": "fr-idm-reconassocentry-phase",
                "type": "simple",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-reconassocentry-reconid",
                "type": "simple",
              },
              "situation": {
                "ldapAttribute": "fr-idm-reconassocentry-situation",
                "type": "simple",
              },
              "sourceObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "status": {
                "ldapAttribute": "fr-idm-reconassocentry-status",
                "type": "simple",
              },
              "targetObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "resourceName": "recon-assoc-entry",
            "subResourceRouting": [
              {
                "prefix": "entry",
                "template": "recon/assoc/{reconId}/entry",
              },
            ],
          },
          "sync/queue": {
            "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-syncqueue",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "context": {
                "ldapAttribute": "fr-idm-syncqueue-context",
                "type": "json",
              },
              "createDate": {
                "ldapAttribute": "fr-idm-syncqueue-createdate",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-syncqueue-mapping",
                "type": "simple",
              },
              "newObject": {
                "ldapAttribute": "fr-idm-syncqueue-newobject",
                "type": "json",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-syncqueue-nodeid",
                "type": "simple",
              },
              "objectRev": {
                "ldapAttribute": "fr-idm-syncqueue-objectRev",
                "type": "simple",
              },
              "oldObject": {
                "ldapAttribute": "fr-idm-syncqueue-oldobject",
                "type": "json",
              },
              "remainingRetries": {
                "ldapAttribute": "fr-idm-syncqueue-remainingretries",
                "type": "simple",
              },
              "resourceCollection": {
                "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                "type": "simple",
              },
              "resourceId": {
                "ldapAttribute": "fr-idm-syncqueue-resourceid",
                "type": "simple",
              },
              "state": {
                "ldapAttribute": "fr-idm-syncqueue-state",
                "type": "simple",
              },
              "syncAction": {
                "ldapAttribute": "fr-idm-syncqueue-syncaction",
                "type": "simple",
              },
            },
          },
        },
        "genericMapping": {
          "cluster/*": {
            "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-cluster-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
            "objectClasses": [
              "uidObject",
              "fr-idm-cluster-obj",
            ],
          },
          "config": {
            "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
          },
          "file": {
            "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
          },
          "internal/notification": {
            "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-notification-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-notification",
            ],
            "properties": {
              "target": {
                "propertyName": "_notifications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "internal/usermeta": {
            "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "jsonstorage": {
            "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
          },
          "managed/*": {
            "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
            },
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
            },
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference",
              },
            },
          },
          "reconprogressstate": {
            "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
          },
          "relationships": {
            "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-relationship-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
            "objectClasses": [
              "uidObject",
              "fr-idm-relationship",
            ],
          },
          "scheduler": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "scheduler/*": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "ui/*": {
            "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
          },
          "updates": {
            "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
          },
        },
      },
      "rest2LdapOptions": {
        "mvccAttribute": "etag",
        "readOnUpdatePolicy": "controls",
        "returnNullForMissingProperties": true,
        "useMvcc": true,
        "usePermissiveModify": true,
        "useSubtreeDelete": true,
      },
      "security": {
        "keyManager": "jvm",
        "trustManager": "jvm",
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/router.idm.json 1`] = `
{
  "idm": {
    "router": {
      "_id": "router",
      "filters": [],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/script.idm.json 1`] = `
{
  "idm": {
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": ".groovy",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{idm.install.dir}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{idm.install.dir}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{idm.install.dir}/bin/defaults/script",
        },
        "install": {
          "directory": "&{idm.install.dir}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/secrets.idm.json 1`] = `
{
  "idm": {
    "secrets": {
      "_id": "secrets",
      "populateDefaults": true,
      "stores": [
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
            "mappings": [
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                  "openidm-localhost",
                ],
                "secretId": "idm.default",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.config.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.password.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.https.keystore.cert.alias|openidm-localhost}",
                ],
                "secretId": "idm.jwt.session.module.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}",
                ],
                "secretId": "idm.jwt.session.module.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "selfservice",
                ],
                "secretId": "idm.selfservice.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}",
                ],
                "secretId": "idm.selfservice.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.assignment.attribute.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
            ],
            "providerName": "&{openidm.keystore.provider|SunJCE}",
            "storePassword": "&{openidm.keystore.password|changeit}",
            "storetype": "&{openidm.keystore.type|JCEKS}",
          },
          "name": "mainKeyStore",
        },
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
            "mappings": [],
            "providerName": "&{openidm.truststore.provider|SUN}",
            "storePassword": "&{openidm.truststore.password|changeit}",
            "storetype": "&{openidm.truststore.type|JKS}",
          },
          "name": "mainTrustStore",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.kba.idm.json 1`] = `
{
  "idm": {
    "selfservice.kba": {
      "_id": "selfservice.kba",
      "kbaPropertyName": "kbaInfo",
      "minimumAnswersToDefine": 1,
      "minimumAnswersToVerify": 1,
      "questions": {
        "1": {
          "en": "What's your favorite color?",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.terms.idm.json 1`] = `
{
  "idm": {
    "selfservice.terms": {
      "_id": "selfservice.terms",
      "active": "0.0",
      "uiConfig": {
        "buttonText": "Accept",
        "displayName": "We've updated our terms",
        "purpose": "You must accept the updated terms in order to proceed.",
      },
      "versions": [
        {
          "createDate": "2019-10-28T04:20:11.320Z",
          "termsTranslations": {
            "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
          "version": "0.0",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/servletfilter/cors.idm.json 1`] = `
{
  "idm": {
    "servletfilter/cors": {
      "_id": "servletfilter/cors",
      "initParams": {
        "allowCredentials": false,
        "allowedHeaders": "authorization,accept,content-type,origin,x-requested-with,cache-control,accept-api-version,if-match,if-none-match",
        "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
        "allowedOrigins": "*",
        "chainPreflight": false,
        "exposedHeaders": "WWW-Authenticate",
      },
      "urlPatterns": [
        "/*",
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/servletfilter/payload.idm.json 1`] = `
{
  "idm": {
    "servletfilter/payload": {
      "_id": "servletfilter/payload",
      "initParams": {
        "maxRequestSizeInMegabytes": 5,
      },
      "urlPatterns": [
        "&{openidm.servlet.alias}/*",
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/servletfilter/upload.idm.json 1`] = `
{
  "idm": {
    "servletfilter/upload": {
      "_id": "servletfilter/upload",
      "initParams": {
        "maxRequestSizeInMegabytes": 50,
      },
      "urlPatterns": [
        "&{openidm.servlet.upload.alias}/*",
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/sync.idm.json 1`] = `
{
  "idm": {
    "sync": {
      "_id": "sync",
      "mappings": [
        {
          "_id": "sync/managedBravo_user_managedBravo_user",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedAlpha_application_managedBravo_application",
          "consentRequired": true,
          "displayName": "Test Application Mapping",
          "icon": null,
          "name": "managedAlpha_application_managedBravo_application",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "source": "authoritative",
              "target": "_id",
            },
          ],
          "source": "managed/alpha_application",
          "sourceQuery": {
            "_queryFilter": "(eq "" or eq "")",
          },
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
          ],
          "target": "managed/bravo_application",
          "targetQuery": {
            "_queryFilter": "!(eq "")",
          },
        },
        {
          "_id": "sync/managedAlpha_user_managedBravo_user",
          "consentRequired": true,
          "displayName": "Test Mapping for Frodo",
          "icon": null,
          "name": "managedAlpha_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "console.log("Hello World!");",
                "type": "text/javascript",
              },
              "default": [
                "Default value string",
              ],
              "source": "accountStatus",
              "target": "applications",
              "transform": {
                "globals": {},
                "source": "console.log("hello");",
                "type": "text/javascript",
              },
            },
          ],
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
          ],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedBravo_user_managedAlpha_user",
          "consentRequired": false,
          "displayName": "Frodo test mapping",
          "icon": null,
          "name": "managedBravo_user_managedAlpha_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
          ],
          "target": "managed/alpha_user",
        },
        {
          "_id": "sync/AlphaUser2GoogleApps",
          "consentRequired": false,
          "correlationQuery": [
            {
              "expressionTree": {
                "all": [
                  "__NAME__",
                ],
              },
              "file": "ui/correlateTreeToQueryFilter.js",
              "linkQualifier": "default",
              "mapping": "AlphaUser2GoogleApps",
              "type": "text/javascript",
            },
          ],
          "displayName": "AlphaUser2GoogleApps",
          "enableSync": {
            "$bool": "&{esv.gac.enable.mapping}",
          },
          "icon": null,
          "name": "AlphaUser2GoogleApps",
          "onCreate": {
            "globals": {},
            "source": "target.orgUnitPath = "/NewAccounts";",
            "type": "text/javascript",
          },
          "onUpdate": {
            "globals": {},
            "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
            "type": "text/javascript",
          },
          "policies": [
            {
              "action": "EXCEPTION",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "UNLINK",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": {
                "globals": {},
                "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
                "type": "text/javascript",
              },
              "situation": "MISSING",
            },
            {
              "action": "EXCEPTION",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "IGNORE",
              "situation": "UNQUALIFIED",
            },
            {
              "action": "IGNORE",
              "situation": "UNASSIGNED",
            },
            {
              "action": "UNLINK",
              "situation": "LINK_ONLY",
            },
            {
              "action": "IGNORE",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "ALL_GONE",
            },
            {
              "action": "UPDATE",
              "situation": "CONFIRMED",
            },
            {
              "action": "LINK",
              "situation": "FOUND",
            },
            {
              "action": "CREATE",
              "situation": "ABSENT",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "object.custom_password_encrypted != null",
                "type": "text/javascript",
              },
              "source": "custom_password_encrypted",
              "target": "__PASSWORD__",
              "transform": {
                "globals": {},
                "source": "openidm.decrypt(source);",
                "type": "text/javascript",
              },
            },
            {
              "source": "cn",
              "target": "__NAME__",
              "transform": {
                "globals": {},
                "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
                "type": "text/javascript",
              },
            },
            {
              "source": "givenName",
              "target": "givenName",
            },
            {
              "source": "",
              "target": "familyName",
              "transform": {
                "globals": {},
                "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
                "type": "text/javascript",
              },
            },
          ],
          "queuedSync": {
            "enabled": true,
            "maxQueueSize": 20000,
            "maxRetries": 5,
            "pageSize": 100,
            "pollingInterval": 1000,
            "postRetryAction": "logged-ignore",
            "retryDelay": 1000,
          },
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
            "managedBravo_user_managedAlpha_user",
          ],
          "target": "system/GoogleApps/__ACCOUNT__",
          "validSource": {
            "globals": {},
            "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
            "type": "text/javascript",
          },
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/admin.idm.json 1`] = `
{
  "idm": {
    "ui.context/admin": {
      "_id": "ui.context/admin",
      "defaultDir": "&{idm.install.dir}/ui/admin/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/admin/extension",
      "responseHeaders": {
        "X-Frame-Options": "SAMEORIGIN",
      },
      "urlContextRoot": "/admin",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/api.idm.json 1`] = `
{
  "idm": {
    "ui.context/api": {
      "_id": "ui.context/api",
      "authEnabled": true,
      "cacheEnabled": false,
      "defaultDir": "&{idm.install.dir}/ui/api/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/api/extension",
      "urlContextRoot": "/api",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/enduser.idm.json 1`] = `
{
  "idm": {
    "ui.context/enduser": {
      "_id": "ui.context/enduser",
      "defaultDir": "&{idm.install.dir}/ui/enduser",
      "enabled": true,
      "responseHeaders": {
        "X-Frame-Options": "DENY",
      },
      "urlContextRoot": "/",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/oauth.idm.json 1`] = `
{
  "idm": {
    "ui.context/oauth": {
      "_id": "ui.context/oauth",
      "cacheEnabled": true,
      "defaultDir": "&{idm.install.dir}/ui/oauth/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
      "urlContextRoot": "/oauthReturn",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/configuration.idm.json 1`] = `
{
  "idm": {
    "ui/configuration": {
      "_id": "ui/configuration",
      "configuration": {
        "defaultNotificationType": "info",
        "forgotUsername": false,
        "lang": "en",
        "notificationTypes": {
          "error": {
            "iconPath": "images/notifications/error.png",
            "name": "common.notification.types.error",
          },
          "info": {
            "iconPath": "images/notifications/info.png",
            "name": "common.notification.types.info",
          },
          "warning": {
            "iconPath": "images/notifications/warning.png",
            "name": "common.notification.types.warning",
          },
        },
        "passwordReset": true,
        "passwordResetLink": "",
        "platformSettings": {
          "adminOauthClient": "idmAdminClient",
          "adminOauthClientScopes": "fr:idm:*",
          "amUrl": "/am",
          "loginUrl": "",
        },
        "roles": {
          "internal/role/openidm-admin": "ui-admin",
          "internal/role/openidm-authorized": "ui-user",
        },
        "selfRegistration": true,
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/dashboard.idm.json 1`] = `
{
  "idm": {
    "ui/dashboard": {
      "_id": "ui/dashboard",
      "adminDashboards": [
        {
          "isDefault": true,
          "name": "Quick Start",
          "widgets": [
            {
              "cards": [
                {
                  "href": "#resource/managed/alpha_user/list/",
                  "icon": "fa-user",
                  "name": "Manage Users",
                },
                {
                  "href": "#resource/managed/alpha_role/list/",
                  "icon": "fa-check-square-o",
                  "name": "Manage Roles",
                },
                {
                  "href": "#connectors/add/",
                  "icon": "fa-database",
                  "name": "Add Connector",
                },
                {
                  "href": "#mapping/add/",
                  "icon": "fa-map-marker",
                  "name": "Create Mapping",
                },
                {
                  "href": "#managed/add/",
                  "icon": "fa-tablet",
                  "name": "Add Device",
                },
                {
                  "href": "#settings/",
                  "icon": "fa-user",
                  "name": "Configure System Preferences",
                },
              ],
              "size": "large",
              "type": "quickStart",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "System Monitoring",
          "widgets": [
            {
              "legendRange": {
                "month": [
                  500,
                  2500,
                  5000,
                ],
                "week": [
                  10,
                  30,
                  90,
                  270,
                  810,
                ],
                "year": [
                  10000,
                  40000,
                  100000,
                  250000,
                ],
              },
              "maxRange": "#24423c",
              "minRange": "#b0d4cd",
              "size": "large",
              "type": "audit",
            },
            {
              "size": "large",
              "type": "clusterStatus",
            },
            {
              "size": "large",
              "type": "systemHealthFull",
            },
            {
              "barchart": "false",
              "size": "large",
              "type": "lastRecon",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Resource Report",
          "widgets": [
            {
              "selected": "activeUsers",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "rolesEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "activeConnectors",
              "size": "x-small",
              "type": "counter",
            },
            {
              "size": "large",
              "type": "resourceList",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Business Report",
          "widgets": [
            {
              "graphType": "fa-pie-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "signIns",
              "widgetTitle": "Sign-Ins",
            },
            {
              "graphType": "fa-bar-chart",
              "size": "x-small",
              "type": "passwordResets",
              "widgetTitle": "Password Resets",
            },
            {
              "graphType": "fa-line-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "newRegistrations",
              "widgetTitle": "New Registrations",
            },
            {
              "size": "x-small",
              "timezone": {
                "hours": "07",
                "minutes": "00",
                "negative": true,
              },
              "type": "socialLogin",
            },
            {
              "selected": "socialEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "manualRegistrations",
              "size": "x-small",
              "type": "counter",
            },
          ],
        },
      ],
      "dashboard": {
        "widgets": [
          {
            "size": "large",
            "type": "Welcome",
          },
        ],
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/profile.idm.json 1`] = `
{
  "idm": {
    "ui/profile": {
      "_id": "ui/profile",
      "tabs": [
        {
          "name": "personalInfoTab",
          "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab",
        },
        {
          "name": "signInAndSecurity",
          "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab",
        },
        {
          "name": "preference",
          "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab",
        },
        {
          "name": "trustedDevice",
          "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab",
        },
        {
          "name": "oauthApplication",
          "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab",
        },
        {
          "name": "privacyAndConsent",
          "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab",
        },
        {
          "name": "sharing",
          "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab",
        },
        {
          "name": "auditHistory",
          "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab",
        },
        {
          "name": "accountControls",
          "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab",
        },
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/themeconfig.idm.json 1`] = `
{
  "idm": {
    "ui/themeconfig": {
      "_id": "ui/themeconfig",
      "icon": "favicon.ico",
      "path": "",
      "settings": {
        "footer": {
          "mailto": "info@forgerock.com",
        },
        "loginLogo": {
          "alt": "ForgeRock",
          "height": "104px",
          "src": "images/login-logo-dark.png",
          "title": "ForgeRock",
          "width": "210px",
        },
        "logo": {
          "alt": "ForgeRock",
          "src": "images/logo-horizontal-white.png",
          "title": "ForgeRock",
        },
      },
      "stylesheets": [
        "css/bootstrap-3.4.1-custom.css",
        "css/structure.css",
        "css/theme.css",
      ],
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/themerealm.idm.json 1`] = `
{
  "idm": {
    "ui/themerealm": {
      "_id": "ui/themerealm",
      "realm": {
        "/alpha": [
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
        "alpha": [
          {
            "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "e47838b5-48c9-4dea-8a84-43f4b4ea8e04",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputSelectHoverColor": "#f6f8fa",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountFooterScriptTag": "",
            "accountFooterScriptTagEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "boldLinks": false,
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyA11yAddFallbackErrorHeading": true,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardBorderRadius": 4,
            "journeyCardHeaderBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFloatingLabels": true,
            "journeyFocusElement": "header",
            "journeyFocusFirstFocusableItemEnabled": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyFooterScriptTag": "",
            "journeyFooterScriptTagEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyHeaderSkipLinkEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputSelectHoverColor": "#f6f8fa",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyJustifiedContentMobileViewEnabled": false,
            "journeyLayout": "justified-right",
            "journeyRememberMeEnabled": false,
            "journeyRememberMeLabel": "",
            "journeySignInButtonPosition": "flex-column",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Copy of Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "successColor": "#2ed47a",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "63e19668-909f-479e-83d7-be7a01cd8187",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": true,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "boldLinks": false,
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [
              "FrodoTest",
              "AA-FrodoTest",
            ],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": false,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "NoAccess",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
          {
            "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
        "bravo": [
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/uilocale/fr.idm.json 1`] = `
{
  "idm": {
    "uilocale/fr": {
      "_id": "uilocale/fr",
      "admin": {
        "overrides": {
          "AppLogoURI": "URI du logo de l’application",
          "EmailAddress": "Adresse e-mail",
          "Name": "Nom",
          "Owners": "Les propriétaires",
        },
        "sideMenu": {
          "securityQuestions": "Questions de sécurité",
        },
      },
      "enduser": {
        "overrides": {
          "FirstName": "Prénom",
          "LastName": "Nom de famille",
        },
        "pages": {
          "dashboard": {
            "widgets": {
              "welcome": {
                "greeting": "Bonjour",
              },
            },
          },
        },
      },
      "login": {
        "login": {
          "next": "Suivant",
        },
        "overrides": {
          "Password": "Mot de passe",
          "UserName": "Nom d'utilisateur",
        },
      },
      "shared": {
        "sideMenu": {
          "dashboard": "Tableau de bord",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/undefined.idm.json 1`] = `
{
  "idm": {
    "undefined": {
      "_id": "undefined",
      "mapping": {
        "mapping/managedBravo_user_managedBravo_user0": {
          "_id": "mapping/managedBravo_user_managedBravo_user0",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user0",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user0",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "target": "managed/bravo_user",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -Ni sync": should export the idm config entity with idm id "sync" separately 1`] = `0`;

exports[`frodo idm export "frodo idm export -Ni sync": should export the idm config entity with idm id "sync" separately 2`] = `""`;

exports[`frodo idm export "frodo idm export -Ni sync": should export the idm config entity with idm id "sync" separately: sync.idm.json 1`] = `
{
  "idm": {
    "sync": {
      "_id": "sync",
      "mappings": [
        {
          "_id": "sync/managedBravo_user_managedBravo_user",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedAlpha_application_managedBravo_application",
          "consentRequired": true,
          "displayName": "Test Application Mapping",
          "icon": null,
          "name": "managedAlpha_application_managedBravo_application",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "source": "authoritative",
              "target": "_id",
            },
          ],
          "source": "managed/alpha_application",
          "sourceQuery": {
            "_queryFilter": "(eq "" or eq "")",
          },
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
          ],
          "target": "managed/bravo_application",
          "targetQuery": {
            "_queryFilter": "!(eq "")",
          },
        },
        {
          "_id": "sync/managedAlpha_user_managedBravo_user",
          "consentRequired": true,
          "displayName": "Test Mapping for Frodo",
          "icon": null,
          "name": "managedAlpha_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "console.log("Hello World!");",
                "type": "text/javascript",
              },
              "default": [
                "Default value string",
              ],
              "source": "accountStatus",
              "target": "applications",
              "transform": {
                "globals": {},
                "source": "console.log("hello");",
                "type": "text/javascript",
              },
            },
          ],
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
          ],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedBravo_user_managedAlpha_user",
          "consentRequired": false,
          "displayName": "Frodo test mapping",
          "icon": null,
          "name": "managedBravo_user_managedAlpha_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
          ],
          "target": "managed/alpha_user",
        },
        {
          "_id": "sync/AlphaUser2GoogleApps",
          "consentRequired": false,
          "correlationQuery": [
            {
              "expressionTree": {
                "all": [
                  "__NAME__",
                ],
              },
              "file": "ui/correlateTreeToQueryFilter.js",
              "linkQualifier": "default",
              "mapping": "AlphaUser2GoogleApps",
              "type": "text/javascript",
            },
          ],
          "displayName": "AlphaUser2GoogleApps",
          "enableSync": {
            "$bool": "&{esv.gac.enable.mapping}",
          },
          "icon": null,
          "name": "AlphaUser2GoogleApps",
          "onCreate": {
            "globals": {},
            "source": "target.orgUnitPath = "/NewAccounts";",
            "type": "text/javascript",
          },
          "onUpdate": {
            "globals": {},
            "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
            "type": "text/javascript",
          },
          "policies": [
            {
              "action": "EXCEPTION",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "UNLINK",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": {
                "globals": {},
                "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
                "type": "text/javascript",
              },
              "situation": "MISSING",
            },
            {
              "action": "EXCEPTION",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "IGNORE",
              "situation": "UNQUALIFIED",
            },
            {
              "action": "IGNORE",
              "situation": "UNASSIGNED",
            },
            {
              "action": "UNLINK",
              "situation": "LINK_ONLY",
            },
            {
              "action": "IGNORE",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "ALL_GONE",
            },
            {
              "action": "UPDATE",
              "situation": "CONFIRMED",
            },
            {
              "action": "LINK",
              "situation": "FOUND",
            },
            {
              "action": "CREATE",
              "situation": "ABSENT",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "object.custom_password_encrypted != null",
                "type": "text/javascript",
              },
              "source": "custom_password_encrypted",
              "target": "__PASSWORD__",
              "transform": {
                "globals": {},
                "source": "openidm.decrypt(source);",
                "type": "text/javascript",
              },
            },
            {
              "source": "cn",
              "target": "__NAME__",
              "transform": {
                "globals": {},
                "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
                "type": "text/javascript",
              },
            },
            {
              "source": "givenName",
              "target": "givenName",
            },
            {
              "source": "",
              "target": "familyName",
              "transform": {
                "globals": {},
                "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
                "type": "text/javascript",
              },
            },
          ],
          "queuedSync": {
            "enabled": true,
            "maxQueueSize": 20000,
            "maxRetries": 5,
            "pageSize": 100,
            "pollingInterval": 1000,
            "postRetryAction": "logged-ignore",
            "retryDelay": 1000,
          },
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
            "managedBravo_user_managedAlpha_user",
          ],
          "target": "system/GoogleApps/__ACCOUNT__",
          "validSource": {
            "globals": {},
            "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
            "type": "text/javascript",
          },
        },
      ],
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -a": should export all idm config entities to a single file 1`] = `1`;

exports[`frodo idm export "frodo idm export -a": should export all idm config entities to a single file 2`] = `""`;

exports[`frodo idm export "frodo idm export -a": should export all idm config entities to a single file: all.idm.json 1`] = `
{
  "idm": {
    "access": {
      "_id": "access",
      "configs": [
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/*",
          "roles": "*",
        },
        {
          "actions": "login,logout",
          "methods": "read,action",
          "pattern": "authentication",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fidc/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "*",
          "pattern": "config/fidc/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themeconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themerealm",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/uilocale/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fieldPolicy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/uiconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/dashboard",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "query",
          "pattern": "info/features",
          "roles": "*",
        },
        {
          "actions": "listPrivileges",
          "methods": "action",
          "pattern": "privilege",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "privilege/*",
          "roles": "*",
        },
        {
          "actions": "validate",
          "methods": "action",
          "pattern": "util/validateQueryFilter",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "checkIfAnyFeatureEnabled('kba')",
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "excludePatterns": "repo,repo/*",
          "methods": "*",
          "pattern": "*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "",
          "methods": "create,read,update,delete,patch,query",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "script",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "command",
          "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
          "methods": "action",
          "pattern": "repo/link",
          "roles": "internal/role/openidm-admin",
        },
        {
          "methods": "create,read,query,patch",
          "pattern": "managed/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read,query",
          "pattern": "internal/role/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "create,read,action,update",
          "pattern": "profile/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/terms",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "identityProviders",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "sendTemplate",
          "methods": "action",
          "pattern": "external/email",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "bind,unbind",
          "customAuthz": "ownDataOnly()",
          "methods": "read,action,delete",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
          "methods": "update,patch,action",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
          "methods": "patch,action",
          "pattern": "selfservice/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
          "methods": "patch,action",
          "pattern": "managed/user",
          "roles": "internal/role/openidm-cert",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_meta', false)",
          "methods": "read",
          "pattern": "internal/usermeta/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipProperty('_notifications', true)",
          "methods": "read,delete",
          "pattern": "internal/notification/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "deleteNotificationsForTarget",
          "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
          "methods": "action",
          "pattern": "notification",
          "roles": "internal/role/openidm-authorized",
        },
      ],
    },
    "alphaOrgPrivileges": {
      "_id": "alphaOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
    "audit": {
      "_id": "audit",
      "auditServiceConfig": {
        "availableAuditEventHandlers": [
          "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
          "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
          "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
          "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
          "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
          "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
          "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler",
        ],
        "caseInsensitiveFields": [
          "/access/http/request/headers",
          "/access/http/response/headers",
        ],
        "filterPolicies": {
          "value": {
            "excludeIf": [
              "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
              "/access/http/request/cookies/session-jwt",
              "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
              "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
              "/access/http/request/headers/accept-encoding",
              "/access/http/request/headers/accept-language",
              "/access/http/request/headers/Authorization",
              "/access/http/request/headers/cache-control",
              "/access/http/request/headers/connection",
              "/access/http/request/headers/content-length",
              "/access/http/request/headers/content-type",
              "/access/http/request/headers/proxy-authorization",
              "/access/http/request/headers/X-OpenAM-Password",
              "/access/http/request/headers/X-OpenIDM-Password",
              "/access/http/request/queryParameters/access_token",
              "/access/http/request/queryParameters/IDToken1",
              "/access/http/request/queryParameters/id_token_hint",
              "/access/http/request/queryParameters/Login.Token1",
              "/access/http/request/queryParameters/redirect_uri",
              "/access/http/request/queryParameters/requester",
              "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
              "/access/http/request/queryParameters/tokenId",
              "/access/http/response/headers/Authorization",
              "/access/http/response/headers/Set-Cookie",
              "/access/http/response/headers/X-OpenIDM-Password",
            ],
            "includeIf": [],
          },
        },
        "handlerForQueries": "json",
      },
      "eventHandlers": [
        {
          "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "config": {
            "name": "json",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
        {
          "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "config": {
            "enabled": false,
            "name": "repo",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
      ],
      "eventTopics": {
        "activity": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
          "passwordFields": [
            "password",
          ],
          "watchedFields": [],
        },
        "config": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
        },
      },
      "exceptionFormatter": {
        "file": "bin/defaults/script/audit/stacktraceFormatter.js",
        "type": "text/javascript",
      },
    },
    "authentication": {
      "_id": "authentication",
      "rsFilter": {
        "augmentSecurityContext": {
          "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
          "type": "text/javascript",
        },
        "cache": {
          "maxTimeout": "300 seconds",
        },
        "scopes": [
          "fr:idm:*",
        ],
        "staticUserMapping": [
          {
            "localUser": "internal/user/idm-provisioning",
            "roles": [
              "internal/role/openidm-admin",
            ],
            "subject": "autoid-resource-server",
          },
        ],
        "subjectMapping": [
          {
            "additionalUserFields": [
              "adminOfOrg",
              "ownerOfOrg",
            ],
            "defaultRoles": [
              "internal/role/openidm-authorized",
            ],
            "propertyMapping": {
              "sub": "_id",
            },
            "queryOnResource": "managed/{{substring realm 1}}_user",
            "userRoles": "authzRoles/*",
          },
        ],
      },
    },
    "bravoOrgPrivileges": {
      "_id": "bravoOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
    "emailTemplate/baselineDemoEmailVerification": {
      "_id": "emailTemplate/baselineDemoEmailVerification",
      "defaultLocale": "en",
      "displayName": "Baseline Demo Email Verification",
      "enabled": true,
      "from": "security@example.com",
      "html": {
        "en": "<div class="content"><h1 id="emailverification">Email Verification</h1><p><br></p><p>Hello,</p><p>Great to have you on board.</p><p><br></p><hr><h5 id="verifyyouraccount">Verify Your Account</h5><p>Finish the steps of verification for the account by clicking the button below. <br></p><p><br></p><p><row><a href="{{object.resumeURI}}" title="" class="button">Click Here to Verify Your Account</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #f6f6f6; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 600px;"><h1 id="emailverification" style="font-size: 40px; text-align: center;">Email Verification</h1><p><br></p><p>Hello,</p><p>Great to have you on board.</p><p><br></p><hr><h5 id="verifyyouraccount" style="font-size: 24px;">Verify Your Account</h5><p>Finish the steps of verfication for the account by clicking the button below. <br></p><p><br></p><p><row><a href="{{object.resumeURI}}" title class="button" style="background-color: #109cf1; border: none; color: white; padding: 15px 32px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px;">Click Here to Verify Your Account</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com" style="text-decoration: none; color: #109cf1;">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com" style="text-decoration: none; color: #109cf1;">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=" style="text-decoration: none; color: #109cf1;">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #f6f6f6;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 h1 {
 font-size: 40px;
 text-align: center;
}
 h2 {
 font-size: 36px;
}
 h3 {
 font-size: 32px;
}
 h4 {
 font-size: 28px;
}
 h5 {
 font-size: 24px;
}
 h6 {
 font-size: 20px;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 600px 
}
 .button {
 background-color: #109cf1;
 border: none;
 color: white;
 padding: 15px 32px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
}
 ",
      "subject": {
        "en": "Please verify your email address",
      },
      "templateId": "baselineDemoEmailVerification",
    },
    "emailTemplate/baselineDemoMagicLink": {
      "_id": "emailTemplate/baselineDemoMagicLink",
      "defaultLocale": "en",
      "displayName": "Baseline Demo Magic Link",
      "enabled": true,
      "from": "security@example.com",
      "html": {
        "en": "<div class="content"><h1 id="welcomeback">Welcome back</h1><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to sign you into your account.</p><p><br></p><hr><p><row><a href="{{object.resumeURI}}" title="" class="button">Finish Signing In</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body><div class="content"><h1 id="welcomeback">Welcome back</h1><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to sign you into your account.</p><p><br></p><hr><p><row><a href="{{object.resumeURI}}" title class="button">Finish Signing In</a></row></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #f6f6f6;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 h1 {
 font-size: 40px;
 text-align: center;
}
 h2 {
 font-size: 36px;
}
 h3 {
 font-size: 32px;
}
 h4 {
 font-size: 28px;
}
 h5 {
 font-size: 24px;
}
 h6 {
 font-size: 20px;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 600px 
}
 .button {
 background-color: #109cf1;
 border: none;
 color: white;
 padding: 15px 32px;
 text-align: center;
 text-decoration: none;
 display: inline-block;
 font-size: 16px;
}
 ",
      "subject": {
        "en": "Your sign-in link",
      },
      "templateId": "baselineDemoMagicLink",
    },
    "emailTemplate/forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href="{{object.resumeURI}}">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}">Cliquez ici pour vous connecter</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Cliquez ici pour vous connecter</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur",
      },
    },
    "emailTemplate/frEmailUpdated": {
      "_id": "emailTemplate/frEmailUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account email has changed</h1></div><p>Your ForgeRock Identity Cloud email has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your email has been updated",
      },
    },
    "emailTemplate/frForgotUsername": {
      "_id": "emailTemplate/frForgotUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="height:50px;margin-bottom:16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Forgot your username?</h1></div><p>Your username is <b>{{ object.userName }}</b>.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Sign In to Your Account</a></p><p>If you didn't request this, please ignore this email.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Forgot Username",
      },
    },
    "emailTemplate/frOnboarding": {
      "_id": "emailTemplate/frOnboarding",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account is ready</h1></div><p>Your ForgeRock Identity Cloud account is ready. Click the button below to complete registration and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Complete Registration</a></p><p>If you did not request this account, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Complete your ForgeRock Identity Cloud registration",
      },
    },
    "emailTemplate/frPasswordUpdated": {
      "_id": "emailTemplate/frPasswordUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account password has changed</h1></div><p>Your ForgeRock Identity Cloud password has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your password has been updated",
      },
    },
    "emailTemplate/frProfileUpdated": {
      "_id": "emailTemplate/frProfileUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account profile has changed</h1></div><p>Your ForgeRock Identity Cloud profile has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your profile has been updated",
      },
    },
    "emailTemplate/frResetPassword": {
      "_id": "emailTemplate/frResetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Reset your password</h1></div><p>It seems you have forgotten the password for your ForgeRock Identity Cloud account. Click the button below to reset your password and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Reset Password</a></p><p>If you did not request to reset your password, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
      },
    },
    "emailTemplate/frUsernameUpdated": {
      "_id": "emailTemplate/frUsernameUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account username has changed</h1></div><p>Your ForgeRock Identity Cloud username has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your username has been updated",
      },
    },
    "emailTemplate/idv": {
      "_id": "emailTemplate/idv",
      "defaultLocale": "en",
      "description": "Identity Verification Invitation",
      "displayName": "idv",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<div class="content"><h3 id="clickthelinkbelowtoverifyyouridentity">Click the link below to verify your identity:</h3><p><a href="{{object.resumeURI}}">Verify my identity now</a></p></div>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="clickthelinkbelowtoverifyyouridentity">Click the link below to verify your identity:</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Verify my identity now</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></body></html>",
      },
      "mimeType": "text/html",
      "name": "registration",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "You have been invited to verify your identity",
        "fr": "Créer un nouveau compte",
      },
      "templateId": "idv",
    },
    "emailTemplate/joiner": {
      "_id": "emailTemplate/joiner",
      "advancedEditor": true,
      "defaultLocale": "en",
      "description": "This email will be sent onCreate of user to the external eMail address provided during creation. An OTP will also be sent to Telephone Number provided during creation to validate the user.  The user will then be able to set their password and ForgeRock Push Authenticator",
      "displayName": "Joiner",
      "enabled": true,
      "from": ""Encore HR" <no-reply@encore.com>",
      "html": {
        "en": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="background-color:#324054;color:#455469;padding:60px;text-align:center">
    <div class="content" style="background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:500px">
      <p>
        <img src="https://encore.forgerock.com/media/logos/encore-icon-dark-logo.png" width="125" title="Welcome to Encore" />
      </p>
      <h1 id="welcometoencore">Welcome to Encore {{object.givenName}} {{object.sn}}</h1>
      <p>Please click on the link below to validate your phone number with a One Time Code that will be sent via SMS or called to you depending on your phone type. </p>
      <p>You will see your UserName and have the ability to set your password that will be used to login to Encore resources.  </p>
      <p>As we believe in enhanced security, you will also be setting up a Push Notification for future use.</p>
      <a href="https://openam-volker-demo.forgeblocks.com/am/XUI/?realm=alpha&amp;authIndexType=service&amp;authIndexValue=wks-NEO&amp;userName={{object.userName}}">Click to Join Encore</a>
    </div>
  </body>
</html>",
      },
      "mimeType": "text/html",
      "styles": "body {
   background-color: #324054;
   color: #455469;
   padding: 60px;
   text-align: center 
}
 a {
   text-decoration: none;
   color: #109cf1;
}
 .content {
   background-color: #fff;
   border-radius: 4px;
   margin: 0 auto;
   padding: 48px;
   width: 235px 
}
 ",
      "subject": {
        "en": "Welcome to Encore!",
      },
      "templateId": "joiner",
    },
    "emailTemplate/registerPasswordlessDevice": {
      "_id": "emailTemplate/registerPasswordlessDevice",
      "defaultLocale": "en",
      "description": "",
      "displayName": "Register Passwordless Device",
      "enabled": true,
      "from": ""ForgeRock Identity Cloud" <no-reply@forgerock.com>",
      "html": {
        "en": "<div class="content"><h1 id="welcomeback">Welcome back</h1><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Passwordless Registration"></p><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to register a new passwordless device.</p><p><br></p><hr><p><a href="{{object.resumeURI}}">Register New Device</a></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=">Privacy Policy</a></p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h1 id="welcomeback">Welcome back</h1><p><img src="https://tinyurl.com/3mwewu3v" alt="alt text" title="Passwordless Registration"></p><p><br></p><p>Hello,</p><p>You're receiving this email because you requested a link to register a new passwordless device.</p><p><br></p><hr><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Register New Device</a></p><p>This link will expire in 24 hours.</p><p><br></p><p>-- The ForgeRock Team</p><p><a href="https://www.forgerock.com" style="text-decoration: none; color: #109cf1;">www.forgerock.com</a></p><p>201 Mission St Suite 2900</p><p>San Francisco, CA 94105</p><p><a href="mailto:support@forgerock.com" style="text-decoration: none; color: #109cf1;">support@forgerock.com</a></p><hr><p>If you did not request for this email, please ignore and we won't email you again.</p><p>ForgeRock | <a href="https: www.forgerock.com=" style="text-decoration: none; color: #109cf1;">Privacy Policy</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
	background-color: #324054;
	color: #455469;
	padding: 60px;
	text-align: center
}

a {
	text-decoration: none;
	color: #109cf1;
}

.content {
	background-color: #fff;
	border-radius: 4px;
	margin: 0 auto;
	padding: 48px;
	width: 235px
}
",
      "subject": {
        "en": "Your magic link is here - register new WebAuthN device",
      },
      "templateId": "registerPasswordlessDevice",
    },
    "emailTemplate/registration": {
      "_id": "emailTemplate/registration",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}">Email verification link</a></p></body></html>",
        "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Email verification link</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Register new account",
        "fr": "Créer un nouveau compte",
      },
    },
    "emailTemplate/resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href="{{object.resumeURI}}">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href="{{object.resumeURI}}">Mot de passe lien de réinitialisation</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe",
      },
    },
    "emailTemplate/updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href="{{object.resumeURI}}">Update password link</a></p>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="verifyemailtoupdatepassword">Verify email to update password</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Update password link</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password",
      },
    },
    "emailTemplate/welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Welcome. Your username is '{{object.userName}}'.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{
 background-color:#324054;
 color:#5e6d82;
 padding:60px;
 text-align:center
}
a{
 text-decoration:none;
 color:#109cf1
}
.content{
 background-color:#fff;
 border-radius:4px;
 margin:0 auto;
 padding:48px;
 width:235px
}
",
      "subject": {
        "en": "Your account has been created",
      },
    },
    "entityId": {
      "_id": "entityId",
      "defaultLocale": "en",
      "displayName": "Frodo Test Email Template Three",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><body><h3>You started a login or profile update that requires MFA. </h3><h4><a href="{{object.resumeURI}}">Click to Proceed</a></h4></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Multi-Factor Email for Identity Cloud login",
      },
    },
    "external.email": {
      "_id": "external.email",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": true,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
    "external.emailDefault": {
      "_id": "external.emailDefault",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": true,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
    "fieldPolicy/alpha_user": {
      "_id": "fieldPolicy/alpha_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/alpha_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "alpha_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 10,
          "type": "length-based",
        },
        {
          "_id": "alpha_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "alpha_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "0:abcdefghijklmnopqrstuvwxyz",
            "0:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "0:0123456789",
            "0:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "minCharacterSets": 4,
          "type": "character-set",
        },
      ],
    },
    "fieldPolicy/bravo_user": {
      "_id": "fieldPolicy/bravo_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/bravo_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "bravo_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based",
        },
        {
          "_id": "bravo_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "bravo_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "type": "character-set",
        },
      ],
    },
    "internal": {
      "_id": "internal",
      "objects": [
        {
          "name": "role",
          "properties": {
            "authzMembers": {
              "items": {
                "resourceCollection": [
                  {
                    "conditionalAssociation": true,
                    "label": "User",
                    "notify": true,
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
    "managed": {
      "_id": "managed",
      "objects": [
        {
          "lastSync": {
            "effectiveAssignmentsProperty": "effectiveAssignments",
            "lastSyncProperty": "lastSync",
          },
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/alpha_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged",
            ],
          },
          "name": "alpha_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "assignments",
              "groups",
              "applications",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "effectiveGroups",
              "effectiveApplications",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "ownerOfApp",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard",
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false,
              },
              "applications": {
                "description": "Applications",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": true,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "assignments": {
                "description": "Assignments",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignments",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "cn": {
                "default": "{{givenName}} {{sn}}",
                "description": "Common Name",
                "isPersonal": true,
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate",
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                    },
                    "required": [
                      "mapping",
                      "consentDate",
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object",
                  },
                  "title": "Consented Mappings Items",
                  "type": "array",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "effectiveApplications": {
                "description": "Effective Applications",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assigned Application Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Applications",
                "type": "array",
                "viewable": false,
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "assignments",
                    ],
                    [
                      "assignments",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/alpha_group",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId",
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string",
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string",
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object",
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp",
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object",
                    },
                    "title": "Effective Assignments",
                    "type": "array",
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string",
                  },
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format",
                  },
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string",
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string",
                      },
                    },
                    "title": "Manager _refProperties",
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "ownerOfApp": {
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Applications I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing",
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean",
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean",
                  },
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                  {
                    "params": {
                      "minLength": 1,
                    },
                    "policyId": "minimum-length",
                  },
                  {
                    "params": {
                      "maxLength": 255,
                    },
                    "policyId": "maximum-length",
                  },
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail",
            ],
            "title": "Alpha realm - User",
            "type": "object",
            "viewable": true,
          },
        },
        {
          "lastSync": {
            "effectiveAssignmentsProperty": "effectiveAssignments",
            "lastSyncProperty": "lastSync",
          },
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/bravo_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged",
            ],
          },
          "name": "bravo_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "assignments",
              "groups",
              "applications",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "effectiveGroups",
              "effectiveApplications",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "ownerOfApp",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard",
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false,
              },
              "applications": {
                "description": "Applications",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": true,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "assignments": {
                "description": "Assignments",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignments",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "cn": {
                "default": "{{givenName}} {{sn}}",
                "description": "Common Name",
                "isPersonal": true,
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate",
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                    },
                    "required": [
                      "mapping",
                      "consentDate",
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object",
                  },
                  "title": "Consented Mappings Items",
                  "type": "array",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "effectiveApplications": {
                "description": "Effective Applications",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assigned Application Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "name",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "applications",
                    ],
                    [
                      "applications",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Applications",
                "type": "array",
                "viewable": false,
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*",
                  ],
                  "referencedRelationshipFields": [
                    [
                      "roles",
                      "assignments",
                    ],
                    [
                      "assignments",
                    ],
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/bravo_group",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId",
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string",
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string",
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object",
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp",
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object",
                    },
                    "title": "Effective Assignments",
                    "type": "array",
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string",
                  },
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format",
                  },
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string",
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string",
                      },
                    },
                    "title": "Manager _refProperties",
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/bravo_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "ownerOfApp": {
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [
                          "name",
                        ],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Applications I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing",
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean",
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean",
                  },
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                  {
                    "params": {
                      "minLength": 1,
                    },
                    "policyId": "minimum-length",
                  },
                  {
                    "params": {
                      "maxLength": 255,
                    },
                    "policyId": "maximum-length",
                  },
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail",
            ],
            "title": "Bravo realm - User",
            "type": "object",
            "viewable": true,
          },
        },
        {
          "name": "alpha_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "applications",
              "condition",
              "temporalConstraints",
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "applications": {
                "description": "Role Applications",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Application Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/alpha_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Application Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "viewable": false,
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration",
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string",
                    },
                  },
                  "required": [
                    "duration",
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Role",
            "type": "object",
          },
        },
        {
          "name": "bravo_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "applications",
              "condition",
              "temporalConstraints",
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "applications": {
                "description": "Role Applications",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:applications:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Application Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Application",
                      "path": "managed/bravo_application",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Application Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Applications",
                "type": "array",
                "viewable": false,
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration",
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string",
                    },
                  },
                  "required": [
                    "duration",
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Role",
            "type": "object",
          },
        },
        {
          "attributeEncryption": {},
          "name": "alpha_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "type",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
              "members",
              "condition",
              "weight",
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value",
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string",
                    },
                    "name": {
                      "description": "Name",
                      "type": "string",
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string",
                    },
                    "value": {
                      "description": "Value",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this assignment",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string",
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true,
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists",
                  },
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Assignment Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Assignment Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Assignment Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignment Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "type": {
                "description": "The type of object this assignment represents",
                "title": "Type",
                "type": "string",
                "viewable": true,
              },
              "weight": {
                "description": "The weight of the assignment.",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "searchable": false,
                "title": "Weight",
                "type": [
                  "number",
                  "null",
                ],
                "viewable": true,
              },
            },
            "required": [
              "name",
              "description",
              "mapping",
            ],
            "title": "Alpha realm - Assignment",
            "type": "object",
          },
        },
        {
          "attributeEncryption": {},
          "name": "bravo_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "type",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
              "members",
              "condition",
              "weight",
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value",
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string",
                    },
                    "name": {
                      "description": "Name",
                      "type": "string",
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string",
                    },
                    "value": {
                      "description": "Value",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this assignment",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string",
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true,
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists",
                  },
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Assignment Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Assignment Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Assignment Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Assignment Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "type": {
                "description": "The type of object this assignment represents",
                "title": "Type",
                "type": "string",
                "viewable": true,
              },
              "weight": {
                "description": "The weight of the assignment.",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "searchable": false,
                "title": "Weight",
                "type": [
                  "number",
                  "null",
                ],
                "viewable": true,
              },
            },
            "required": [
              "name",
              "description",
              "mapping",
            ],
            "title": "Bravo realm - Assignment",
            "type": "object",
          },
        },
        {
          "name": "alpha_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "mat-icon": "domain",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs",
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "admins",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "owners",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members",
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string",
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/alpha_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description",
                      ],
                      "queryFilter": "true",
                      "sortKeys": [],
                    },
                  },
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Organization",
            "type": "object",
          },
        },
        {
          "name": "bravo_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "mat-icon": "domain",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs",
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "admins",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "owners",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members",
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string",
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/bravo_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description",
                      ],
                      "queryFilter": "true",
                      "sortKeys": [],
                    },
                  },
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Organization",
            "type": "object",
          },
        },
        {
          "name": "alpha_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name",
                    },
                    "policyId": "id-must-equal-property",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter",
                  },
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true,
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Group",
            "viewable": true,
          },
        },
        {
          "name": "bravo_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name",
                    },
                    "policyId": "id-must-equal-property",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter",
                  },
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true,
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Group",
            "viewable": true,
          },
        },
        {
          "name": "alpha_application",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "Application Object",
            "icon": "fa-folder",
            "order": [
              "name",
              "description",
              "url",
              "icon",
              "mappingNames",
              "owners",
              "roles",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Application ID",
                "isPersonal": false,
                "searchable": false,
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "authoritative": {
                "description": "Is this an authoritative application",
                "searchable": false,
                "title": "Authoritative",
                "type": "boolean",
                "viewable": false,
              },
              "connectorId": {
                "description": "Id of the connector associated with the application",
                "searchable": false,
                "title": "Connector ID",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "description": "Application Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "icon": {
                "searchable": true,
                "title": "Icon",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "mappingNames": {
                "description": "Names of the sync mappings used by an application with provisioning configured.",
                "items": {
                  "title": "Mapping Name Items",
                  "type": "string",
                },
                "searchable": true,
                "title": "Sync Mapping Names",
                "type": "array",
                "viewable": true,
              },
              "members": {
                "description": "Application Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Application name",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "returnByDefault": true,
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "owners": {
                "description": "Application Owners",
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Application _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfApp",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Owners",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Roles granting users the application",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ssoEntities": {
                "description": "SSO Entity Id",
                "properties": {
                  "idpLocation": {
                    "type": "string",
                  },
                  "idpPrivateId": {
                    "type": "string",
                  },
                  "spLocation": {
                    "type": "string",
                  },
                  "spPrivate": {
                    "type": "string",
                  },
                },
                "searchable": false,
                "title": "SSO Entity Id",
                "type": "object",
                "userEditable": false,
                "viewable": false,
              },
              "templateName": {
                "description": "Name of the template the application was created from",
                "searchable": false,
                "title": "Template Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "templateVersion": {
                "description": "The template version",
                "searchable": false,
                "title": "Template Version",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "uiConfig": {
                "description": "UI Config",
                "isPersonal": false,
                "properties": {},
                "searchable": false,
                "title": "UI Config",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "url": {
                "searchable": true,
                "title": "Url",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Application",
            "type": "object",
          },
        },
        {
          "name": "bravo_application",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "Application Object",
            "icon": "fa-folder",
            "order": [
              "name",
              "description",
              "url",
              "icon",
              "mappingNames",
              "owners",
              "roles",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Application ID",
                "isPersonal": false,
                "searchable": false,
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "authoritative": {
                "description": "Is this an authoritative application",
                "searchable": false,
                "title": "Authoritative",
                "type": "boolean",
                "viewable": false,
              },
              "connectorId": {
                "description": "Id of the connector associated with the application",
                "searchable": false,
                "title": "Connector ID",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "description": "Application Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "icon": {
                "searchable": true,
                "title": "Icon",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "mappingNames": {
                "description": "Names of the sync mappings used by an application with provisioning configured.",
                "items": {
                  "title": "Mapping Name Items",
                  "type": "string",
                },
                "searchable": true,
                "title": "Sync Mapping Names",
                "type": "array",
                "viewable": true,
              },
              "members": {
                "description": "Application Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Application:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Application name",
                "notifyRelationships": [
                  "roles",
                  "members",
                ],
                "policies": [
                  {
                    "policyId": "unique",
                  },
                ],
                "returnByDefault": true,
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "owners": {
                "description": "Application Owners",
                "items": {
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Application _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfApp",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Owners",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Roles granting users the application",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "applications",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "ssoEntities": {
                "description": "SSO Entity Id",
                "properties": {
                  "idpLocation": {
                    "type": "string",
                  },
                  "idpPrivateId": {
                    "type": "string",
                  },
                  "spLocation": {
                    "type": "string",
                  },
                  "spPrivate": {
                    "type": "string",
                  },
                },
                "searchable": false,
                "title": "SSO Entity Id",
                "type": "object",
                "userEditable": false,
                "viewable": false,
              },
              "templateName": {
                "description": "Name of the template the application was created from",
                "searchable": false,
                "title": "Template Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "templateVersion": {
                "description": "The template version",
                "searchable": false,
                "title": "Template Version",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "uiConfig": {
                "description": "UI Config",
                "isPersonal": false,
                "properties": {},
                "searchable": false,
                "title": "UI Config",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "url": {
                "searchable": true,
                "title": "Url",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Application",
            "type": "object",
          },
        },
      ],
    },
    "mapping/managedAlpha_assignment_managedBravo_assignment": {
      "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
      "consentRequired": false,
      "displayName": "managedAlpha_assignment_managedBravo_assignment",
      "icon": null,
      "name": "managedAlpha_assignment_managedBravo_assignment",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/alpha_assignment",
      "target": "managed/bravo_assignment",
    },
    "mapping/managedAlpha_user_systemAzureUser": {
      "_id": "mapping/managedAlpha_user_systemAzureUser",
      "consentRequired": false,
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__",
      ],
      "displayName": "managedAlpha_user_systemAzureUser",
      "icon": null,
      "name": "managedAlpha_user_systemAzureUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "mail",
          "target": "mail",
        },
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "sn",
          "target": "surname",
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName+" "+source.sn",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "mailNickname",
          "transform": {
            "source": "source.givenName[0].toLowerCase()+source.sn.toLowerCase()",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "accountEnabled",
          "transform": {
            "source": "true",
            "type": "text/javascript",
          },
        },
        {
          "condition": {
            "globals": {},
            "source": "(typeof oldTarget === 'undefined' || oldTarget === null)",
            "type": "text/javascript",
          },
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": ""!@#$%"[Math.floor(Math.random()*5)] + Math.random().toString(36).slice(2, 13).toUpperCase()+Math.random().toString(36).slice(2,13)",
            "type": "text/javascript",
          },
        },
      ],
      "queuedSync": {
        "enabled": true,
        "maxRetries": 0,
        "pollingInterval": 10000,
      },
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "0f357b7e-6c54-4351-a094-43916877d7e5"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemAzureUser" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "0f357b7e-6c54-4351-a094-43916877d7e5"] or lastSync/managedAlpha_user_systemAzureUser pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemAzureUser" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/Azure/User",
    },
    "mapping/managedBravo_group_managedBravo_group": {
      "_id": "mapping/managedBravo_group_managedBravo_group",
      "consentRequired": false,
      "displayName": "managedBravo_group_managedBravo_group",
      "icon": null,
      "name": "managedBravo_group_managedBravo_group",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_group",
      "target": "managed/bravo_group",
    },
    "mapping/managedBravo_user_managedBravo_user0": {
      "_id": "mapping/managedBravo_user_managedBravo_user0",
      "consentRequired": false,
      "displayName": "managedBravo_user_managedBravo_user0",
      "icon": null,
      "name": "managedBravo_user_managedBravo_user0",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
      ],
      "properties": [],
      "source": "managed/bravo_user",
      "target": "managed/bravo_user",
    },
    "mapping/mapping12": {
      "_id": "mapping/mapping12",
      "consentRequired": false,
      "displayName": "mapping12",
      "linkQualifiers": [],
      "name": "mapping12",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user",
    },
    "mapping/systemAzureDirectoryrole_managedAlpha_assignment": {
      "_id": "mapping/systemAzureDirectoryrole_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureDirectoryrole_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureDirectoryrole_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== "undefined" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== "undefined" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': '__roles__',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_directoryRole_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/directoryRole",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "__roles__"]",
      },
    },
    "mapping/systemAzureServiceplan_managedAlpha_assignment": {
      "_id": "mapping/systemAzureServiceplan_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureServiceplan_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureServiceplan_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== "undefined" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== "undefined" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': '__servicePlanIds__',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_servicePlan_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/servicePlan",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "__servicePlanIds__"]",
      },
    },
    "mapping/systemAzureUser_managedAlpha_user": {
      "_id": "mapping/systemAzureUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.mail + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemAzureUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemAzureUser",
      "name": "systemAzureUser_managedAlpha_user",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ONBOARD",
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectType": "__GROUP__",
          "source": "memberOf",
          "target": "assignments",
        },
        {
          "referencedObjectType": "directoryRole",
          "source": "__roles__",
          "target": "assignments",
        },
        {
          "referencedObjectType": "servicePlan",
          "source": "__servicePlanIds__",
          "target": "assignments",
        },
      ],
      "reconSourceQueryPageSize": 999,
      "reconSourceQueryPaging": true,
      "runTargetPhase": false,
      "source": "system/Azure/User",
      "sourceQueryFullEntry": true,
      "target": "managed/alpha_user",
    },
    "mapping/systemAzure__group___managedAlpha_assignment": {
      "_id": "mapping/systemAzure__group___managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzure__group___managedAlpha_assignment",
      "icon": null,
      "name": "systemAzure__group___managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== "undefined" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== "undefined" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'memberOf',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure___GROUP___",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "source": "system/Azure/__GROUP__",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq "managedAlpha_user_systemAzureUser" and attributes[name eq "memberOf"]",
      },
    },
    "policy": {
      "_id": "policy",
      "additionalFiles": [],
      "resources": [],
    },
    "privilegeAssignments": {
      "_id": "privilegeAssignments",
      "privilegeAssignments": [
        {
          "name": "ownerPrivileges",
          "privileges": [
            "owner-view-update-delete-orgs",
            "owner-create-orgs",
            "owner-view-update-delete-admins-and-members",
            "owner-create-admins",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "ownerOfOrg",
        },
        {
          "name": "adminPrivileges",
          "privileges": [
            "admin-view-update-delete-orgs",
            "admin-create-orgs",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "adminOfOrg",
        },
      ],
    },
    "privileges": {
      "_id": "privileges",
      "privileges": [],
    },
    "provisioner.openic/GoogleApps": {
      "_id": "provisioner.openic/GoogleApps",
      "configurationProperties": {
        "availableLicenses": [
          "101005/1010050001",
          "101001/1010010001",
          "101031/1010310010",
          "101034/1010340002",
          "101038/1010380002",
          "101034/1010340001",
          "101038/1010380003",
          "101034/1010340004",
          "101034/1010340003",
          "101034/1010340006",
          "Google-Apps/Google-Apps-For-Business",
          "101034/1010340005",
          "Google-Vault/Google-Vault",
          "Google-Apps/1010020031",
          "Google-Apps/1010020030",
          "Google-Apps/1010060003",
          "Google-Apps/1010060005",
          "Google-Apps/Google-Apps-Unlimited",
          "Google-Apps/1010020029",
          "Google-Apps/Google-Apps-Lite",
          "101031/1010310003",
          "101033/1010330002",
          "101033/1010330004",
          "Google-Apps/Google-Apps-For-Education",
          "101031/1010310002",
          "101033/1010330003",
          "Google-Apps/1010020026",
          "101031/1010310007",
          "Google-Apps/1010020025",
          "101031/1010310008",
          "Google-Apps/1010020028",
          "Google-Apps/Google-Apps-For-Postini",
          "101031/1010310005",
          "Google-Apps/1010020027",
          "101031/1010310006",
          "101031/1010310009",
          "Google-Vault/Google-Vault-Former-Employee",
          "101038/1010370001",
          "Google-Apps/1010020020",
          "Google-Apps/1010060001",
        ],
        "clientId": "&{esv.gac.client.id}",
        "clientSecret": "&{esv.gac.secret}",
        "domain": "&{esv.gac.domain}",
        "groupsMaxResults": "200",
        "listProductAndSkuMaxResults": "100",
        "listProductMaxResults": "100",
        "membersMaxResults": "200",
        "proxyHost": null,
        "proxyPort": 8080,
        "refreshToken": "&{esv.gac.refresh}",
        "roleAssignmentMaxResults": 100,
        "roleMaxResults": 100,
        "usersMaxResults": "100",
        "validateCertificate": true,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.googleapps-connector",
        "bundleVersion": "[1.5.0.0,1.6.0.0)",
        "connectorHostRef": "",
        "connectorName": "org.forgerock.openicf.connectors.googleapps.GoogleAppsConnector",
        "displayName": "GoogleApps Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": {
        "$bool": "&{esv.gac.enable.connector}",
      },
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__GROUPS__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__GROUPS__",
              "nativeType": "string",
              "type": "array",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__PHOTO__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PHOTO__",
              "nativeType": "JAVA_TYPE_BYTE_ARRAY",
              "type": "string",
            },
            "__SECONDARY_EMAILS__": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__SECONDARY_EMAILS__",
              "nativeType": "object",
              "type": "array",
            },
            "__UID__": {
              "nativeName": "__UID__",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "addresses": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addresses",
              "nativeType": "object",
              "type": "array",
            },
            "agreedToTerms": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "agreedToTerms",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "aliases": {
              "flags": [
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "aliases",
              "nativeType": "string",
              "type": "array",
            },
            "archived": {
              "nativeName": "archived",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "changePasswordAtNextLogin": {
              "nativeName": "changePasswordAtNextLogin",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "creationTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "creationTime",
              "nativeType": "string",
              "type": "array",
            },
            "customSchemas": {
              "nativeName": "customSchemas",
              "nativeType": "object",
              "type": "object",
            },
            "customerId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "customerId",
              "nativeType": "string",
              "type": "string",
            },
            "deletionTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletionTime",
              "nativeType": "string",
              "type": "string",
            },
            "externalIds": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "externalIds",
              "nativeType": "object",
              "type": "array",
            },
            "familyName": {
              "nativeName": "familyName",
              "nativeType": "string",
              "type": "string",
            },
            "fullName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "fullName",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "hashFunction": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "hashFunction",
              "nativeType": "string",
              "type": "string",
            },
            "ims": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "ims",
              "nativeType": "object",
              "type": "array",
            },
            "includeInGlobalAddressList": {
              "nativeName": "includeInGlobalAddressList",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "ipWhitelisted": {
              "nativeName": "ipWhitelisted",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isAdmin": {
              "nativeName": "isAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isDelegatedAdmin": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isDelegatedAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isEnforcedIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnforcedIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isEnrolledIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnrolledIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isMailboxSetup": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isMailboxSetup",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "languages": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "languages",
              "nativeType": "object",
              "type": "array",
            },
            "lastLoginTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "lastLoginTime",
              "nativeType": "string",
              "type": "array",
            },
            "nonEditableAliases": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "nonEditableAliases",
              "nativeType": "string",
              "type": "array",
            },
            "orgUnitPath": {
              "nativeName": "orgUnitPath",
              "nativeType": "string",
              "type": "string",
            },
            "organizations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "organizations",
              "nativeType": "object",
              "type": "array",
            },
            "phones": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "phones",
              "nativeType": "object",
              "type": "array",
            },
            "primaryEmail": {
              "nativeName": "primaryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryEmail": {
              "nativeName": "recoveryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryPhone": {
              "nativeName": "recoveryPhone",
              "nativeType": "string",
              "type": "string",
            },
            "relations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "relations",
              "nativeType": "object",
              "type": "array",
            },
            "suspended": {
              "nativeName": "suspended",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "suspensionReason": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "suspensionReason",
              "nativeType": "string",
              "type": "string",
            },
            "thumbnailPhotoUrl": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "thumbnailPhotoUrl",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "provisioner.openicf.connectorinfoprovider": {
      "_id": "provisioner.openicf.connectorinfoprovider",
      "connectorsLocation": "connectors",
      "remoteConnectorClients": [
        {
          "enabled": true,
          "name": "rcs1",
          "useSSL": true,
        },
      ],
      "remoteConnectorClientsGroups": [],
      "remoteConnectorServers": [],
      "remoteConnectorServersGroups": [],
    },
    "provisioner.openicf/Azure": {
      "_id": "provisioner.openicf/Azure",
      "configurationProperties": {
        "clientId": "4b07adcc-329c-434c-aa83-49a14bef3c49",
        "clientSecret": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "W63amdvzlmynT40WOTl1wPWDc8FUlGWQZK158lmlFTrnhy9PbWZV5YE4v3VeMUDC",
              "iv": "KG/YFc8v26QHJzRI3uFhzw==",
              "keySize": 16,
              "mac": "mA4BzCNS7tuLhosQ+es1Tg==",
              "purpose": "idm.config.encryption",
              "salt": "vvPwKk0KqOqMjElQgICqEA==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "httpProxyHost": null,
        "httpProxyPassword": null,
        "httpProxyPort": null,
        "httpProxyUsername": null,
        "licenseCacheExpiryTime": 60,
        "performHardDelete": true,
        "readRateLimit": null,
        "tenant": "711ffa9c-5972-4713-ace3-688c9732614a",
        "writeRateLimit": null,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.msgraphapi-connector",
        "bundleVersion": "1.5.20.21",
        "connectorName": "org.forgerock.openicf.connectors.msgraphapi.MSGraphAPIConnector",
        "displayName": "MSGraphAPI Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__PASSWORD__": {
              "autocomplete": "new-password",
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__roles__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__roles__",
              "nativeType": "string",
              "type": "array",
            },
            "__servicePlanIds__": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__servicePlanIds__",
              "nativeType": "string",
              "type": "array",
            },
            "accountEnabled": {
              "nativeName": "accountEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "type": "string",
            },
            "companyName": {
              "nativeName": "companyName",
              "nativeType": "string",
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "jobTitle": {
              "nativeName": "jobTitle",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "mailNickname": {
              "nativeName": "mailNickname",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "object",
              "type": "object",
            },
            "memberOf": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "mobilePhone": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "mobilePhone",
              "nativeType": "string",
              "type": "string",
            },
            "onPremisesImmutableId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesImmutableId",
              "nativeType": "string",
              "type": "string",
            },
            "onPremisesSecurityIdentifier": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesSecurityIdentifier",
              "nativeType": "string",
              "type": "string",
            },
            "otherMails": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherMails",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "preferredLanguage": {
              "nativeName": "preferredLanguage",
              "nativeType": "string",
              "type": "string",
            },
            "proxyAddresses": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "proxyAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "surname": {
              "nativeName": "surname",
              "nativeType": "string",
              "type": "string",
            },
            "usageLocation": {
              "nativeName": "usageLocation",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "userType": {
              "nativeName": "userType",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "__GROUP__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "groupTypes": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "groupTypes",
              "nativeType": "string",
              "type": "string",
            },
            "id": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "id",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "mailEnabled": {
              "nativeName": "mailEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "onPremisesSecurityIdentifier": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "onPremisesSecurityIdentifier",
              "nativeType": "string",
              "type": "string",
            },
            "proxyAddresses": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "proxyAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "securityEnabled": {
              "nativeName": "securityEnabled",
              "nativeType": "boolean",
              "required": true,
              "type": "boolean",
            },
            "type": {
              "nativeName": "type",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "directoryRole": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "directoryRole",
          "nativeType": "directoryRole",
          "properties": {
            "description": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "servicePlan": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "servicePlan",
          "nativeType": "servicePlan",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "appliesTo": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "appliesTo",
              "nativeType": "string",
              "type": "string",
            },
            "provisioningStatus": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "provisioningStatus",
              "nativeType": "string",
              "type": "string",
            },
            "servicePlanId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "servicePlanId",
              "nativeType": "string",
              "type": "string",
            },
            "servicePlanName": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "servicePlanName",
              "nativeType": "string",
              "type": "string",
            },
            "subscriberSkuId": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "subscriberSkuId",
              "type": "string",
            },
          },
          "type": "object",
        },
        "servicePrincipal": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "servicePrincipal",
          "nativeType": "servicePrincipal",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__addAppRoleAssignedTo__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__addAppRoleAssignedTo__",
              "nativeType": "object",
              "type": "array",
            },
            "__addAppRoleAssignments__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__addAppRoleAssignments__",
              "nativeType": "object",
              "type": "array",
            },
            "__removeAppRoleAssignedTo__": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__removeAppRoleAssignedTo__",
              "nativeType": "string",
              "type": "array",
            },
            "__removeAppRoleAssignments__": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__removeAppRoleAssignments__",
              "nativeType": "string",
              "type": "array",
            },
            "accountEnabled": {
              "nativeName": "accountEnabled",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "addIns": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addIns",
              "nativeType": "object",
              "type": "array",
            },
            "alternativeNames": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "alternativeNames",
              "nativeType": "string",
              "type": "array",
            },
            "appDescription": {
              "nativeName": "appDescription",
              "nativeType": "string",
              "type": "string",
            },
            "appDisplayName": {
              "nativeName": "appDisplayName",
              "nativeType": "string",
              "type": "string",
            },
            "appId": {
              "nativeName": "appId",
              "nativeType": "string",
              "type": "string",
            },
            "appOwnerOrganizationId": {
              "nativeName": "appOwnerOrganizationId",
              "nativeType": "string",
              "type": "string",
            },
            "appRoleAssignmentRequired": {
              "nativeName": "appRoleAssignmentRequired",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "appRoles": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "appRoles",
              "nativeType": "object",
              "type": "array",
            },
            "applicationTemplateId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "applicationTemplateId",
              "nativeType": "string",
              "type": "string",
            },
            "deletedDateTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletedDateTime",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "disabledByMicrosoftStatus": {
              "nativeName": "disabledByMicrosoftStatus",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "homepage": {
              "nativeName": "homepage",
              "nativeType": "string",
              "type": "string",
            },
            "info": {
              "nativeName": "info",
              "nativeType": "object",
              "type": "object",
            },
            "keyCredentials": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "keyCredentials",
              "nativeType": "object",
              "type": "array",
            },
            "loginUrl": {
              "nativeName": "loginUrl",
              "nativeType": "string",
              "type": "string",
            },
            "logoutUrl": {
              "nativeName": "logoutUrl",
              "nativeType": "string",
              "type": "string",
            },
            "notes": {
              "nativeName": "notes",
              "nativeType": "string",
              "type": "string",
            },
            "notificationEmailAddresses": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "notificationEmailAddresses",
              "nativeType": "string",
              "type": "array",
            },
            "oauth2PermissionScopes": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "oauth2PermissionScopes",
              "nativeType": "object",
              "type": "array",
            },
            "passwordCredentials": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "passwordCredentials",
              "nativeType": "object",
              "type": "array",
            },
            "preferredSingleSignOnMode": {
              "nativeName": "preferredSingleSignOnMode",
              "nativeType": "string",
              "type": "string",
            },
            "replyUrls": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "replyUrls",
              "nativeType": "string",
              "type": "array",
            },
            "resourceSpecificApplicationPermissions": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "resourceSpecificApplicationPermissions",
              "nativeType": "object",
              "type": "array",
            },
            "samlSingleSignOnSettings": {
              "nativeName": "samlSingleSignOnSettings",
              "nativeType": "object",
              "type": "object",
            },
            "servicePrincipalNames": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "servicePrincipalNames",
              "nativeType": "string",
              "type": "array",
            },
            "servicePrincipalType": {
              "nativeName": "servicePrincipalType",
              "nativeType": "string",
              "type": "string",
            },
            "signInAudience": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "signInAudience",
              "nativeType": "string",
              "type": "string",
            },
            "tags": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "tags",
              "nativeType": "string",
              "type": "array",
            },
            "tokenEncryptionKeyId": {
              "nativeName": "tokenEncryptionKeyId",
              "nativeType": "string",
              "type": "string",
            },
            "verifiedPublisher": {
              "nativeName": "verifiedPublisher",
              "nativeType": "object",
              "type": "object",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "provisioner.openicf/GoogleApps": {
      "_id": "provisioner.openicf/GoogleApps",
      "configurationProperties": {
        "availableLicenses": [
          "101005/1010050001",
          "101001/1010010001",
          "101031/1010310010",
          "101034/1010340002",
          "101038/1010380002",
          "101034/1010340001",
          "101038/1010380003",
          "101034/1010340004",
          "101034/1010340003",
          "101034/1010340006",
          "Google-Apps/Google-Apps-For-Business",
          "101034/1010340005",
          "Google-Vault/Google-Vault",
          "Google-Apps/1010020031",
          "Google-Apps/1010020030",
          "Google-Apps/1010060003",
          "Google-Apps/1010060005",
          "Google-Apps/Google-Apps-Unlimited",
          "Google-Apps/1010020029",
          "Google-Apps/Google-Apps-Lite",
          "101031/1010310003",
          "101033/1010330002",
          "101033/1010330004",
          "Google-Apps/Google-Apps-For-Education",
          "101031/1010310002",
          "101033/1010330003",
          "Google-Apps/1010020026",
          "101031/1010310007",
          "Google-Apps/1010020025",
          "101031/1010310008",
          "Google-Apps/1010020028",
          "Google-Apps/Google-Apps-For-Postini",
          "101031/1010310005",
          "Google-Apps/1010020027",
          "101031/1010310006",
          "101031/1010310009",
          "Google-Vault/Google-Vault-Former-Employee",
          "101038/1010370001",
          "Google-Apps/1010020020",
          "Google-Apps/1010060001",
        ],
        "clientId": "&{esv.gac.client.id}",
        "clientSecret": "&{esv.gac.secret}",
        "domain": "&{esv.gac.domain}",
        "groupsMaxResults": "200",
        "listProductAndSkuMaxResults": "100",
        "listProductMaxResults": "100",
        "membersMaxResults": "200",
        "proxyHost": null,
        "proxyPort": 8080,
        "refreshToken": "&{esv.gac.refresh}",
        "roleAssignmentMaxResults": 100,
        "roleMaxResults": 100,
        "usersMaxResults": "100",
        "validateCertificate": true,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.googleapps-connector",
        "bundleVersion": "[1.5.0.0,1.6.0.0)",
        "connectorHostRef": "",
        "connectorName": "org.forgerock.openicf.connectors.googleapps.GoogleAppsConnector",
        "displayName": "GoogleApps Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": {
        "$bool": "&{esv.gac.enable.connector}",
      },
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__GROUPS__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "__GROUPS__",
              "nativeType": "string",
              "type": "array",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "required": true,
              "type": "string",
            },
            "__PHOTO__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PHOTO__",
              "nativeType": "JAVA_TYPE_BYTE_ARRAY",
              "type": "string",
            },
            "__SECONDARY_EMAILS__": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "__SECONDARY_EMAILS__",
              "nativeType": "object",
              "type": "array",
            },
            "__UID__": {
              "nativeName": "__UID__",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "addresses": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "addresses",
              "nativeType": "object",
              "type": "array",
            },
            "agreedToTerms": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "agreedToTerms",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "aliases": {
              "flags": [
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "aliases",
              "nativeType": "string",
              "type": "array",
            },
            "archived": {
              "nativeName": "archived",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "changePasswordAtNextLogin": {
              "nativeName": "changePasswordAtNextLogin",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "creationTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "creationTime",
              "nativeType": "string",
              "type": "array",
            },
            "customSchemas": {
              "nativeName": "customSchemas",
              "nativeType": "object",
              "type": "object",
            },
            "customerId": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "customerId",
              "nativeType": "string",
              "type": "string",
            },
            "deletionTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "deletionTime",
              "nativeType": "string",
              "type": "string",
            },
            "externalIds": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "externalIds",
              "nativeType": "object",
              "type": "array",
            },
            "familyName": {
              "nativeName": "familyName",
              "nativeType": "string",
              "type": "string",
            },
            "fullName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "fullName",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "hashFunction": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "hashFunction",
              "nativeType": "string",
              "type": "string",
            },
            "ims": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "ims",
              "nativeType": "object",
              "type": "array",
            },
            "includeInGlobalAddressList": {
              "nativeName": "includeInGlobalAddressList",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "ipWhitelisted": {
              "nativeName": "ipWhitelisted",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isAdmin": {
              "nativeName": "isAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isDelegatedAdmin": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isDelegatedAdmin",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "isEnforcedIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnforcedIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isEnrolledIn2Sv": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isEnrolledIn2Sv",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "isMailboxSetup": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "isMailboxSetup",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "languages": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "languages",
              "nativeType": "object",
              "type": "array",
            },
            "lastLoginTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "lastLoginTime",
              "nativeType": "string",
              "type": "array",
            },
            "nonEditableAliases": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "nonEditableAliases",
              "nativeType": "string",
              "type": "array",
            },
            "orgUnitPath": {
              "nativeName": "orgUnitPath",
              "nativeType": "string",
              "type": "string",
            },
            "organizations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "organizations",
              "nativeType": "object",
              "type": "array",
            },
            "phones": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "phones",
              "nativeType": "object",
              "type": "array",
            },
            "primaryEmail": {
              "nativeName": "primaryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryEmail": {
              "nativeName": "recoveryEmail",
              "nativeType": "string",
              "type": "string",
            },
            "recoveryPhone": {
              "nativeName": "recoveryPhone",
              "nativeType": "string",
              "type": "string",
            },
            "relations": {
              "items": {
                "nativeType": "object",
                "type": "object",
              },
              "nativeName": "relations",
              "nativeType": "object",
              "type": "array",
            },
            "suspended": {
              "nativeName": "suspended",
              "nativeType": "boolean",
              "type": "boolean",
            },
            "suspensionReason": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "suspensionReason",
              "nativeType": "string",
              "type": "string",
            },
            "thumbnailPhotoUrl": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "thumbnailPhotoUrl",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "repo.ds": {
      "_id": "repo.ds",
      "commands": {
        "delete-mapping-links": {
          "_queryFilter": "/linkType eq "\${mapping}"",
          "operation": "DELETE",
        },
        "delete-target-ids-for-recon": {
          "_queryFilter": "/reconId eq "\${reconId}"",
          "operation": "DELETE",
        },
      },
      "embedded": false,
      "ldapConnectionFactories": {
        "bind": {
          "availabilityCheckIntervalSeconds": 30,
          "availabilityCheckTimeoutMilliSeconds": 10000,
          "connectionPoolSize": 50,
          "connectionSecurity": "none",
          "heartBeatIntervalSeconds": 60,
          "heartBeatTimeoutMilliSeconds": 10000,
          "primaryLdapServers": [
            {
              "hostname": "userstore-0.userstore",
              "port": 1389,
            },
          ],
          "secondaryLdapServers": [
            {
              "hostname": "userstore-2.userstore",
              "port": 1389,
            },
          ],
        },
        "root": {
          "authentication": {
            "simple": {
              "bindDn": "uid=admin",
              "bindPassword": "&{userstore.password}",
            },
          },
          "inheritFrom": "bind",
        },
      },
      "maxConnectionAttempts": 5,
      "queries": {
        "explicit": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
        },
        "generic": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "find-relationship-edges": {
            "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
          },
          "find-relationships-for-resource": {
            "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "get-by-field-value": {
            "_queryFilter": "/\${field} eq "\${value}"",
          },
          "get-notifications-for-user": {
            "_queryFilter": "/receiverId eq "\${userId}"",
            "_sortKeys": "-createDate",
          },
          "get-recons": {
            "_fields": "reconId,mapping,activitydate",
            "_queryFilter": "/entryType eq "summary"",
            "_sortKeys": "-activitydate",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
          "query-cluster-events": {
            "_queryFilter": "/instanceId eq "\${instanceId}"",
          },
          "query-cluster-failed-instances": {
            "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
          },
          "query-cluster-instances": {
            "_queryFilter": "true",
          },
          "query-cluster-running-instances": {
            "_queryFilter": "/state eq 1",
          },
        },
      },
      "resourceMapping": {
        "defaultMapping": {
          "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
        },
        "explicitMapping": {
          "clusteredrecontargetids": {
            "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-recon-clusteredTargetIds",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-recon-id",
                "type": "simple",
              },
              "targetIds": {
                "ldapAttribute": "fr-idm-recon-targetIds",
                "type": "json",
              },
            },
          },
          "dsconfig/attributeValue": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-attribute-value-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "matchAttribute": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-match-attribute",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/characterSet": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-character-set-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowUnclassifiedCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                "type": "simple",
              },
              "characterSet": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-character-set",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minCharacterSets": {
                "ldapAttribute": "ds-cfg-min-character-sets",
                "type": "simple",
              },
            },
          },
          "dsconfig/dictionary": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-dictionary-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "dictionaryFile": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-dictionary-file",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/lengthBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-length-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxPasswordLength": {
                "ldapAttribute": "ds-cfg-max-password-length",
                "type": "simple",
              },
              "minPasswordLength": {
                "ldapAttribute": "ds-cfg-min-password-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/passwordPolicies": {
            "dnTemplate": "cn=Password Policies,cn=config",
            "objectClasses": [
              "ds-cfg-password-policy",
              "ds-cfg-authentication-policy",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowPreEncodedPasswords": {
                "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
                "type": "simple",
              },
              "defaultPasswordStorageScheme": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                "type": "simple",
              },
              "deprecatedPasswordStorageScheme": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
                "type": "simple",
              },
              "maxPasswordAge": {
                "ldapAttribute": "ds-cfg-max-password-age",
                "type": "simple",
              },
              "passwordAttribute": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-password-attribute",
                "type": "simple",
              },
              "passwordHistoryCount": {
                "ldapAttribute": "ds-cfg-password-history-count",
                "type": "simple",
              },
              "validator": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-password-validator",
                "type": "simple",
              },
            },
          },
          "dsconfig/repeatedCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-repeated-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxConsecutiveLength": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-max-consecutive-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/similarityBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-similarity-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minPasswordDifference": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-password-difference",
                "type": "simple",
              },
            },
          },
          "dsconfig/uniqueCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-unique-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minUniqueCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-unique-characters",
                "type": "simple",
              },
            },
          },
          "dsconfig/userDefinedVirtualAttribute": {
            "dnTemplate": "cn=Virtual Attributes,cn=config",
            "objectClasses": [
              "ds-cfg-user-defined-virtual-attribute",
              "ds-cfg-virtual-attribute",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "attributeType": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-attribute-type",
                "type": "simple",
              },
              "baseDn": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-base-dn",
                "type": "simple",
              },
              "conflictBehavior": {
                "ldapAttribute": "ds-cfg-conflict-behavior",
                "type": "simple",
              },
              "enabled": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "filter": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-filter",
                "type": "simple",
              },
              "groupDn": {
                "ldapAttribute": "ds-cfg-group-dn",
                "type": "simple",
              },
              "javaClass": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "scope": {
                "ldapAttribute": "ds-cfg-scope",
                "type": "simple",
              },
              "value": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-value",
                "type": "simple",
              },
            },
          },
          "identities/admin": {
            "dnTemplate": "o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/alpha": {
            "dnTemplate": "o=alpha,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/bravo": {
            "dnTemplate": "o=bravo,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "internal/role": {
            "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "fr-idm-internal-role",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "authzMembers": {
                "isMultiValued": true,
                "propertyName": "authzRoles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "condition": {
                "ldapAttribute": "fr-idm-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "name": {
                "ldapAttribute": "fr-idm-name",
                "type": "simple",
              },
              "privileges": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-privilege",
                "type": "json",
              },
              "temporalConstraints": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-temporal-constraints",
                "type": "json",
              },
            },
          },
          "internal/user": {
            "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-internal-user",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "password": {
                "ldapAttribute": "fr-idm-password",
                "type": "json",
              },
            },
          },
          "link": {
            "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-link",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "firstId": {
                "ldapAttribute": "fr-idm-link-firstId",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-link-qualifier",
                "type": "simple",
              },
              "linkType": {
                "ldapAttribute": "fr-idm-link-type",
                "type": "simple",
              },
              "secondId": {
                "ldapAttribute": "fr-idm-link-secondId",
                "type": "simple",
              },
            },
          },
          "locks": {
            "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-lock",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-lock-nodeid",
                "type": "simple",
              },
            },
          },
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple",
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple",
              },
            },
          },
          "recon/assoc": {
            "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
            "namingStrategy": {
              "dnAttribute": "fr-idm-reconassoc-reconid",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "fr-idm-reconassoc",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "fr-idm-reconassoc-reconid",
                "type": "simple",
              },
              "finishTime": {
                "ldapAttribute": "fr-idm-reconassoc-finishtime",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "subResources": {
              "entry": {
                "namingStrategy": {
                  "dnAttribute": "uid",
                  "type": "clientDnNaming",
                },
                "resource": "recon-assoc-entry",
                "type": "collection",
              },
            },
          },
          "recon/assoc/entry": {
            "objectClasses": [
              "uidObject",
              "fr-idm-reconassocentry",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "action": {
                "ldapAttribute": "fr-idm-reconassocentry-action",
                "type": "simple",
              },
              "ambiguousTargetObjectIds": {
                "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                "type": "simple",
              },
              "exception": {
                "ldapAttribute": "fr-idm-reconassocentry-exception",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "message": {
                "ldapAttribute": "fr-idm-reconassocentry-message",
                "type": "simple",
              },
              "messageDetail": {
                "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                "type": "simple",
              },
              "phase": {
                "ldapAttribute": "fr-idm-reconassocentry-phase",
                "type": "simple",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-reconassocentry-reconid",
                "type": "simple",
              },
              "situation": {
                "ldapAttribute": "fr-idm-reconassocentry-situation",
                "type": "simple",
              },
              "sourceObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "status": {
                "ldapAttribute": "fr-idm-reconassocentry-status",
                "type": "simple",
              },
              "targetObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "resourceName": "recon-assoc-entry",
            "subResourceRouting": [
              {
                "prefix": "entry",
                "template": "recon/assoc/{reconId}/entry",
              },
            ],
          },
          "sync/queue": {
            "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-syncqueue",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "context": {
                "ldapAttribute": "fr-idm-syncqueue-context",
                "type": "json",
              },
              "createDate": {
                "ldapAttribute": "fr-idm-syncqueue-createdate",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-syncqueue-mapping",
                "type": "simple",
              },
              "newObject": {
                "ldapAttribute": "fr-idm-syncqueue-newobject",
                "type": "json",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-syncqueue-nodeid",
                "type": "simple",
              },
              "objectRev": {
                "ldapAttribute": "fr-idm-syncqueue-objectRev",
                "type": "simple",
              },
              "oldObject": {
                "ldapAttribute": "fr-idm-syncqueue-oldobject",
                "type": "json",
              },
              "remainingRetries": {
                "ldapAttribute": "fr-idm-syncqueue-remainingretries",
                "type": "simple",
              },
              "resourceCollection": {
                "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                "type": "simple",
              },
              "resourceId": {
                "ldapAttribute": "fr-idm-syncqueue-resourceid",
                "type": "simple",
              },
              "state": {
                "ldapAttribute": "fr-idm-syncqueue-state",
                "type": "simple",
              },
              "syncAction": {
                "ldapAttribute": "fr-idm-syncqueue-syncaction",
                "type": "simple",
              },
            },
          },
        },
        "genericMapping": {
          "cluster/*": {
            "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-cluster-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
            "objectClasses": [
              "uidObject",
              "fr-idm-cluster-obj",
            ],
          },
          "config": {
            "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
          },
          "file": {
            "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
          },
          "internal/notification": {
            "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-notification-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-notification",
            ],
            "properties": {
              "target": {
                "propertyName": "_notifications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "internal/usermeta": {
            "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "jsonstorage": {
            "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
          },
          "managed/*": {
            "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
            },
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
            },
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference",
              },
            },
          },
          "reconprogressstate": {
            "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
          },
          "relationships": {
            "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-relationship-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
            "objectClasses": [
              "uidObject",
              "fr-idm-relationship",
            ],
          },
          "scheduler": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "scheduler/*": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "ui/*": {
            "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
          },
          "updates": {
            "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
          },
        },
      },
      "rest2LdapOptions": {
        "mvccAttribute": "etag",
        "readOnUpdatePolicy": "controls",
        "returnNullForMissingProperties": true,
        "useMvcc": true,
        "usePermissiveModify": true,
        "useSubtreeDelete": true,
      },
      "security": {
        "keyManager": "jvm",
        "trustManager": "jvm",
      },
    },
    "router": {
      "_id": "router",
      "filters": [],
    },
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": ".groovy",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{idm.install.dir}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{idm.install.dir}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{idm.install.dir}/bin/defaults/script",
        },
        "install": {
          "directory": "&{idm.install.dir}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
    "secrets": {
      "_id": "secrets",
      "populateDefaults": true,
      "stores": [
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
            "mappings": [
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                  "openidm-localhost",
                ],
                "secretId": "idm.default",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.config.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.password.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.https.keystore.cert.alias|openidm-localhost}",
                ],
                "secretId": "idm.jwt.session.module.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}",
                ],
                "secretId": "idm.jwt.session.module.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "selfservice",
                ],
                "secretId": "idm.selfservice.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}",
                ],
                "secretId": "idm.selfservice.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.assignment.attribute.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
            ],
            "providerName": "&{openidm.keystore.provider|SunJCE}",
            "storePassword": "&{openidm.keystore.password|changeit}",
            "storetype": "&{openidm.keystore.type|JCEKS}",
          },
          "name": "mainKeyStore",
        },
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
            "mappings": [],
            "providerName": "&{openidm.truststore.provider|SUN}",
            "storePassword": "&{openidm.truststore.password|changeit}",
            "storetype": "&{openidm.truststore.type|JKS}",
          },
          "name": "mainTrustStore",
        },
      ],
    },
    "selfservice.kba": {
      "_id": "selfservice.kba",
      "kbaPropertyName": "kbaInfo",
      "minimumAnswersToDefine": 1,
      "minimumAnswersToVerify": 1,
      "questions": {
        "1": {
          "en": "What's your favorite color?",
        },
      },
    },
    "selfservice.terms": {
      "_id": "selfservice.terms",
      "active": "0.0",
      "uiConfig": {
        "buttonText": "Accept",
        "displayName": "We've updated our terms",
        "purpose": "You must accept the updated terms in order to proceed.",
      },
      "versions": [
        {
          "createDate": "2019-10-28T04:20:11.320Z",
          "termsTranslations": {
            "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
          "version": "0.0",
        },
      ],
    },
    "servletfilter/cors": {
      "_id": "servletfilter/cors",
      "initParams": {
        "allowCredentials": false,
        "allowedHeaders": "authorization,accept,content-type,origin,x-requested-with,cache-control,accept-api-version,if-match,if-none-match",
        "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
        "allowedOrigins": "*",
        "chainPreflight": false,
        "exposedHeaders": "WWW-Authenticate",
      },
      "urlPatterns": [
        "/*",
      ],
    },
    "servletfilter/payload": {
      "_id": "servletfilter/payload",
      "initParams": {
        "maxRequestSizeInMegabytes": 5,
      },
      "urlPatterns": [
        "&{openidm.servlet.alias}/*",
      ],
    },
    "servletfilter/upload": {
      "_id": "servletfilter/upload",
      "initParams": {
        "maxRequestSizeInMegabytes": 50,
      },
      "urlPatterns": [
        "&{openidm.servlet.upload.alias}/*",
      ],
    },
    "sync": {
      "_id": "sync",
      "mappings": [
        {
          "_id": "sync/managedBravo_user_managedBravo_user",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedAlpha_application_managedBravo_application",
          "consentRequired": true,
          "displayName": "Test Application Mapping",
          "icon": null,
          "name": "managedAlpha_application_managedBravo_application",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "source": "authoritative",
              "target": "_id",
            },
          ],
          "source": "managed/alpha_application",
          "sourceQuery": {
            "_queryFilter": "(eq "" or eq "")",
          },
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
          ],
          "target": "managed/bravo_application",
          "targetQuery": {
            "_queryFilter": "!(eq "")",
          },
        },
        {
          "_id": "sync/managedAlpha_user_managedBravo_user",
          "consentRequired": true,
          "displayName": "Test Mapping for Frodo",
          "icon": null,
          "name": "managedAlpha_user_managedBravo_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "console.log("Hello World!");",
                "type": "text/javascript",
              },
              "default": [
                "Default value string",
              ],
              "source": "accountStatus",
              "target": "applications",
              "transform": {
                "globals": {},
                "source": "console.log("hello");",
                "type": "text/javascript",
              },
            },
          ],
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
          ],
          "target": "managed/bravo_user",
        },
        {
          "_id": "sync/managedBravo_user_managedAlpha_user",
          "consentRequired": false,
          "displayName": "Frodo test mapping",
          "icon": null,
          "name": "managedBravo_user_managedAlpha_user",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
          ],
          "target": "managed/alpha_user",
        },
        {
          "_id": "sync/AlphaUser2GoogleApps",
          "consentRequired": false,
          "correlationQuery": [
            {
              "expressionTree": {
                "all": [
                  "__NAME__",
                ],
              },
              "file": "ui/correlateTreeToQueryFilter.js",
              "linkQualifier": "default",
              "mapping": "AlphaUser2GoogleApps",
              "type": "text/javascript",
            },
          ],
          "displayName": "AlphaUser2GoogleApps",
          "enableSync": {
            "$bool": "&{esv.gac.enable.mapping}",
          },
          "icon": null,
          "name": "AlphaUser2GoogleApps",
          "onCreate": {
            "globals": {},
            "source": "target.orgUnitPath = "/NewAccounts";",
            "type": "text/javascript",
          },
          "onUpdate": {
            "globals": {},
            "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
            "type": "text/javascript",
          },
          "policies": [
            {
              "action": "EXCEPTION",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "UNLINK",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": {
                "globals": {},
                "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
                "type": "text/javascript",
              },
              "situation": "MISSING",
            },
            {
              "action": "EXCEPTION",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "IGNORE",
              "situation": "UNQUALIFIED",
            },
            {
              "action": "IGNORE",
              "situation": "UNASSIGNED",
            },
            {
              "action": "UNLINK",
              "situation": "LINK_ONLY",
            },
            {
              "action": "IGNORE",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "IGNORE",
              "situation": "ALL_GONE",
            },
            {
              "action": "UPDATE",
              "situation": "CONFIRMED",
            },
            {
              "action": "LINK",
              "situation": "FOUND",
            },
            {
              "action": "CREATE",
              "situation": "ABSENT",
            },
          ],
          "properties": [
            {
              "condition": {
                "globals": {},
                "source": "object.custom_password_encrypted != null",
                "type": "text/javascript",
              },
              "source": "custom_password_encrypted",
              "target": "__PASSWORD__",
              "transform": {
                "globals": {},
                "source": "openidm.decrypt(source);",
                "type": "text/javascript",
              },
            },
            {
              "source": "cn",
              "target": "__NAME__",
              "transform": {
                "globals": {},
                "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
                "type": "text/javascript",
              },
            },
            {
              "source": "givenName",
              "target": "givenName",
            },
            {
              "source": "",
              "target": "familyName",
              "transform": {
                "globals": {},
                "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
                "type": "text/javascript",
              },
            },
          ],
          "queuedSync": {
            "enabled": true,
            "maxQueueSize": 20000,
            "maxRetries": 5,
            "pageSize": 100,
            "pollingInterval": 1000,
            "postRetryAction": "logged-ignore",
            "retryDelay": 1000,
          },
          "source": "managed/alpha_user",
          "syncAfter": [
            "managedBravo_user_managedBravo_user",
            "managedAlpha_application_managedBravo_application",
            "managedAlpha_user_managedBravo_user",
            "managedBravo_user_managedAlpha_user",
          ],
          "target": "system/GoogleApps/__ACCOUNT__",
          "validSource": {
            "globals": {},
            "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
            "type": "text/javascript",
          },
        },
      ],
    },
    "ui.context/admin": {
      "_id": "ui.context/admin",
      "defaultDir": "&{idm.install.dir}/ui/admin/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/admin/extension",
      "responseHeaders": {
        "X-Frame-Options": "SAMEORIGIN",
      },
      "urlContextRoot": "/admin",
    },
    "ui.context/api": {
      "_id": "ui.context/api",
      "authEnabled": true,
      "cacheEnabled": false,
      "defaultDir": "&{idm.install.dir}/ui/api/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/api/extension",
      "urlContextRoot": "/api",
    },
    "ui.context/enduser": {
      "_id": "ui.context/enduser",
      "defaultDir": "&{idm.install.dir}/ui/enduser",
      "enabled": true,
      "responseHeaders": {
        "X-Frame-Options": "DENY",
      },
      "urlContextRoot": "/",
    },
    "ui.context/oauth": {
      "_id": "ui.context/oauth",
      "cacheEnabled": true,
      "defaultDir": "&{idm.install.dir}/ui/oauth/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
      "urlContextRoot": "/oauthReturn",
    },
    "ui/configuration": {
      "_id": "ui/configuration",
      "configuration": {
        "defaultNotificationType": "info",
        "forgotUsername": false,
        "lang": "en",
        "notificationTypes": {
          "error": {
            "iconPath": "images/notifications/error.png",
            "name": "common.notification.types.error",
          },
          "info": {
            "iconPath": "images/notifications/info.png",
            "name": "common.notification.types.info",
          },
          "warning": {
            "iconPath": "images/notifications/warning.png",
            "name": "common.notification.types.warning",
          },
        },
        "passwordReset": true,
        "passwordResetLink": "",
        "platformSettings": {
          "adminOauthClient": "idmAdminClient",
          "adminOauthClientScopes": "fr:idm:*",
          "amUrl": "/am",
          "loginUrl": "",
        },
        "roles": {
          "internal/role/openidm-admin": "ui-admin",
          "internal/role/openidm-authorized": "ui-user",
        },
        "selfRegistration": true,
      },
    },
    "ui/dashboard": {
      "_id": "ui/dashboard",
      "adminDashboards": [
        {
          "isDefault": true,
          "name": "Quick Start",
          "widgets": [
            {
              "cards": [
                {
                  "href": "#resource/managed/alpha_user/list/",
                  "icon": "fa-user",
                  "name": "Manage Users",
                },
                {
                  "href": "#resource/managed/alpha_role/list/",
                  "icon": "fa-check-square-o",
                  "name": "Manage Roles",
                },
                {
                  "href": "#connectors/add/",
                  "icon": "fa-database",
                  "name": "Add Connector",
                },
                {
                  "href": "#mapping/add/",
                  "icon": "fa-map-marker",
                  "name": "Create Mapping",
                },
                {
                  "href": "#managed/add/",
                  "icon": "fa-tablet",
                  "name": "Add Device",
                },
                {
                  "href": "#settings/",
                  "icon": "fa-user",
                  "name": "Configure System Preferences",
                },
              ],
              "size": "large",
              "type": "quickStart",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "System Monitoring",
          "widgets": [
            {
              "legendRange": {
                "month": [
                  500,
                  2500,
                  5000,
                ],
                "week": [
                  10,
                  30,
                  90,
                  270,
                  810,
                ],
                "year": [
                  10000,
                  40000,
                  100000,
                  250000,
                ],
              },
              "maxRange": "#24423c",
              "minRange": "#b0d4cd",
              "size": "large",
              "type": "audit",
            },
            {
              "size": "large",
              "type": "clusterStatus",
            },
            {
              "size": "large",
              "type": "systemHealthFull",
            },
            {
              "barchart": "false",
              "size": "large",
              "type": "lastRecon",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Resource Report",
          "widgets": [
            {
              "selected": "activeUsers",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "rolesEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "activeConnectors",
              "size": "x-small",
              "type": "counter",
            },
            {
              "size": "large",
              "type": "resourceList",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Business Report",
          "widgets": [
            {
              "graphType": "fa-pie-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "signIns",
              "widgetTitle": "Sign-Ins",
            },
            {
              "graphType": "fa-bar-chart",
              "size": "x-small",
              "type": "passwordResets",
              "widgetTitle": "Password Resets",
            },
            {
              "graphType": "fa-line-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "newRegistrations",
              "widgetTitle": "New Registrations",
            },
            {
              "size": "x-small",
              "timezone": {
                "hours": "07",
                "minutes": "00",
                "negative": true,
              },
              "type": "socialLogin",
            },
            {
              "selected": "socialEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "manualRegistrations",
              "size": "x-small",
              "type": "counter",
            },
          ],
        },
      ],
      "dashboard": {
        "widgets": [
          {
            "size": "large",
            "type": "Welcome",
          },
        ],
      },
    },
    "ui/profile": {
      "_id": "ui/profile",
      "tabs": [
        {
          "name": "personalInfoTab",
          "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab",
        },
        {
          "name": "signInAndSecurity",
          "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab",
        },
        {
          "name": "preference",
          "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab",
        },
        {
          "name": "trustedDevice",
          "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab",
        },
        {
          "name": "oauthApplication",
          "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab",
        },
        {
          "name": "privacyAndConsent",
          "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab",
        },
        {
          "name": "sharing",
          "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab",
        },
        {
          "name": "auditHistory",
          "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab",
        },
        {
          "name": "accountControls",
          "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab",
        },
      ],
    },
    "ui/themeconfig": {
      "_id": "ui/themeconfig",
      "icon": "favicon.ico",
      "path": "",
      "settings": {
        "footer": {
          "mailto": "info@forgerock.com",
        },
        "loginLogo": {
          "alt": "ForgeRock",
          "height": "104px",
          "src": "images/login-logo-dark.png",
          "title": "ForgeRock",
          "width": "210px",
        },
        "logo": {
          "alt": "ForgeRock",
          "src": "images/logo-horizontal-white.png",
          "title": "ForgeRock",
        },
      },
      "stylesheets": [
        "css/bootstrap-3.4.1-custom.css",
        "css/structure.css",
        "css/theme.css",
      ],
    },
    "ui/themerealm": {
      "_id": "ui/themerealm",
      "realm": {
        "/alpha": [
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
        "alpha": [
          {
            "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "e47838b5-48c9-4dea-8a84-43f4b4ea8e04",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputSelectHoverColor": "#f6f8fa",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountFooterScriptTag": "",
            "accountFooterScriptTagEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "boldLinks": false,
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyA11yAddFallbackErrorHeading": true,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardBorderRadius": 4,
            "journeyCardHeaderBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFloatingLabels": true,
            "journeyFocusElement": "header",
            "journeyFocusFirstFocusableItemEnabled": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyFooterScriptTag": "",
            "journeyFooterScriptTagEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyHeaderSkipLinkEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputSelectHoverColor": "#f6f8fa",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyJustifiedContentMobileViewEnabled": false,
            "journeyLayout": "justified-right",
            "journeyRememberMeEnabled": false,
            "journeyRememberMeLabel": "",
            "journeySignInButtonPosition": "flex-column",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Copy of Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "successColor": "#2ed47a",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "63e19668-909f-479e-83d7-be7a01cd8187",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": true,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "boldLinks": false,
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [
              "FrodoTest",
              "AA-FrodoTest",
            ],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": false,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "NoAccess",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
          {
            "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
        "bravo": [
          {
            "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
        ],
      },
    },
    "uilocale/fr": {
      "_id": "uilocale/fr",
      "admin": {
        "overrides": {
          "AppLogoURI": "URI du logo de l’application",
          "EmailAddress": "Adresse e-mail",
          "Name": "Nom",
          "Owners": "Les propriétaires",
        },
        "sideMenu": {
          "securityQuestions": "Questions de sécurité",
        },
      },
      "enduser": {
        "overrides": {
          "FirstName": "Prénom",
          "LastName": "Nom de famille",
        },
        "pages": {
          "dashboard": {
            "widgets": {
              "welcome": {
                "greeting": "Bonjour",
              },
            },
          },
        },
      },
      "login": {
        "login": {
          "next": "Suivant",
        },
        "overrides": {
          "Password": "Mot de passe",
          "UserName": "Nom d'utilisateur",
        },
      },
      "shared": {
        "sideMenu": {
          "dashboard": "Tableau de bord",
        },
      },
    },
    "undefined": {
      "_id": "undefined",
      "mapping": {
        "mapping/managedBravo_user_managedBravo_user0": {
          "_id": "mapping/managedBravo_user_managedBravo_user0",
          "consentRequired": false,
          "displayName": "managedBravo_user_managedBravo_user0",
          "icon": null,
          "name": "managedBravo_user_managedBravo_user0",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT",
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE",
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS",
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND",
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED",
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY",
            },
            {
              "action": "ASYNC",
              "situation": "MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING",
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED",
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED",
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED",
            },
          ],
          "properties": [],
          "source": "managed/bravo_user",
          "target": "managed/bravo_user",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -i script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4 1`] = `0`;

exports[`frodo idm export "frodo idm export -i script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4 2`] = `""`;

exports[`frodo idm export "frodo idm export -i script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4: testDir4/script.idm.json 1`] = `
{
  "idm": {
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": ".groovy",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{idm.install.dir}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{idm.install.dir}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{idm.install.dir}/bin/defaults/script",
        },
        "install": {
          "directory": "&{idm.install.dir}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -i script -e test/e2e/env/testEnvFile.env -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json 1`] = `0`;

exports[`frodo idm export "frodo idm export -i script -e test/e2e/env/testEnvFile.env -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json 2`] = `""`;

exports[`frodo idm export "frodo idm export -i script -e test/e2e/env/testEnvFile.env -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json: my-script.idm.json 1`] = `
{
  "idm": {
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": "\${groovy}",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{\${installDir}}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{\${installDir}}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{\${installDir}}/bin/defaults/script",
        },
        "install": {
          "directory": "&{\${installDir}}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately 1`] = `0`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately 2`] = `""`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately: sync/AlphaUser2GoogleApps.sync.json 1`] = `
{
  "_id": "sync/AlphaUser2GoogleApps",
  "consentRequired": false,
  "correlationQuery": [
    {
      "expressionTree": {
        "all": [
          "__NAME__",
        ],
      },
      "file": "ui/correlateTreeToQueryFilter.js",
      "linkQualifier": "default",
      "mapping": "AlphaUser2GoogleApps",
      "type": "text/javascript",
    },
  ],
  "displayName": "AlphaUser2GoogleApps",
  "enableSync": {
    "$bool": "&{esv.gac.enable.mapping}",
  },
  "icon": null,
  "name": "AlphaUser2GoogleApps",
  "onCreate": {
    "globals": {},
    "source": "target.orgUnitPath = "/NewAccounts";",
    "type": "text/javascript",
  },
  "onUpdate": {
    "globals": {},
    "source": "//testing1234
target.givenName = oldTarget.givenName;
target.familyName = oldTarget.familyName;
target.__NAME__ = oldTarget.__NAME__;",
    "type": "text/javascript",
  },
  "policies": [
    {
      "action": "EXCEPTION",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "UNLINK",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": {
        "globals": {},
        "source": "// Timing Constants
var ATTEMPT = 6; // Number of attempts to find the Google user.
var SLEEP_TIME = 500; // Milliseconds between retries.
var SYSTEM_ENDPOINT = "system/GoogleApps/__ACCOUNT__";
var MAPPING_NAME = "AlphaUser2GoogleApps";
var GOOGLE_DOMAIN = identityServer.getProperty("esv.gac.domain");
var googleEmail = source.userName + "@" + GOOGLE_DOMAIN;
var frUserGUID = source._id;
var resultingAction = "ASYNC";

// Get the Google GUID
var linkQueryParams = {'_queryFilter': 'firstId eq "' + frUserGUID + '" and linkType eq "' + MAPPING_NAME + '"'};
var linkResults = openidm.query("repo/link/", linkQueryParams, null);
var googleGUID;

if (linkResults.resultCount === 1) {
  googleGUID = linkResults.result[0].secondId;
}

var queryResults; // Resulting query from looking for the Google user.
var params = {'_queryFilter': '__UID__ eq "' + googleGUID + '"'};

for (var i = 1; i <= ATTEMPT; i++) {
    queryResults = openidm.query(SYSTEM_ENDPOINT, params);
    if (queryResults.result && queryResults.result.length > 0) {
        logger.info("idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in " + i + " attempts. Query result: " + JSON.stringify(queryResults));
        resultingAction = "UPDATE";
        break;
    }
    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.
}

if (!queryResults.result || queryResults.resultCount === 0) {
    logger.warn("idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - " + googleEmail + " not found after " + ATTEMPT + " attempts.");
    resultingAction = "UNLINK";
}
resultingAction;
",
        "type": "text/javascript",
      },
      "situation": "MISSING",
    },
    {
      "action": "EXCEPTION",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "IGNORE",
      "situation": "UNQUALIFIED",
    },
    {
      "action": "IGNORE",
      "situation": "UNASSIGNED",
    },
    {
      "action": "UNLINK",
      "situation": "LINK_ONLY",
    },
    {
      "action": "IGNORE",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "IGNORE",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "IGNORE",
      "situation": "ALL_GONE",
    },
    {
      "action": "UPDATE",
      "situation": "CONFIRMED",
    },
    {
      "action": "LINK",
      "situation": "FOUND",
    },
    {
      "action": "CREATE",
      "situation": "ABSENT",
    },
  ],
  "properties": [
    {
      "condition": {
        "globals": {},
        "source": "object.custom_password_encrypted != null",
        "type": "text/javascript",
      },
      "source": "custom_password_encrypted",
      "target": "__PASSWORD__",
      "transform": {
        "globals": {},
        "source": "openidm.decrypt(source);",
        "type": "text/javascript",
      },
    },
    {
      "source": "cn",
      "target": "__NAME__",
      "transform": {
        "globals": {},
        "source": "source + "@" + identityServer.getProperty("esv.gac.domain");",
        "type": "text/javascript",
      },
    },
    {
      "source": "givenName",
      "target": "givenName",
    },
    {
      "source": "",
      "target": "familyName",
      "transform": {
        "globals": {},
        "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {
  source.sn + " (Student)"
} else {
  source.sn
}",
        "type": "text/javascript",
      },
    },
  ],
  "queuedSync": {
    "enabled": true,
    "maxQueueSize": 20000,
    "maxRetries": 5,
    "pageSize": 100,
    "pollingInterval": 1000,
    "postRetryAction": "logged-ignore",
    "retryDelay": 1000,
  },
  "source": "managed/alpha_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
    "managedAlpha_user_managedBravo_user",
    "managedBravo_user_managedAlpha_user",
  ],
  "target": "system/GoogleApps/__ACCOUNT__",
  "validSource": {
    "globals": {},
    "source": "var isGoogleEligible = true;
//var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + " cn: " + source.cn + ") -";
var logMsg = "idmlog: ---AplhaUser2GAC (username: " + source.userName + " - userType: " + source.frIndexedInteger1 + ") -";

//Get Applicable userTypes (no Parent accounts)
if (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {
	isGoogleEligible = false;
	logMsg = logMsg + " Account type not eligible.";
}

//Make sure the account has a valid encrypted password.
if (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {
	isGoogleEligible = false;
	logMsg = logMsg + " No encrypted password yet.";
}

//Check that CN exists and has no space.
if (source.cn && source.cn.includes(' ')) {
	isGoogleEligible = false;
	logMsg = logMsg + " CN with a space is not allowed.";
}

if (!isGoogleEligible) {
	logMsg = logMsg + " Not sent to Google."
	logger.info(logMsg);
} 

if (isGoogleEligible) {
	logMsg = logMsg + " Sent to Google."
	logger.info(logMsg);
}

isGoogleEligible;
",
    "type": "text/javascript",
  },
}
`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately: sync/managedAlpha_application_managedBravo_application.sync.json 1`] = `
{
  "_id": "sync/managedAlpha_application_managedBravo_application",
  "consentRequired": true,
  "displayName": "Test Application Mapping",
  "icon": null,
  "name": "managedAlpha_application_managedBravo_application",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [
    {
      "source": "authoritative",
      "target": "_id",
    },
  ],
  "source": "managed/alpha_application",
  "sourceQuery": {
    "_queryFilter": "(eq "" or eq "")",
  },
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
  ],
  "target": "managed/bravo_application",
  "targetQuery": {
    "_queryFilter": "!(eq "")",
  },
}
`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately: sync/managedAlpha_user_managedBravo_user.sync.json 1`] = `
{
  "_id": "sync/managedAlpha_user_managedBravo_user",
  "consentRequired": true,
  "displayName": "Test Mapping for Frodo",
  "icon": null,
  "name": "managedAlpha_user_managedBravo_user",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [
    {
      "condition": {
        "globals": {},
        "source": "console.log("Hello World!");",
        "type": "text/javascript",
      },
      "default": [
        "Default value string",
      ],
      "source": "accountStatus",
      "target": "applications",
      "transform": {
        "globals": {},
        "source": "console.log("hello");",
        "type": "text/javascript",
      },
    },
  ],
  "source": "managed/alpha_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
  ],
  "target": "managed/bravo_user",
}
`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately: sync/managedBravo_user_managedAlpha_user.sync.json 1`] = `
{
  "_id": "sync/managedBravo_user_managedAlpha_user",
  "consentRequired": false,
  "displayName": "Frodo test mapping",
  "icon": null,
  "name": "managedBravo_user_managedAlpha_user",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [
    "managedBravo_user_managedBravo_user",
    "managedAlpha_application_managedBravo_application",
    "managedAlpha_user_managedBravo_user",
  ],
  "target": "managed/alpha_user",
}
`;

exports[`frodo idm export "frodo idm export -si sync": should export the idm config entity with idm id "sync" separately: sync/managedBravo_user_managedBravo_user.sync.json 1`] = `
{
  "_id": "sync/managedBravo_user_managedBravo_user",
  "consentRequired": false,
  "displayName": "managedBravo_user_managedBravo_user",
  "icon": null,
  "name": "managedBravo_user_managedBravo_user",
  "policies": [
    {
      "action": "ASYNC",
      "situation": "ABSENT",
    },
    {
      "action": "ASYNC",
      "situation": "ALL_GONE",
    },
    {
      "action": "ASYNC",
      "situation": "AMBIGUOUS",
    },
    {
      "action": "ASYNC",
      "situation": "CONFIRMED",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND",
    },
    {
      "action": "ASYNC",
      "situation": "FOUND_ALREADY_LINKED",
    },
    {
      "action": "ASYNC",
      "situation": "LINK_ONLY",
    },
    {
      "action": "ASYNC",
      "situation": "MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "SOURCE_MISSING",
    },
    {
      "action": "ASYNC",
      "situation": "TARGET_IGNORED",
    },
    {
      "action": "ASYNC",
      "situation": "UNASSIGNED",
    },
    {
      "action": "ASYNC",
      "situation": "UNQUALIFIED",
    },
  ],
  "properties": [],
  "source": "managed/bravo_user",
  "syncAfter": [],
  "target": "managed/bravo_user",
}
`;
