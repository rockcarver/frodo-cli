// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo idm export "frodo idm export --all-separate --directory testDir3 --entities-file test/e2e/env/testEntityFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files 1`] = `""`;

exports[`frodo idm export "frodo idm export --all-separate --directory testDir3 --entities-file test/e2e/env/testEntityFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/repo.ds.json 1`] = `
{
  "_id": "repo.ds",
  "commands": {
    "delete-mapping-links": {
      "_queryFilter": "/linkType eq "\${mapping}"",
      "operation": "DELETE",
    },
    "delete-target-ids-for-recon": {
      "_queryFilter": "/reconId eq "\${reconId}"",
      "operation": "DELETE",
    },
  },
  "embedded": false,
  "ldapConnectionFactories": {
    "bind": {
      "availabilityCheckIntervalSeconds": 30,
      "availabilityCheckTimeoutMilliSeconds": 10000,
      "connectionPoolSize": 50,
      "connectionSecurity": "none",
      "heartBeatIntervalSeconds": 60,
      "heartBeatTimeoutMilliSeconds": 10000,
      "primaryLdapServers": [
        {
          "hostname": "userstore-0.userstore",
          "port": 1389,
        },
      ],
      "secondaryLdapServers": [
        {
          "hostname": "userstore-2.userstore",
          "port": 1389,
        },
      ],
    },
    "root": {
      "authentication": {
        "simple": {
          "bindDn": "\${admin}",
          "bindPassword": "&{userstore.password}",
        },
      },
      "inheritFrom": "bind",
    },
  },
  "maxConnectionAttempts": 5,
  "queries": {
    "explicit": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
    },
    "generic": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "get-by-field-value": {
        "_queryFilter": "/\${field} eq "\${value}"",
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq "\${userId}"",
        "_sortKeys": "-createDate",
      },
      "get-recons": {
        "_fields": "reconId,mapping,activitydate",
        "_queryFilter": "/entryType eq "summary"",
        "_sortKeys": "-activitydate",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq "\${instanceId}"",
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
      },
      "query-cluster-instances": {
        "_queryFilter": "true",
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1",
      },
    },
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
    },
    "explicitMapping": {
      "clusteredrecontargetids": {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-recon-clusteredTargetIds",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-recon-id",
            "type": "simple",
          },
          "targetIds": {
            "ldapAttribute": "fr-idm-recon-targetIds",
            "type": "json",
          },
        },
      },
      "dsconfig/attributeValue": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-attribute-value-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "matchAttribute": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-match-attribute",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/characterSet": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-character-set-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowUnclassifiedCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-allow-unclassified-characters",
            "type": "simple",
          },
          "characterSet": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-character-set",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minCharacterSets": {
            "ldapAttribute": "ds-cfg-min-character-sets",
            "type": "simple",
          },
        },
      },
      "dsconfig/dictionary": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-dictionary-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "dictionaryFile": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-dictionary-file",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/lengthBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-length-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxPasswordLength": {
            "ldapAttribute": "ds-cfg-max-password-length",
            "type": "simple",
          },
          "minPasswordLength": {
            "ldapAttribute": "ds-cfg-min-password-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/passwordPolicies": {
        "dnTemplate": "cn=Password Policies,cn=config",
        "objectClasses": [
          "ds-cfg-password-policy",
          "ds-cfg-authentication-policy",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowPreEncodedPasswords": {
            "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
            "type": "simple",
          },
          "defaultPasswordStorageScheme": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-default-password-storage-scheme",
            "type": "simple",
          },
          "deprecatedPasswordStorageScheme": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
            "type": "simple",
          },
          "maxPasswordAge": {
            "ldapAttribute": "ds-cfg-max-password-age",
            "type": "simple",
          },
          "passwordAttribute": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-password-attribute",
            "type": "simple",
          },
          "passwordHistoryCount": {
            "ldapAttribute": "ds-cfg-password-history-count",
            "type": "simple",
          },
          "validator": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-password-validator",
            "type": "simple",
          },
        },
      },
      "dsconfig/repeatedCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-repeated-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxConsecutiveLength": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-max-consecutive-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/similarityBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-similarity-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minPasswordDifference": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-password-difference",
            "type": "simple",
          },
        },
      },
      "dsconfig/uniqueCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-unique-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minUniqueCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-unique-characters",
            "type": "simple",
          },
        },
      },
      "dsconfig/userDefinedVirtualAttribute": {
        "dnTemplate": "cn=Virtual Attributes,cn=config",
        "objectClasses": [
          "ds-cfg-user-defined-virtual-attribute",
          "ds-cfg-virtual-attribute",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "attributeType": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-attribute-type",
            "type": "simple",
          },
          "baseDn": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-base-dn",
            "type": "simple",
          },
          "conflictBehavior": {
            "ldapAttribute": "ds-cfg-conflict-behavior",
            "type": "simple",
          },
          "enabled": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "filter": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-filter",
            "type": "simple",
          },
          "groupDn": {
            "ldapAttribute": "ds-cfg-group-dn",
            "type": "simple",
          },
          "javaClass": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "scope": {
            "ldapAttribute": "ds-cfg-scope",
            "type": "simple",
          },
          "value": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-value",
            "type": "simple",
          },
        },
      },
      "identities/admin": {
        "dnTemplate": "o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/alpha": {
        "dnTemplate": "o=alpha,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/bravo": {
        "dnTemplate": "o=bravo,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "fr-idm-internal-role",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "authzMembers": {
            "isMultiValued": true,
            "propertyName": "authzRoles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "condition": {
            "ldapAttribute": "fr-idm-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "name": {
            "ldapAttribute": "fr-idm-name",
            "type": "simple",
          },
          "privileges": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-privilege",
            "type": "json",
          },
          "temporalConstraints": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-temporal-constraints",
            "type": "json",
          },
        },
      },
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-internal-user",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "password": {
            "ldapAttribute": "fr-idm-password",
            "type": "json",
          },
        },
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-link",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "firstId": {
            "ldapAttribute": "fr-idm-link-firstId",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-link-qualifier",
            "type": "simple",
          },
          "linkType": {
            "ldapAttribute": "fr-idm-link-type",
            "type": "simple",
          },
          "secondId": {
            "ldapAttribute": "fr-idm-link-secondId",
            "type": "simple",
          },
        },
      },
      "locks": {
        "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-lock",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-lock-nodeid",
            "type": "simple",
          },
        },
      },
      "managed/teammember": {
        "dnTemplate": "ou=people,o=root,ou=identities",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "fraas-admin",
          "iplanet-am-user-service",
          "deviceProfilesContainer",
          "devicePrintProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/teammembermeta",
            "type": "reference",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "inviteDate": {
            "ldapAttribute": "fr-idm-inviteDate",
            "type": "simple",
          },
          "jurisdiction": {
            "ldapAttribute": "fr-idm-jurisdiction",
            "type": "simple",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "onboardDate": {
            "ldapAttribute": "fr-idm-onboardDate",
            "type": "simple",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/teammembergroup": {
        "dnTemplate": "ou=groups,o=root,ou=identities",
        "objectClasses": [
          "groupofuniquenames",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "ldapAttribute": "uniqueMember",
            "type": "simple",
          },
        },
      },
      "recon/assoc": {
        "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
        "namingStrategy": {
          "dnAttribute": "fr-idm-reconassoc-reconid",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "fr-idm-reconassoc",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "fr-idm-reconassoc-reconid",
            "type": "simple",
          },
          "finishTime": {
            "ldapAttribute": "fr-idm-reconassoc-finishtime",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "subResources": {
          "entry": {
            "namingStrategy": {
              "dnAttribute": "uid",
              "type": "clientDnNaming",
            },
            "resource": "recon-assoc-entry",
            "type": "collection",
          },
        },
      },
      "recon/assoc/entry": {
        "objectClasses": [
          "uidObject",
          "fr-idm-reconassocentry",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "action": {
            "ldapAttribute": "fr-idm-reconassocentry-action",
            "type": "simple",
          },
          "ambiguousTargetObjectIds": {
            "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
            "type": "simple",
          },
          "exception": {
            "ldapAttribute": "fr-idm-reconassocentry-exception",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "message": {
            "ldapAttribute": "fr-idm-reconassocentry-message",
            "type": "simple",
          },
          "messageDetail": {
            "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
            "type": "simple",
          },
          "phase": {
            "ldapAttribute": "fr-idm-reconassocentry-phase",
            "type": "simple",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-reconassocentry-reconid",
            "type": "simple",
          },
          "situation": {
            "ldapAttribute": "fr-idm-reconassocentry-situation",
            "type": "simple",
          },
          "sourceObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "status": {
            "ldapAttribute": "fr-idm-reconassocentry-status",
            "type": "simple",
          },
          "targetObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "resourceName": "recon-assoc-entry",
        "subResourceRouting": [
          {
            "prefix": "entry",
            "template": "recon/assoc/{reconId}/entry",
          },
        ],
      },
      "sync/queue": {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-syncqueue",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "context": {
            "ldapAttribute": "fr-idm-syncqueue-context",
            "type": "json",
          },
          "createDate": {
            "ldapAttribute": "fr-idm-syncqueue-createdate",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-syncqueue-mapping",
            "type": "simple",
          },
          "newObject": {
            "ldapAttribute": "fr-idm-syncqueue-newobject",
            "type": "json",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-syncqueue-nodeid",
            "type": "simple",
          },
          "objectRev": {
            "ldapAttribute": "fr-idm-syncqueue-objectRev",
            "type": "simple",
          },
          "oldObject": {
            "ldapAttribute": "fr-idm-syncqueue-oldobject",
            "type": "json",
          },
          "remainingRetries": {
            "ldapAttribute": "fr-idm-syncqueue-remainingretries",
            "type": "simple",
          },
          "resourceCollection": {
            "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
            "type": "simple",
          },
          "resourceId": {
            "ldapAttribute": "fr-idm-syncqueue-resourceid",
            "type": "simple",
          },
          "state": {
            "ldapAttribute": "fr-idm-syncqueue-state",
            "type": "simple",
          },
          "syncAction": {
            "ldapAttribute": "fr-idm-syncqueue-syncaction",
            "type": "simple",
          },
        },
      },
    },
    "genericMapping": {
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
        "objectClasses": [
          "uidObject",
          "fr-idm-cluster-obj",
        ],
      },
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
      },
      "file": {
        "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
      },
      "internal/notification": {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-notification-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-notification",
        ],
        "properties": {
          "target": {
            "propertyName": "_notifications",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "internal/usermeta": {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "jsonstorage": {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
      },
      "managed/alpha_group": {
        "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_organization": {
        "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/alpha_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
        },
      },
      "managed/alpha_role": {
        "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_user": {
        "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/alpha_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/alpha_usermeta": {
        "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_group": {
        "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_organization": {
        "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/bravo_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
        },
      },
      "managed/bravo_role": {
        "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_user": {
        "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/bravo_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/bravo_usermeta": {
        "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/teammembermeta": {
        "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/teammember",
            "type": "reverseReference",
          },
        },
      },
      "reconprogressstate": {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
        "objectClasses": [
          "uidObject",
          "fr-idm-relationship",
        ],
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "ui/*": {
        "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
      },
    },
  },
  "rest2LdapOptions": {
    "mvccAttribute": "etag",
    "readOnUpdatePolicy": "controls",
    "returnNullForMissingProperties": true,
    "useMvcc": true,
    "usePermissiveModify": true,
    "useSubtreeDelete": true,
  },
  "security": {
    "keyManager": "jvm",
    "trustManager": "jvm",
  },
}
`;

exports[`frodo idm export "frodo idm export --all-separate --directory testDir3 --entities-file test/e2e/env/testEntityFile.json --env-file test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir3/script.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": "\${groovy}",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{\${installDir}}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{\${installDir}}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{\${installDir}}/bin/defaults/script",
    },
    "install": {
      "directory": "&{\${installDir}}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export --name script": should export the idm config entity with idm id "script" 1`] = `""`;

exports[`frodo idm export "frodo idm export --name script": should export the idm config entity with idm id "script": script.idm.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory 1`] = `""`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/access.json 1`] = `
{
  "_id": "access",
  "configs": [
    {
      "actions": "*",
      "methods": "read",
      "pattern": "info/*",
      "roles": "*",
    },
    {
      "actions": "login,logout",
      "methods": "read,action",
      "pattern": "authentication",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/fidc/*",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "*",
      "pattern": "config/fidc/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/themeconfig",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/themerealm",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/uilocale/*",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/fieldPolicy/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "info/uiconfig",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/dashboard",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "query",
      "pattern": "info/features",
      "roles": "*",
    },
    {
      "actions": "listPrivileges",
      "methods": "action",
      "pattern": "privilege",
      "roles": "*",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "privilege/*",
      "roles": "*",
    },
    {
      "actions": "validate",
      "methods": "action",
      "pattern": "util/validateQueryFilter",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "checkIfAnyFeatureEnabled('kba')",
      "methods": "read",
      "pattern": "selfservice/kba",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "schema/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "action,query",
      "pattern": "consent",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "excludePatterns": "repo,repo/*,file/iwa/*",
      "methods": "*",
      "pattern": "*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "",
      "methods": "create,read,update,delete,patch,query",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "methods": "script",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
      "methods": "action",
      "pattern": "system/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "customAuthz": "disallowCommandAction()",
      "methods": "*",
      "pattern": "repo",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "*",
      "customAuthz": "disallowCommandAction()",
      "methods": "*",
      "pattern": "repo/*",
      "roles": "internal/role/openidm-admin",
    },
    {
      "actions": "command",
      "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
      "methods": "action",
      "pattern": "repo/link",
      "roles": "internal/role/openidm-admin",
    },
    {
      "methods": "create,read,query,patch",
      "pattern": "managed/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read,query",
      "pattern": "internal/role/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "create,read,action,update",
      "pattern": "profile/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "read,action",
      "pattern": "policy/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "schema/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "action,query",
      "pattern": "consent",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "selfservice/kba",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "selfservice/terms",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "methods": "read",
      "pattern": "identityProviders",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "sendTemplate",
      "methods": "action",
      "pattern": "external/email",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "authenticate",
      "methods": "action",
      "pattern": "system/*",
      "roles": "internal/role/platform-provisioning",
    },
    {
      "actions": "*",
      "methods": "read,action",
      "pattern": "policy/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "config/ui/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "bind,unbind",
      "customAuthz": "ownDataOnly()",
      "methods": "read,action,delete",
      "pattern": "*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
      "methods": "update,patch,action",
      "pattern": "*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
      "methods": "patch,action",
      "pattern": "selfservice/user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "read",
      "pattern": "endpoint/getprocessesforuser",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "methods": "query",
      "pattern": "endpoint/gettasksview",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "complete",
      "customAuthz": "isMyTask()",
      "methods": "action",
      "pattern": "workflow/taskinstance/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "canUpdateTask()",
      "methods": "read,update",
      "pattern": "workflow/taskinstance/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "isAllowedToStartProcess()",
      "methods": "create",
      "pattern": "workflow/processinstance",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "read",
      "customAuthz": "isOneOfMyWorkflows()",
      "methods": "*",
      "pattern": "workflow/processdefinition/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
      "methods": "patch,action",
      "pattern": "managed/user",
      "roles": "internal/role/openidm-cert",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationship()",
      "methods": "read",
      "pattern": "internal/usermeta/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationship()",
      "methods": "read,delete",
      "pattern": "internal/notification/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "",
      "customAuthz": "ownDataOnly()",
      "methods": "read,delete",
      "pattern": "managed/alpha_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
      "methods": "update,patch,action",
      "pattern": "managed/alpha_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/alpha_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "",
      "customAuthz": "ownDataOnly()",
      "methods": "read,delete",
      "pattern": "managed/bravo_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "patch",
      "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
      "methods": "update,patch,action",
      "pattern": "managed/bravo_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "*",
      "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
      "methods": "read,query",
      "pattern": "managed/bravo_user/*",
      "roles": "internal/role/openidm-authorized",
    },
    {
      "actions": "deleteNotificationsForTarget",
      "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
      "methods": "action",
      "pattern": "notification",
      "roles": "internal/role/openidm-authorized",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/alphaOrgPrivileges.json 1`] = `
{
  "_id": "alphaOrgPrivileges",
  "privileges": [
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
      "name": "owner-view-update-delete-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "owner-create-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "owner-view-update-delete-admins-and-members",
      "path": "managed/alpha_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
      "name": "owner-create-admins",
      "path": "managed/alpha_user",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
      "name": "admin-view-update-delete-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "admin-create-orgs",
      "path": "managed/alpha_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "admin-view-update-delete-members",
      "path": "managed/alpha_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
      "name": "admin-create-members",
      "path": "managed/alpha_user",
      "permissions": [
        "CREATE",
      ],
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/apiVersion.json 1`] = `
{
  "_id": "apiVersion",
  "warning": {
    "enabled": {
      "$bool": "&{openidm.apiVersion.warning.enabled|false}",
    },
    "includeScripts": {
      "$bool": "&{openidm.apiVersion.warning.includeScripts|false}",
    },
    "logFilterResourcePaths": [
      "audit",
      "authentication",
      "cluster",
      "config",
      "consent",
      "csv",
      "external/rest",
      "identityProviders",
      "info",
      "internal",
      "internal/role",
      "internal/user",
      "internal/usermeta",
      "managed",
      "managed/assignment",
      "managed/organization",
      "managed/role",
      "managed/user",
      "notification",
      "policy",
      "privilege",
      "profile",
      "recon",
      "recon/assoc",
      "repo",
      "selfservice/kba",
      "selfservice/terms",
      "scheduler/job",
      "scheduler/trigger",
      "schema",
      "sync",
      "sync/mappings",
      "system",
      "taskscanner",
    ],
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/audit.json 1`] = `
{
  "_id": "audit",
  "auditServiceConfig": {
    "availableAuditEventHandlers": [
      "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
      "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
      "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
      "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
      "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
      "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
      "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
      "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
      "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler",
    ],
    "caseInsensitiveFields": [
      "/access/http/request/headers",
      "/access/http/response/headers",
    ],
    "filterPolicies": {
      "value": {
        "excludeIf": [
          "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
          "/access/http/request/cookies/session-jwt",
          "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
          "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
          "/access/http/request/headers/accept-encoding",
          "/access/http/request/headers/accept-language",
          "/access/http/request/headers/Authorization",
          "/access/http/request/headers/cache-control",
          "/access/http/request/headers/connection",
          "/access/http/request/headers/content-length",
          "/access/http/request/headers/content-type",
          "/access/http/request/headers/proxy-authorization",
          "/access/http/request/headers/X-OpenAM-Password",
          "/access/http/request/headers/X-OpenIDM-Password",
          "/access/http/request/queryParameters/access_token",
          "/access/http/request/queryParameters/IDToken1",
          "/access/http/request/queryParameters/id_token_hint",
          "/access/http/request/queryParameters/Login.Token1",
          "/access/http/request/queryParameters/redirect_uri",
          "/access/http/request/queryParameters/requester",
          "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
          "/access/http/request/queryParameters/tokenId",
          "/access/http/response/headers/Authorization",
          "/access/http/response/headers/Set-Cookie",
          "/access/http/response/headers/X-OpenIDM-Password",
        ],
        "includeIf": [],
      },
    },
    "handlerForQueries": "json",
  },
  "eventHandlers": [
    {
      "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
      "config": {
        "name": "json",
        "topics": [
          "access",
          "activity",
          "sync",
          "authentication",
          "config",
        ],
      },
    },
    {
      "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
      "config": {
        "enabled": false,
        "name": "repo",
        "topics": [
          "access",
          "activity",
          "sync",
          "authentication",
          "config",
        ],
      },
    },
  ],
  "eventTopics": {
    "activity": {
      "filter": {
        "actions": [
          "create",
          "update",
          "delete",
          "patch",
          "action",
        ],
      },
      "passwordFields": [
        "password",
      ],
      "watchedFields": [],
    },
    "config": {
      "filter": {
        "actions": [
          "create",
          "update",
          "delete",
          "patch",
          "action",
        ],
      },
    },
  },
  "exceptionFormatter": {
    "file": "bin/defaults/script/audit/stacktraceFormatter.js",
    "type": "text/javascript",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/auth.profile.json 1`] = `
{
  "_id": "auth.profile",
  "authenticationRole": "internal/role/openidm-authenticated",
  "authorizationRole": "internal/role/openidm-authorized",
  "profileEnhancementProcesses": [
    "selfservice/termsAndConditions",
    "selfservice/kbaUpdate",
    "selfservice/profile",
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/authentication.json 1`] = `
{
  "_id": "authentication",
  "rsFilter": {
    "anonymousUserMapping": {
      "localUser": "internal/user/anonymous",
      "roles": [
        "internal/role/openidm-reg",
      ],
      "userRoles": "authzRoles/*",
    },
    "augmentSecurityContext": {
      "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
      "type": "text/javascript",
    },
    "cache": {
      "maxTimeout": "300 seconds",
    },
    "clientId": "&{rsfilter.resource.server.client.id}",
    "clientSecret": "&{rsfilter.resource.server.secret}",
    "scopes": [
      "fr:idm:*",
    ],
    "staticUserMapping": [
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "amadmin",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/idm-provisioning",
        "roles": [
          "internal/role/platform-provisioning",
        ],
        "subject": "idm-provisioning",
      },
      {
        "localUser": "internal/user/idm-provisioning",
        "subject": "RCSClient",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "23281ea7-739b-4fd1-b953-eaae73a2b497",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "86fca6d7-2f52-4524-92c6-b6f416071455",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "d4c3ecbc-4b03-4ad5-b32f-464bda442e3f",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/openidm-admin",
        "roles": [
          "internal/role/openidm-authorized",
          "internal/role/openidm-admin",
        ],
        "subject": "49a2981c-e192-4739-a0e6-c7582168bdf5",
        "userRoles": "authzRoles/*",
      },
      {
        "localUser": "internal/user/idm-provisioning",
        "roles": [
          "internal/role/openidm-admin",
        ],
        "subject": "autoid-resource-server",
      },
    ],
    "subjectMapping": [
      {
        "defaultRoles": [
          "internal/role/openidm-authorized",
        ],
        "propertyMapping": {
          "sub": "_id",
        },
        "queryOnResource": "managed/teammember",
        "realm": "/",
        "userRoles": "authzRoles/*",
      },
      {
        "additionalUserFields": [
          "adminOfOrg",
          "ownerOfOrg",
        ],
        "defaultRoles": [
          "internal/role/openidm-authorized",
        ],
        "propertyMapping": {
          "sub": "_id",
        },
        "queryOnResource": "managed/{{substring realm 1}}_user",
        "userRoles": "authzRoles/*",
      },
    ],
    "tokenIntrospectUrl": "http://am.fr-platform/am/oauth2/introspect",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/bravoOrgPrivileges.json 1`] = `
{
  "_id": "bravoOrgPrivileges",
  "privileges": [
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
      "name": "owner-view-update-delete-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "owner-create-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "owner-view-update-delete-admins-and-members",
      "path": "managed/bravo_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
      "name": "owner-create-admins",
      "path": "managed/bravo_user",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
      "name": "admin-view-update-delete-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "admin-create-orgs",
      "path": "managed/bravo_organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "admin-view-update-delete-members",
      "path": "managed/bravo_user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
        {
          "attribute": "groups",
          "readOnly": false,
        },
        {
          "attribute": "effectiveGroups",
          "readOnly": false,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
      "name": "admin-create-members",
      "path": "managed/bravo_user",
      "permissions": [
        "CREATE",
      ],
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/cluster.json 1`] = `
{
  "_id": "cluster",
  "enabled": true,
  "instanceCheckInInterval": 5000,
  "instanceCheckInOffset": 0,
  "instanceId": "&{openidm.node.id}",
  "instanceRecoveryTimeout": 30000,
  "instanceTimeout": 30000,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/forgottenUsername.json 1`] = `
{
  "_id": "emailTemplate/forgottenUsername",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "html": {
    "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href="{{object.resumeURI}}">Click here to login</a></p></body></html>",
    "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}">Cliquez ici pour vous connecter</a></p></body></html>",
  },
  "message": {
    "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Click here to login</a></p></div></body></html>",
    "fr": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Cliquez ici pour vous connecter</a></p></div></body></html>",
  },
  "mimeType": "text/html",
  "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
  "subject": {
    "en": "Account Information - username",
    "fr": "Informations sur le compte - nom d'utilisateur",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frEmailUpdated.json 1`] = `
{
  "_id": "emailTemplate/frEmailUpdated",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account email has changed</h1></div><p>Your ForgeRock Identity Cloud email has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Your email has been updated",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frForgotUsername.json 1`] = `
{
  "_id": "emailTemplate/frForgotUsername",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="height:50px;margin-bottom:16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Forgot your username?</h1></div><p>Your username is <b>{{ object.userName }}</b>.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Sign In to Your Account</a></p><p>If you didn't request this, please ignore this email.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Forgot Username",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frOnboarding.json 1`] = `
{
  "_id": "emailTemplate/frOnboarding",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account is ready</h1></div><p>Your ForgeRock Identity Cloud account is ready. Click the button below to complete registration and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Complete Registration</a></p><p>If you did not request this account, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Complete your ForgeRock Identity Cloud registration",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frPasswordUpdated.json 1`] = `
{
  "_id": "emailTemplate/frPasswordUpdated",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account password has changed</h1></div><p>Your ForgeRock Identity Cloud password has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Your password has been updated",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frProfileUpdated.json 1`] = `
{
  "_id": "emailTemplate/frProfileUpdated",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account profile has changed</h1></div><p>Your ForgeRock Identity Cloud profile has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Your profile has been updated",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frResetPassword.json 1`] = `
{
  "_id": "emailTemplate/frResetPassword",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Reset your password</h1></div><p>It seems you have forgotten the password for your ForgeRock Identity Cloud account. Click the button below to reset your password and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Reset Password</a></p><p>If you did not request to reset your password, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Reset your password",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/frUsernameUpdated.json 1`] = `
{
  "_id": "emailTemplate/frUsernameUpdated",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account username has changed</h1></div><p>Your ForgeRock Identity Cloud username has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Your username has been updated",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/registration.json 1`] = `
{
  "_id": "emailTemplate/registration",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "html": {
    "en": "<html><body><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}">Email verification link</a></p></body></html>",
    "fr": "<html><body><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}">Lien de vérification email</a></p></body></html>",
  },
  "message": {
    "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>This is your registration email.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Email verification link</a></p></div></body></html>",
    "fr": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3>Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Lien de vérification email</a></p></div></body></html>",
  },
  "mimeType": "text/html",
  "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
  "subject": {
    "en": "Register new account",
    "fr": "Créer un nouveau compte",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/resetPassword.json 1`] = `
{
  "_id": "emailTemplate/resetPassword",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "message": {
    "en": "<h3>Click to reset your password</h3><h4><a href="{{object.resumeURI}}">Password reset link</a></h4>",
    "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href="{{object.resumeURI}}">Mot de passe lien de réinitialisation</a></h4>",
  },
  "mimeType": "text/html",
  "subject": {
    "en": "Reset your password",
    "fr": "Réinitialisez votre mot de passe",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/updatePassword.json 1`] = `
{
  "_id": "emailTemplate/updatePassword",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "html": {
    "en": "<h3>Verify email to update password</h3><p><a href="{{object.resumeURI}}">Update password link</a></p>",
  },
  "message": {
    "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="verifyemailtoupdatepassword">Verify email to update password</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Update password link</a></p></div></body></html>",
  },
  "mimeType": "text/html",
  "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
  "subject": {
    "en": "Update your password",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/emailTemplate/welcome.json 1`] = `
{
  "_id": "emailTemplate/welcome",
  "defaultLocale": "en",
  "enabled": true,
  "from": "",
  "html": {
    "en": "<html><body><p>Welcome. Your username is '{{object.userName}}'.</p></body></html>",
  },
  "message": {
    "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>",
  },
  "mimeType": "text/html",
  "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
  "subject": {
    "en": "Your account has been created",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/KaTest2.json 1`] = `
{
  "_id": "endpoint/KaTest2",
  "context": "endpoint/KaTest2",
  "description": "Kates Test",
  "globalsObject": "" {\\n \\"request\\": {\\n \\"method\\": \\"create\\"\\n }\\n }"",
  "source": "var response = {
 "message": "Bye, Kate"
}; 
response;",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/getavailableuserstoassign.json 1`] = `
{
  "_id": "endpoint/getavailableuserstoassign",
  "file": "workflow/getavailableuserstoassign.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/getprocessesforuser.json 1`] = `
{
  "_id": "endpoint/getprocessesforuser",
  "file": "workflow/getprocessesforuser.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/gettasksview.json 1`] = `
{
  "_id": "endpoint/gettasksview",
  "file": "workflow/gettasksview.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/mappingDetails.json 1`] = `
{
  "_id": "endpoint/mappingDetails",
  "context": "endpoint/mappingDetails",
  "file": "mappingDetails.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/oauthproxy.json 1`] = `
{
  "_id": "endpoint/oauthproxy",
  "context": "endpoint/oauthproxy",
  "file": "oauthProxy.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/removeRepoPathFromRelationships.json 1`] = `
{
  "_id": "endpoint/removeRepoPathFromRelationships",
  "file": "update/removeRepoPathFromRelationships.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/repairMetadata.json 1`] = `
{
  "_id": "endpoint/repairMetadata",
  "file": "meta/metadataScanner.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/updateInternalUserAndInternalRoleEntries.json 1`] = `
{
  "_id": "endpoint/updateInternalUserAndInternalRoleEntries",
  "file": "update/updateInternalUserAndInternalRoleEntries.js",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/endpoint/validateQueryFilter.json 1`] = `
{
  "_id": "endpoint/validateQueryFilter",
  "context": "util/validateQueryFilter",
  "source": "try { org.forgerock.json.resource.QueryFilters.parse(request.content._queryFilter).accept(new org.forgerock.util.query.MapFilterVisitor(), null); } catch (e) { throw { 'code' : 400, 'message' : e.message } };",
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.email.json 1`] = `
{
  "_id": "external.email",
  "auth": {
    "enable": true,
    "password": "&{sendgrid.api.key}",
    "username": "apikey",
  },
  "connectiontimeout": 300000,
  "debug": false,
  "from": "&{email.sender.address}",
  "host": "smtp.sendgrid.net",
  "port": 587,
  "smtpProperties": [],
  "ssl": {
    "enable": false,
  },
  "starttls": {
    "enable": true,
  },
  "threadPoolSize": 20,
  "timeout": 300000,
  "writetimeout": 300000,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.emailDefault.json 1`] = `
{
  "_id": "external.emailDefault",
  "auth": {
    "enable": true,
    "password": "&{sendgrid.api.key}",
    "username": "apikey",
  },
  "connectiontimeout": 300000,
  "debug": false,
  "from": "&{email.sender.address}",
  "host": "smtp.sendgrid.net",
  "port": 587,
  "smtpProperties": [],
  "ssl": {
    "enable": false,
  },
  "starttls": {
    "enable": true,
  },
  "threadPoolSize": 20,
  "timeout": 300000,
  "writetimeout": 300000,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/external.rest.json 1`] = `
{
  "_id": "external.rest",
  "hostnameVerifier": "&{openidm.external.rest.hostnameVerifier}",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/felix.webconsole.json 1`] = `
{
  "_id": "felix.webconsole",
  "password": "&{openidm.felix.webconsole.password|admin}",
  "username": "&{openidm.felix.webconsole.username|admin}",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/fieldPolicy/alpha_user.json 1`] = `
{
  "_id": "fieldPolicy/alpha_user",
  "defaultPasswordStorageScheme": [
    {
      "_id": "PBKDF2-HMAC-SHA256",
    },
  ],
  "passwordAttribute": "password",
  "resourceCollection": "managed/alpha_user",
  "type": "password-policy",
  "validator": [
    {
      "_id": "alpha_userPasswordPolicy-length-based-password-validator",
      "enabled": true,
      "maxPasswordLength": 0,
      "minPasswordLength": 8,
      "type": "length-based",
    },
    {
      "_id": "alpha_userPasswordPolicy-attribute-value-password-validator",
      "checkSubstrings": true,
      "enabled": true,
      "matchAttribute": [
        "mail",
        "userName",
        "givenName",
        "sn",
      ],
      "minSubstringLength": 5,
      "testReversedPassword": true,
      "type": "attribute-value",
    },
    {
      "_id": "alpha_userPasswordPolicy-character-set-password-validator",
      "allowUnclassifiedCharacters": true,
      "characterSet": [
        "1:abcdefghijklmnopqrstuvwxyz",
        "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        "1:0123456789",
        "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
      ],
      "enabled": true,
      "type": "character-set",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/fieldPolicy/bravo_user.json 1`] = `
{
  "_id": "fieldPolicy/bravo_user",
  "defaultPasswordStorageScheme": [
    {
      "_id": "PBKDF2-HMAC-SHA256",
    },
  ],
  "passwordAttribute": "password",
  "resourceCollection": "managed/bravo_user",
  "type": "password-policy",
  "validator": [
    {
      "_id": "bravo_userPasswordPolicy-length-based-password-validator",
      "enabled": true,
      "maxPasswordLength": 0,
      "minPasswordLength": 8,
      "type": "length-based",
    },
    {
      "_id": "bravo_userPasswordPolicy-attribute-value-password-validator",
      "checkSubstrings": true,
      "enabled": true,
      "matchAttribute": [
        "mail",
        "userName",
        "givenName",
        "sn",
      ],
      "minSubstringLength": 5,
      "testReversedPassword": true,
      "type": "attribute-value",
    },
    {
      "_id": "bravo_userPasswordPolicy-character-set-password-validator",
      "allowUnclassifiedCharacters": true,
      "characterSet": [
        "1:abcdefghijklmnopqrstuvwxyz",
        "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        "1:0123456789",
        "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
      ],
      "enabled": true,
      "type": "character-set",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/identityProviders.json 1`] = `
{
  "_id": "identityProviders",
  "providers": [
    {
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oidc.OpenIDConnectClientConfiguration",
      "propertyMap": [
        {
          "source": "sub",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "given_name",
          "target": "givenName",
        },
        {
          "source": "family_name",
          "target": "familyName",
        },
        {
          "source": "picture",
          "target": "photoUrl",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "locale",
          "target": "locale",
        },
      ],
      "provider": "google",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Google",
        "order": [
          "sub",
          "name",
          "given_name",
          "family_name",
          "picture",
          "email",
          "locale",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "family_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "given_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "locale": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Profile Picture URL",
            "searchable": true,
            "title": "Profile Picture URL",
            "type": "string",
            "viewable": true,
          },
          "sub": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Google",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "openid",
        "profile",
        "email",
      ],
      "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "Google",
        "buttonImage": "images/g-logo.png",
        "iconBackground": "#4184f3",
        "iconClass": "fa-google",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
      "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://www.facebook.com/dialog/oauth",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "first_name",
          "target": "givenName",
        },
        {
          "source": "last_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "locale",
          "target": "locale",
        },
        {
          "source": "picture",
          "target": "photoUrl",
          "transform": {
            "source": "source.data.url",
            "type": "text/javascript",
          },
        },
      ],
      "provider": "facebook",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Facebook",
        "order": [
          "id",
          "name",
          "first_name",
          "last_name",
          "email",
          "locale",
          "picture",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "first_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "last_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "locale": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Picture",
            "searchable": true,
            "title": "Picture",
            "type": "object",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Facebook",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "email",
        "user_birthday",
      ],
      "tokenEndpoint": "https://graph.facebook.com/v2.7/oauth/access_token",
      "uiConfig": {
        "buttonClass": "fa-facebook-official",
        "buttonCustomStyle": "background-color: #3b5998;border-color: #3b5998; color: white;",
        "buttonCustomStyleHover": "background-color: #334b7d;border-color: #334b7d; color: white;",
        "buttonDisplayName": "Facebook",
        "buttonImage": "",
        "iconBackground": "#3b5998",
        "iconClass": "fa-facebook",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://graph.facebook.com/me?fields=id,name,picture,email,first_name,last_name,locale",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://www.linkedin.com/oauth/v2/authorization",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "formattedName",
          "target": "displayName",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "familyName",
        },
        {
          "source": "emailAddress",
          "target": "email",
        },
        {
          "source": "emailAddress",
          "target": "username",
        },
        {
          "source": "location",
          "target": "locale",
          "transform": {
            "source": "source.country.code",
            "type": "text/javascript",
          },
        },
        {
          "source": "pictureUrl",
          "target": "photoUrl",
        },
      ],
      "provider": "linkedIn",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:LinkedIn",
        "order": [
          "id",
          "formattedName",
          "emailAddress",
          "firstName",
          "lastName",
          "location",
        ],
        "properties": {
          "emailAddress": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "firstName": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "formattedName": {
            "description": "Formatted Name",
            "searchable": true,
            "title": "Formatted Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": false,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "lastName": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "location": {
            "description": "Location",
            "properties": {
              "country": {
                "description": "Country",
                "properties": {
                  "code": {
                    "description": "Locale Code",
                    "title": "Locale Code",
                    "type": "string",
                  },
                },
                "title": "Country",
                "type": "object",
              },
              "name": {
                "description": "Area Name",
                "title": "Area Name",
                "type": "string",
              },
            },
            "searchable": true,
            "title": "Location",
            "type": "object",
            "viewable": true,
          },
          "pictureUrl": {
            "description": "Picture URL",
            "searchable": true,
            "title": "Picture URL",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "LinkedIn",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "r_basicprofile",
        "r_emailaddress",
      ],
      "tokenEndpoint": "https://www.linkedin.com/oauth/v2/accessToken",
      "uiConfig": {
        "buttonClass": "fa-linkedin",
        "buttonCustomStyle": "background-color:#0077b5;border-color:#0077b5;color:white;",
        "buttonCustomStyleHover": "background-color:#006ea9; border-color:#006ea9;color:white;",
        "buttonDisplayName": "LinkedIn",
        "buttonImage": "",
        "iconBackground": "#0077b5",
        "iconClass": "fa-linkedin",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.linkedin.com/v1/people/~:(id,formatted-name,first-name,last-name,email-address,location,picture-url)?format=json",
    },
    {
      "authenticationIdKey": "user_id",
      "authorizationEndpoint": "https://www.amazon.com/ap/oa",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "enabled": false,
      "propertyMap": [
        {
          "source": "user_id",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
      ],
      "provider": "amazon",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Amazon",
        "order": [
          "user_id",
          "name",
          "email",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "user_id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Amazon",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "profile",
      ],
      "tokenEndpoint": "https://api.amazon.com/auth/o2/token",
      "uiConfig": {
        "buttonClass": "fa-amazon",
        "buttonCustomStyle": "background: linear-gradient(to bottom, #f7e09f 15%,#f5c646 85%);color: black;border-color: #b48c24;",
        "buttonCustomStyleHover": "background: linear-gradient(to bottom, #f6c94e 15%,#f6c94e 85%);color: black;border-color: #b48c24;",
        "buttonDisplayName": "Amazon",
        "buttonImage": "",
        "iconBackground": "#f0c14b",
        "iconClass": "fa-amazon",
        "iconFontColor": "black",
      },
      "userInfoEndpoint": "https://api.amazon.com/user/profile",
    },
    {
      "authenticationIdKey": "username",
      "authorizationEndpoint": "https://public-api.wordpress.com/oauth2/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "enabled": false,
      "propertyMap": [
        {
          "source": "username",
          "target": "username",
        },
        {
          "source": "username",
          "target": "id",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "avatar_URL",
          "target": "photoUrl",
        },
        {
          "source": "display_name",
          "target": "displayName",
        },
      ],
      "provider": "wordpress",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Wordpress",
        "order": [
          "username",
          "email",
          "display_name",
          "avatar_URL",
        ],
        "properties": {
          "avatar_URL": {
            "description": "Avatar Url",
            "searchable": true,
            "title": "Avatar Url",
            "type": "string",
            "viewable": true,
          },
          "display_name": {
            "description": "Display Name",
            "searchable": true,
            "title": "Display Name",
            "type": "string",
            "viewable": true,
          },
          "email": {
            "description": "email",
            "searchable": true,
            "title": "email",
            "type": "string",
            "viewable": true,
          },
          "username": {
            "description": "username",
            "searchable": true,
            "title": "username",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Wordpress",
        "type": "object",
        "username": "http://jsonschema.net",
        "viewable": true,
      },
      "scope": [
        "auth",
      ],
      "tokenEndpoint": "https://public-api.wordpress.com/oauth2/token",
      "uiConfig": {
        "buttonClass": "fa-wordpress",
        "buttonCustomStyle": "background-color: #0095cc; border-color: #0095cc; color:white;",
        "buttonCustomStyleHover": "background-color: #0095cc; border-color: #0095cc; color:white;",
        "buttonDisplayName": "WordPress",
        "buttonImage": "",
        "iconBackground": "#0095cc",
        "iconClass": "fa-wordpress",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://public-api.wordpress.com/rest/v1.1/me/",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "displayName",
          "target": "displayName",
        },
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "surname",
          "target": "familyName",
        },
        {
          "source": "userPrincipalName",
          "target": "email",
        },
        {
          "source": "userPrincipalName",
          "target": "username",
        },
      ],
      "provider": "microsoft",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Microsoft",
        "order": [
          "id",
          "displayName",
          "userPrincipalName",
          "givenName",
          "surname",
        ],
        "properties": {
          "displayName": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "givenName": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": false,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "surname": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "userPrincipalName": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Microsoft",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "User.Read",
      ],
      "tokenEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft",
        "buttonImage": "images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://graph.microsoft.com/v1.0/me",
    },
    {
      "apiVersion": "5.73",
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://oauth.vk.com/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.vk.VKClientConfiguration",
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "first_name",
          "target": "displayName",
        },
        {
          "source": "first_name",
          "target": "givenName",
        },
        {
          "source": "last_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "photo_50",
          "target": "photoUrl",
        },
      ],
      "provider": "vkontakte",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Vkontakte",
        "order": [
          "id",
          "name",
          "last_name",
          "first_name",
          "email",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "first_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "last_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "photo_50": {
            "description": "Photo URL",
            "searchable": true,
            "title": "Photo URL",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "email",
      ],
      "tokenEndpoint": "https://oauth.vk.com/access_token",
      "uiConfig": {
        "buttonClass": "fa-vk",
        "buttonCustomStyle": "background-color: #4c75a3; border-color: #4c75a3;color: white;",
        "buttonCustomStyleHover": "background-color: #43658c; border-color: #43658c;color: white;",
        "buttonDisplayName": "VK",
        "buttonImage": "",
        "iconBackground": "#4c75a3",
        "iconClass": "fa-vk",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.vk.com/method/users.get?fields=photo_50",
    },
    {
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://api.instagram.com/oauth/authorize/",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.instagram.InstagramClientConfiguration",
      "connectionTimeout": 0,
      "propertyMap": [
        {
          "source": "id",
          "target": "id",
        },
        {
          "source": "full_name",
          "target": "displayName",
        },
        {
          "source": "profile_picture",
          "target": "photoUrl",
        },
        {
          "source": "username",
          "target": "username",
        },
      ],
      "provider": "instagram",
      "readTimeout": 0,
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Instagram",
        "order": [
          "id",
          "full_name",
          "profile_picture",
          "photoUrl",
          "username",
        ],
        "properties": {
          "full_name": {
            "description": "Full Name",
            "searchable": true,
            "title": "Full Name",
            "type": "string",
            "viewable": true,
          },
          "id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "profile_picture": {
            "description": "Profile Picture URL",
            "searchable": true,
            "title": "Profile Picture URL",
            "type": "string",
            "viewable": true,
          },
          "username": {
            "description": "Username",
            "searchable": true,
            "title": "Username",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "basic",
        "public_content",
      ],
      "tokenEndpoint": "https://api.instagram.com/oauth/access_token",
      "uiConfig": {
        "buttonClass": "fa-instagram",
        "buttonCustomStyle": "background-color: #3f729b; border-color: #3f729b;color: white;",
        "buttonCustomStyleHover": "background-color: #305777; border-color: #305777;color: white;",
        "buttonDisplayName": "Instagram",
        "buttonImage": "",
        "iconBackground": "#3f729b",
        "iconClass": "fa-instagram",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.instagram.com/v1/users/self/",
    },
    {
      "authenticationIdKey": "openid",
      "authorizationEndpoint": "https://open.weixin.qq.com/connect/qrconnect",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.wechat.WeChatClientConfiguration",
      "connectionTimeout": 0,
      "propertyMap": [
        {
          "source": "openid",
          "target": "id",
        },
        {
          "source": "nickname",
          "target": "displayName",
        },
        {
          "source": "nickname",
          "target": "username",
        },
        {
          "source": "headimgurl",
          "target": "photoUrl",
        },
      ],
      "provider": "wechat",
      "readTimeout": 0,
      "redirectUri": "https://localhost:8443/",
      "refreshTokenEndpoint": "https://api.wechat.com/sns/oauth2/refresh_token",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Wechat",
        "order": [
          "openid",
          "nickname",
          "headimgurl",
        ],
        "properties": {
          "headimgurl": {
            "description": "Profile Picture URL",
            "searchable": true,
            "title": "Profile Picture URL",
            "type": "string",
            "viewable": true,
          },
          "nickname": {
            "description": "Username",
            "searchable": true,
            "title": "Username",
            "type": "string",
            "viewable": true,
          },
          "openid": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "snsapi_login",
      ],
      "tokenEndpoint": "https://api.wechat.com/sns/oauth2/access_token",
      "uiConfig": {
        "buttonClass": "fa-wechat",
        "buttonCustomStyle": "background-color: #09b507; border-color: #09b507;color: white;",
        "buttonCustomStyleHover": "background-color: #09a007; border-color: #09a007;color: white;",
        "buttonDisplayName": "WeChat",
        "buttonImage": "",
        "iconBackground": "#09b507",
        "iconClass": "fa-wechat",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.wechat.com/sns/userinfo",
    },
    {
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://api.login.yahoo.com/oauth2/request_auth",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oidc.OpenIDConnectClientConfiguration",
      "propertyMap": [
        {
          "source": "sub",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "given_name",
          "target": "givenName",
        },
        {
          "source": "family_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "locale",
          "target": "locale",
        },
        {
          "source": "picture",
          "target": "photoUrl",
        },
      ],
      "provider": "yahoo",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Yahoo",
        "order": [
          "sub",
          "name",
          "given_name",
          "family_name",
          "email",
          "locale",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "family_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "given_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "locale": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Profile Photo URL",
            "searchable": true,
            "title": "Profile Photo URL",
            "type": "string",
            "viewable": true,
          },
          "sub": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "openid",
        "sdpp-w",
      ],
      "tokenEndpoint": "https://api.login.yahoo.com/oauth2/get_token",
      "uiConfig": {
        "buttonClass": "fa-yahoo",
        "buttonCustomStyle": "background-color: #7B0099; border-color: #7B0099; color:white;",
        "buttonCustomStyleHover": "background-color: #7B0099; border-color: #7B0099; color:white;",
        "buttonDisplayName": "Yahoo",
        "buttonImage": "",
        "iconBackground": "#7B0099",
        "iconClass": "fa-yahoo",
        "iconFontColor": "white",
      },
      "wellKnownEndpoint": "https://login.yahoo.com/.well-known/openid-configuration",
    },
    {
      "authenticationIdKey": "user_id",
      "authorizationEndpoint": "https://login.salesforce.com/services/oauth2/authorize",
      "basicAuth": false,
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
      "propertyMap": [
        {
          "source": "user_id",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "given_name",
          "target": "givenName",
        },
        {
          "source": "family_name",
          "target": "familyName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "email",
          "target": "username",
        },
        {
          "source": "zoneInfo",
          "target": "locale",
        },
        {
          "source": "picture",
          "target": "photoUrl",
        },
      ],
      "provider": "salesforce",
      "redirectUri": "https://localhost:8443/",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Salesforce",
        "order": [
          "user_id",
          "name",
          "given_name",
          "family_name",
          "email",
          "zoneInfo",
          "picture",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "family_name": {
            "description": "Last Name",
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "viewable": true,
          },
          "given_name": {
            "description": "First Name",
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Name",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "picture": {
            "description": "Picture URL",
            "searchable": true,
            "title": "Picture URL",
            "type": "string",
            "viewable": true,
          },
          "user_id": {
            "description": "ID",
            "searchable": true,
            "title": "ID",
            "type": "string",
            "viewable": true,
          },
          "zoneInfo": {
            "description": "Locale Code",
            "searchable": true,
            "title": "Locale Code",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Salesforce",
        "type": "object",
        "viewable": true,
      },
      "scope": [
        "id",
        "api",
        "web",
      ],
      "tokenEndpoint": "https://login.salesforce.com/services/oauth2/token",
      "uiConfig": {
        "buttonClass": "fa-cloud",
        "buttonCustomStyle": "background-color: #21a0df; border-color: #21a0df; color: white;",
        "buttonCustomStyleHover": "background-color: #21a0df; border-color: #21a0df; color: white;",
        "buttonDisplayName": "Salesforce",
        "buttonImage": "",
        "iconBackground": "#21a0df",
        "iconClass": "fa-cloud",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://login.salesforce.com/services/oauth2/userinfo",
    },
    {
      "authenticationIdKey": "id_str",
      "authorizationEndpoint": "https://api.twitter.com/oauth/authenticate",
      "clientId": "",
      "clientSecret": "",
      "configClass": "org.forgerock.oauth.clients.twitter.TwitterClientConfiguration",
      "propertyMap": [
        {
          "source": "id_str",
          "target": "id",
        },
        {
          "source": "name",
          "target": "displayName",
        },
        {
          "source": "email",
          "target": "email",
        },
        {
          "source": "screen_name",
          "target": "username",
        },
        {
          "source": "profile_image_url",
          "target": "photoUrl",
        },
      ],
      "provider": "twitter",
      "redirectUri": "https://localhost:8443/",
      "requestTokenEndpoint": "https://api.twitter.com/oauth/request_token",
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Twitter",
        "order": [
          "id_str",
          "name",
          "screen_name",
          "email",
          "profile_image_url",
        ],
        "properties": {
          "email": {
            "description": "Email Address",
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "viewable": true,
          },
          "id_str": {
            "description": "ID",
            "searchable": true,
            "title": "Id",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "Full Name",
            "searchable": true,
            "title": "Full Name",
            "type": "string",
            "viewable": true,
          },
          "profile_image_url": {
            "description": "Profile Image URL",
            "searchable": true,
            "title": "Profile Image URL",
            "type": "string",
            "viewable": true,
          },
          "screen_name": {
            "description": "User Id",
            "searchable": true,
            "title": "User Id",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [],
        "title": "Twitter",
        "type": "object",
        "viewable": true,
      },
      "tokenEndpoint": "https://api.twitter.com/oauth/access_token",
      "uiConfig": {
        "buttonClass": "fa-twitter",
        "buttonCustomStyle": "background-color: #00b6e9; border-color: #00b6e9; color: #fff;",
        "buttonCustomStyleHover": "background-color: #01abda; border-color: #01abda; color: #fff;",
        "buttonDisplayName": "Twitter",
        "buttonImage": "",
        "iconBackground": "#00b6e9",
        "iconClass": "fa-twitter",
        "iconFontColor": "white",
      },
      "userInfoEndpoint": "https://api.twitter.com/1.1/account/verify_credentials.json",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/internal.json 1`] = `
{
  "_id": "internal",
  "objects": [
    {
      "name": "role",
      "properties": {
        "authzMembers": {
          "items": {
            "resourceCollection": [
              {
                "conditionalAssociation": true,
                "label": "User",
                "notify": true,
                "path": "managed/alpha_user",
                "query": {
                  "fields": [
                    "userName",
                    "givenName",
                    "sn",
                  ],
                  "queryFilter": "true",
                },
              },
            ],
          },
        },
      },
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/jsonstore.json 1`] = `
{
  "_id": "jsonstore",
  "cleanupDwellSeconds": 600,
  "entryExpireSeconds": 1800,
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/managed.json 1`] = `
{
  "_id": "managed",
  "objects": [
    {
      "meta": {
        "property": "_meta",
        "resourceCollection": "managed/alpha_usermeta",
        "trackedProperties": [
          "createDate",
          "lastChanged",
        ],
      },
      "name": "alpha_user",
      "notifications": {},
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": null,
        "icon": "fa-user",
        "order": [
          "_id",
          "userName",
          "password",
          "givenName",
          "cn",
          "sn",
          "mail",
          "profileImage",
          "description",
          "accountStatus",
          "telephoneNumber",
          "postalAddress",
          "city",
          "postalCode",
          "country",
          "stateProvince",
          "roles",
          "manager",
          "authzRoles",
          "reports",
          "effectiveRoles",
          "effectiveAssignments",
          "lastSync",
          "kbaInfo",
          "preferences",
          "consentedMappings",
          "ownerOfOrg",
          "adminOfOrg",
          "memberOfOrg",
          "memberOfOrgIDs",
          "frIndexedString1",
          "frIndexedString2",
          "frIndexedString3",
          "frIndexedString4",
          "frIndexedString5",
          "frUnindexedString1",
          "frUnindexedString2",
          "frUnindexedString3",
          "frUnindexedString4",
          "frUnindexedString5",
          "frIndexedMultivalued1",
          "frIndexedMultivalued2",
          "frIndexedMultivalued3",
          "frIndexedMultivalued4",
          "frIndexedMultivalued5",
          "frUnindexedMultivalued1",
          "frUnindexedMultivalued2",
          "frUnindexedMultivalued3",
          "frUnindexedMultivalued4",
          "frUnindexedMultivalued5",
          "frIndexedDate1",
          "frIndexedDate2",
          "frIndexedDate3",
          "frIndexedDate4",
          "frIndexedDate5",
          "frUnindexedDate1",
          "frUnindexedDate2",
          "frUnindexedDate3",
          "frUnindexedDate4",
          "frUnindexedDate5",
          "frIndexedInteger1",
          "frIndexedInteger2",
          "frIndexedInteger3",
          "frIndexedInteger4",
          "frIndexedInteger5",
          "frUnindexedInteger1",
          "frUnindexedInteger2",
          "frUnindexedInteger3",
          "frUnindexedInteger4",
          "frUnindexedInteger5",
          "assignedDashboard",
          "aliasList",
          "custom_department",
          "groups",
          "effectiveGroups",
        ],
        "properties": {
          "_id": {
            "description": "User ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": null,
            "userEditable": false,
            "viewable": false,
          },
          "accountStatus": {
            "default": "active",
            "description": "Status",
            "isPersonal": false,
            "searchable": true,
            "title": "Status",
            "type": "string",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "adminOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "admins",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Administer",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "aliasList": {
            "description": "List of identity aliases used primarily to record social IdP subjects for this user",
            "isVirtual": false,
            "items": {
              "title": "User Alias Names Items",
              "type": "string",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "User Alias Names List",
            "type": "array",
            "userEditable": true,
            "viewable": false,
          },
          "assignedDashboard": {
            "description": "List of items to click on for this user",
            "isVirtual": false,
            "items": {
              "title": "Assigned Dashboard Items",
              "type": "string",
            },
            "searchable": false,
            "title": "Assigned Dashboard",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "authzRoles": {
            "description": "Authorization Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Authorization Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Internal Role",
                  "path": "internal/role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "authzMembers",
              "reverseRelationship": true,
              "title": "Authorization Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Authorization Roles",
            "type": "array",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "city": {
            "description": "City",
            "isPersonal": false,
            "title": "City",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "cn": {
            "description": "Common Name",
            "isPersonal": true,
            "isVirtual": true,
            "onStore": {
              "source": "object.cn || (object.givenName + ' ' + object.sn)",
              "type": "text/javascript",
            },
            "scope": "private",
            "searchable": false,
            "title": "Common Name",
            "type": "string",
            "userEditable": false,
            "viewable": false,
          },
          "consentedMappings": {
            "description": "Consented Mappings",
            "isPersonal": false,
            "isVirtual": false,
            "items": {
              "items": {
                "order": [
                  "mapping",
                  "consentDate",
                ],
                "properties": {
                  "consentDate": {
                    "description": "Consent Date",
                    "searchable": true,
                    "title": "Consent Date",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                  "mapping": {
                    "description": "Mapping",
                    "searchable": true,
                    "title": "Mapping",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                },
                "required": [
                  "mapping",
                  "consentDate",
                ],
                "title": "Consented Mappings Item",
                "type": "object",
              },
              "title": "Consented Mappings Items",
              "type": "array",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Consented Mappings",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "country": {
            "description": "Country",
            "isPersonal": false,
            "title": "Country",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "custom_department": {
            "description": null,
            "format": null,
            "isVirtual": false,
            "searchable": false,
            "title": "Department",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "description": {
            "description": "Description",
            "isPersonal": false,
            "searchable": true,
            "title": "Description",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "effectiveAssignments": {
            "description": "Effective Assignments",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Assignments Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedObjectFields": [
                "*",
              ],
              "referencedRelationshipFields": [
                "roles",
                "assignments",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Assignments",
            "type": "array",
            "usageDescription": null,
            "viewable": false,
          },
          "effectiveGroups": {
            "description": "Effective Groups",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Groups Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "groups",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Groups",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "effectiveRoles": {
            "description": "Effective Roles",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Roles Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "roles",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Roles",
            "type": "array",
            "usageDescription": null,
            "viewable": false,
          },
          "frIndexedDate1": {
            "description": "Generic Indexed Date 1",
            "isPersonal": false,
            "title": "Generic Indexed Date 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate2": {
            "description": "Generic Indexed Date 2",
            "isPersonal": false,
            "title": "Generic Indexed Date 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate3": {
            "description": "Generic Indexed Date 3",
            "isPersonal": false,
            "title": "Generic Indexed Date 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate4": {
            "description": "Generic Indexed Date 4",
            "isPersonal": false,
            "title": "Generic Indexed Date 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedDate5": {
            "description": "Generic Indexed Date 5",
            "isPersonal": false,
            "title": "Generic Indexed Date 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger1": {
            "description": "Generic Indexed Integer 1",
            "isPersonal": false,
            "title": "Generic Indexed Integer 1",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger2": {
            "description": "Generic Indexed Integer 2",
            "isPersonal": false,
            "title": "Generic Indexed Integer 2",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger3": {
            "description": "Generic Indexed Integer 3",
            "isPersonal": false,
            "title": "Generic Indexed Integer 3",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger4": {
            "description": "Generic Indexed Integer 4",
            "isPersonal": false,
            "title": "Generic Indexed Integer 4",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedInteger5": {
            "description": "Generic Indexed Integer 5",
            "isPersonal": false,
            "title": "Generic Indexed Integer 5",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued1": {
            "description": "Generic Indexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 1",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued2": {
            "description": "Generic Indexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 2",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued3": {
            "description": "Generic Indexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 3",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued4": {
            "description": "Generic Indexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 4",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedMultivalued5": {
            "description": "Generic Indexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 5",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString1": {
            "description": "Generic Indexed String 1",
            "isPersonal": false,
            "title": "Generic Indexed String 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString2": {
            "description": "Generic Indexed String 2",
            "isPersonal": false,
            "title": "Generic Indexed String 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString3": {
            "description": "Generic Indexed String 3",
            "isPersonal": false,
            "title": "Generic Indexed String 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString4": {
            "description": "Generic Indexed String 4",
            "isPersonal": false,
            "title": "Generic Indexed String 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frIndexedString5": {
            "description": "Generic Indexed String 5",
            "isPersonal": false,
            "title": "Generic Indexed String 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate1": {
            "description": "Generic Unindexed Date 1",
            "isPersonal": false,
            "title": "Generic Unindexed Date 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate2": {
            "description": "Generic Unindexed Date 2",
            "isPersonal": false,
            "title": "Generic Unindexed Date 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate3": {
            "description": "Generic Unindexed Date 3",
            "isPersonal": false,
            "title": "Generic Unindexed Date 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate4": {
            "description": "Generic Unindexed Date 4",
            "isPersonal": false,
            "title": "Generic Unindexed Date 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedDate5": {
            "description": "Generic Unindexed Date 5",
            "isPersonal": false,
            "title": "Generic Unindexed Date 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger1": {
            "description": "Generic Unindexed Integer 1",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 1",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger2": {
            "description": "Generic Unindexed Integer 2",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 2",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger3": {
            "description": "Generic Unindexed Integer 3",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 3",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger4": {
            "description": "Generic Unindexed Integer 4",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 4",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedInteger5": {
            "description": "Generic Unindexed Integer 5",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 5",
            "type": "number",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued1": {
            "description": "Generic Unindexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 1",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued2": {
            "description": "Generic Unindexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 2",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued3": {
            "description": "Generic Unindexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 3",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued4": {
            "description": "Generic Unindexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 4",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedMultivalued5": {
            "description": "Generic Unindexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 5",
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString1": {
            "description": "Username",
            "format": null,
            "isPersonal": false,
            "isVirtual": false,
            "searchable": false,
            "title": "Username",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString2": {
            "description": "Generic Unindexed String 2",
            "isPersonal": false,
            "title": "Generic Unindexed String 2",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString3": {
            "description": "Generic Unindexed String 3",
            "isPersonal": false,
            "title": "Generic Unindexed String 3",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString4": {
            "description": "Generic Unindexed String 4",
            "isPersonal": false,
            "title": "Generic Unindexed String 4",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "frUnindexedString5": {
            "description": "Generic Unindexed String 5",
            "isPersonal": false,
            "title": "Generic Unindexed String 5",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "givenName": {
            "description": "First Name",
            "isPersonal": true,
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "groups": {
            "description": "Groups",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Groups Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Group",
                  "path": "managed/alpha_group",
                  "query": {
                    "fields": [],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Groups Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": false,
            "returnByDefault": false,
            "title": "Groups",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "kbaInfo": {
            "description": "KBA Info",
            "isPersonal": true,
            "items": {
              "order": [
                "answer",
                "customQuestion",
                "questionId",
              ],
              "properties": {
                "answer": {
                  "description": "Answer",
                  "type": "string",
                },
                "customQuestion": {
                  "description": "Custom question",
                  "type": "string",
                },
                "questionId": {
                  "description": "Question ID",
                  "type": "string",
                },
              },
              "required": [],
              "title": "KBA Info Items",
              "type": "object",
            },
            "type": "array",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "lastSync": {
            "description": "Last Sync timestamp",
            "isPersonal": false,
            "order": [
              "effectiveAssignments",
              "timestamp",
            ],
            "properties": {
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "title": "Effective Assignments",
                "type": "array",
              },
              "timestamp": {
                "description": "Timestamp",
                "type": "string",
              },
            },
            "scope": "private",
            "searchable": false,
            "title": "Last Sync timestamp",
            "type": "object",
            "usageDescription": null,
            "viewable": false,
          },
          "mail": {
            "description": "Email Address",
            "isPersonal": true,
            "policies": [
              {
                "policyId": "valid-email-address-format",
              },
            ],
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "manager": {
            "description": "Manager",
            "isPersonal": false,
            "properties": {
              "_ref": {
                "description": "References a relationship from a managed object",
                "type": "string",
              },
              "_refProperties": {
                "description": "Supports metadata within the relationship",
                "properties": {
                  "_id": {
                    "description": "_refProperties object ID",
                    "type": "string",
                  },
                },
                "title": "Manager _refProperties",
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "User",
                "path": "managed/alpha_user",
                "query": {
                  "fields": [
                    "userName",
                    "givenName",
                    "sn",
                  ],
                  "queryFilter": "true",
                },
              },
            ],
            "reversePropertyName": "reports",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Manager",
            "type": "relationship",
            "usageDescription": null,
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "memberOfOrg": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": false,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations to which I Belong",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "memberOfOrgIDs": {
            "isVirtual": true,
            "items": {
              "title": "org identifiers",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "memberOfOrg",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "MemberOfOrgIDs",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "ownerOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "owners",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Own",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "password": {
            "description": "Password",
            "isPersonal": false,
            "isProtected": true,
            "scope": "private",
            "searchable": false,
            "title": "Password",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "postalAddress": {
            "description": "Address 1",
            "isPersonal": true,
            "title": "Address 1",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "postalCode": {
            "description": "Postal Code",
            "isPersonal": false,
            "title": "Postal Code",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "preferences": {
            "description": "Preferences",
            "isPersonal": false,
            "order": [
              "updates",
              "marketing",
            ],
            "properties": {
              "marketing": {
                "description": "Send me special offers and services",
                "type": "boolean",
              },
              "updates": {
                "description": "Send me news and updates",
                "type": "boolean",
              },
            },
            "searchable": false,
            "title": "Preferences",
            "type": "object",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "profileImage": {
            "description": "Profile Image",
            "isPersonal": true,
            "searchable": true,
            "title": "Profile Image",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": false,
          },
          "reports": {
            "description": "Direct Reports",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Direct Reports Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "manager",
              "reverseRelationship": true,
              "title": "Direct Reports Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Direct Reports",
            "type": "array",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "roles": {
            "description": "Provisioning Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Provisioning Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Role",
                  "path": "managed/alpha_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Provisioning Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Provisioning Roles",
            "type": "array",
            "usageDescription": null,
            "userEditable": false,
            "viewable": true,
          },
          "sn": {
            "description": "Last Name",
            "isPersonal": true,
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "stateProvince": {
            "description": "State/Province",
            "isPersonal": false,
            "title": "State/Province",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "telephoneNumber": {
            "description": "Telephone Number",
            "isPersonal": true,
            "pattern": "^\\+?([0-9\\- \\(\\)])*$",
            "title": "Telephone Number",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
          "userName": {
            "description": "Username",
            "isPersonal": true,
            "minLength": 1,
            "policies": [
              {
                "policyId": "valid-username",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
              {
                "params": {
                  "minLength": 1,
                },
                "policyId": "minimum-length",
              },
              {
                "params": {
                  "maxLength": 255,
                },
                "policyId": "maximum-length",
              },
            ],
            "searchable": true,
            "title": "Username",
            "type": "string",
            "usageDescription": null,
            "userEditable": true,
            "viewable": true,
          },
        },
        "required": [
          "userName",
          "givenName",
          "sn",
          "mail",
        ],
        "title": "Alpha realm - User",
        "type": "object",
      },
    },
    {
      "meta": {
        "property": "_meta",
        "resourceCollection": "managed/bravo_usermeta",
        "trackedProperties": [
          "createDate",
          "lastChanged",
        ],
      },
      "name": "bravo_user",
      "notifications": {},
      "schema": {
        "$schema": "http://json-schema.org/draft-03/schema",
        "icon": "fa-user",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
        "mat-icon": "people",
        "order": [
          "_id",
          "userName",
          "password",
          "givenName",
          "cn",
          "sn",
          "mail",
          "profileImage",
          "description",
          "accountStatus",
          "telephoneNumber",
          "postalAddress",
          "city",
          "postalCode",
          "country",
          "stateProvince",
          "roles",
          "manager",
          "authzRoles",
          "reports",
          "effectiveRoles",
          "effectiveAssignments",
          "lastSync",
          "kbaInfo",
          "preferences",
          "consentedMappings",
          "ownerOfOrg",
          "adminOfOrg",
          "memberOfOrg",
          "memberOfOrgIDs",
          "frIndexedString1",
          "frIndexedString2",
          "frIndexedString3",
          "frIndexedString4",
          "frIndexedString5",
          "frUnindexedString1",
          "frUnindexedString2",
          "frUnindexedString3",
          "frUnindexedString4",
          "frUnindexedString5",
          "frIndexedMultivalued1",
          "frIndexedMultivalued2",
          "frIndexedMultivalued3",
          "frIndexedMultivalued4",
          "frIndexedMultivalued5",
          "frUnindexedMultivalued1",
          "frUnindexedMultivalued2",
          "frUnindexedMultivalued3",
          "frUnindexedMultivalued4",
          "frUnindexedMultivalued5",
          "frIndexedDate1",
          "frIndexedDate2",
          "frIndexedDate3",
          "frIndexedDate4",
          "frIndexedDate5",
          "frUnindexedDate1",
          "frUnindexedDate2",
          "frUnindexedDate3",
          "frUnindexedDate4",
          "frUnindexedDate5",
          "frIndexedInteger1",
          "frIndexedInteger2",
          "frIndexedInteger3",
          "frIndexedInteger4",
          "frIndexedInteger5",
          "frUnindexedInteger1",
          "frUnindexedInteger2",
          "frUnindexedInteger3",
          "frUnindexedInteger4",
          "frUnindexedInteger5",
          "assignedDashboard",
          "groups",
          "effectiveGroups",
        ],
        "properties": {
          "_id": {
            "description": "User ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": false,
          },
          "accountStatus": {
            "default": "active",
            "description": "Status",
            "isPersonal": false,
            "searchable": true,
            "title": "Status",
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "adminOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "admins",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Administer",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "aliasList": {
            "description": "List of identity aliases used primarily to record social IdP subjects for this user",
            "isVirtual": false,
            "items": {
              "title": "User Alias Names Items",
              "type": "string",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "User Alias Names List",
            "type": "array",
            "userEditable": true,
            "viewable": false,
          },
          "assignedDashboard": {
            "description": "List of items to click on for this user",
            "isVirtual": false,
            "items": {
              "title": "Assigned Dashboard Items",
              "type": "string",
            },
            "searchable": false,
            "title": "Assigned Dashboard",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "authzRoles": {
            "description": "Authorization Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Authorization Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Internal Role",
                  "path": "internal/role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "authzMembers",
              "reverseRelationship": true,
              "title": "Authorization Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Authorization Roles",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "city": {
            "description": "City",
            "isPersonal": false,
            "title": "City",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "cn": {
            "description": "Common Name",
            "isPersonal": true,
            "isVirtual": true,
            "onStore": {
              "source": "object.cn || (object.givenName + ' ' + object.sn)",
              "type": "text/javascript",
            },
            "scope": "private",
            "searchable": false,
            "title": "Common Name",
            "type": "string",
            "userEditable": false,
            "viewable": false,
          },
          "consentedMappings": {
            "description": "Consented Mappings",
            "isPersonal": false,
            "isVirtual": false,
            "items": {
              "items": {
                "order": [
                  "mapping",
                  "consentDate",
                ],
                "properties": {
                  "consentDate": {
                    "description": "Consent Date",
                    "searchable": true,
                    "title": "Consent Date",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                  "mapping": {
                    "description": "Mapping",
                    "searchable": true,
                    "title": "Mapping",
                    "type": "string",
                    "userEditable": true,
                    "viewable": true,
                  },
                },
                "required": [
                  "mapping",
                  "consentDate",
                ],
                "title": "Consented Mappings Item",
                "type": "object",
              },
              "title": "Consented Mappings Items",
              "type": "array",
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Consented Mappings",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "country": {
            "description": "Country",
            "isPersonal": false,
            "title": "Country",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "description": {
            "description": "Description",
            "isPersonal": false,
            "searchable": true,
            "title": "Description",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "effectiveAssignments": {
            "description": "Effective Assignments",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Assignments Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedObjectFields": [
                "*",
              ],
              "referencedRelationshipFields": [
                "roles",
                "assignments",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Assignments",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "effectiveGroups": {
            "description": "Effective Groups",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Groups Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "groups",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Groups",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "effectiveRoles": {
            "description": "Effective Roles",
            "isPersonal": false,
            "isVirtual": true,
            "items": {
              "title": "Effective Roles Items",
              "type": "object",
            },
            "queryConfig": {
              "referencedRelationshipFields": [
                "roles",
              ],
            },
            "returnByDefault": true,
            "title": "Effective Roles",
            "type": "array",
            "usageDescription": "",
            "viewable": false,
          },
          "frIndexedDate1": {
            "description": "Generic Indexed Date 1",
            "isPersonal": false,
            "title": "Generic Indexed Date 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate2": {
            "description": "Generic Indexed Date 2",
            "isPersonal": false,
            "title": "Generic Indexed Date 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate3": {
            "description": "Generic Indexed Date 3",
            "isPersonal": false,
            "title": "Generic Indexed Date 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate4": {
            "description": "Generic Indexed Date 4",
            "isPersonal": false,
            "title": "Generic Indexed Date 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedDate5": {
            "description": "Generic Indexed Date 5",
            "isPersonal": false,
            "title": "Generic Indexed Date 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger1": {
            "description": "Generic Indexed Integer 1",
            "isPersonal": false,
            "title": "Generic Indexed Integer 1",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger2": {
            "description": "Generic Indexed Integer 2",
            "isPersonal": false,
            "title": "Generic Indexed Integer 2",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger3": {
            "description": "Generic Indexed Integer 3",
            "isPersonal": false,
            "title": "Generic Indexed Integer 3",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger4": {
            "description": "Generic Indexed Integer 4",
            "isPersonal": false,
            "title": "Generic Indexed Integer 4",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedInteger5": {
            "description": "Generic Indexed Integer 5",
            "isPersonal": false,
            "title": "Generic Indexed Integer 5",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued1": {
            "description": "Generic Indexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 1",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued2": {
            "description": "Generic Indexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 2",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued3": {
            "description": "Generic Indexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 3",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued4": {
            "description": "Generic Indexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 4",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedMultivalued5": {
            "description": "Generic Indexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Indexed Multivalue 5",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString1": {
            "description": "Generic Indexed String 1",
            "isPersonal": false,
            "title": "Generic Indexed String 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString2": {
            "description": "Generic Indexed String 2",
            "isPersonal": false,
            "title": "Generic Indexed String 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString3": {
            "description": "Generic Indexed String 3",
            "isPersonal": false,
            "title": "Generic Indexed String 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString4": {
            "description": "Generic Indexed String 4",
            "isPersonal": false,
            "title": "Generic Indexed String 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frIndexedString5": {
            "description": "Generic Indexed String 5",
            "isPersonal": false,
            "title": "Generic Indexed String 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate1": {
            "description": "Generic Unindexed Date 1",
            "isPersonal": false,
            "title": "Generic Unindexed Date 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate2": {
            "description": "Generic Unindexed Date 2",
            "isPersonal": false,
            "title": "Generic Unindexed Date 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate3": {
            "description": "Generic Unindexed Date 3",
            "isPersonal": false,
            "title": "Generic Unindexed Date 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate4": {
            "description": "Generic Unindexed Date 4",
            "isPersonal": false,
            "title": "Generic Unindexed Date 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedDate5": {
            "description": "Generic Unindexed Date 5",
            "isPersonal": false,
            "title": "Generic Unindexed Date 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger1": {
            "description": "Generic Unindexed Integer 1",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 1",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger2": {
            "description": "Generic Unindexed Integer 2",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 2",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger3": {
            "description": "Generic Unindexed Integer 3",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 3",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger4": {
            "description": "Generic Unindexed Integer 4",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 4",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedInteger5": {
            "description": "Generic Unindexed Integer 5",
            "isPersonal": false,
            "title": "Generic Unindexed Integer 5",
            "type": "number",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued1": {
            "description": "Generic Unindexed Multivalue 1",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 1",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued2": {
            "description": "Generic Unindexed Multivalue 2",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 2",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued3": {
            "description": "Generic Unindexed Multivalue 3",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 3",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued4": {
            "description": "Generic Unindexed Multivalue 4",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 4",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedMultivalued5": {
            "description": "Generic Unindexed Multivalue 5",
            "isPersonal": false,
            "items": {
              "type": "string",
            },
            "title": "Generic Unindexed Multivalue 5",
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString1": {
            "description": "Generic Unindexed String 1",
            "isPersonal": false,
            "title": "Generic Unindexed String 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString2": {
            "description": "Generic Unindexed String 2",
            "isPersonal": false,
            "title": "Generic Unindexed String 2",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString3": {
            "description": "Generic Unindexed String 3",
            "isPersonal": false,
            "title": "Generic Unindexed String 3",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString4": {
            "description": "Generic Unindexed String 4",
            "isPersonal": false,
            "title": "Generic Unindexed String 4",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "frUnindexedString5": {
            "description": "Generic Unindexed String 5",
            "isPersonal": false,
            "title": "Generic Unindexed String 5",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "givenName": {
            "description": "First Name",
            "isPersonal": true,
            "searchable": true,
            "title": "First Name",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "groups": {
            "description": "Groups",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Groups Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Group",
                  "path": "managed/bravo_group",
                  "query": {
                    "fields": [],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Groups Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": false,
            "returnByDefault": false,
            "title": "Groups",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "kbaInfo": {
            "description": "KBA Info",
            "isPersonal": true,
            "items": {
              "order": [
                "answer",
                "customQuestion",
                "questionId",
              ],
              "properties": {
                "answer": {
                  "description": "Answer",
                  "type": "string",
                },
                "customQuestion": {
                  "description": "Custom question",
                  "type": "string",
                },
                "questionId": {
                  "description": "Question ID",
                  "type": "string",
                },
              },
              "required": [],
              "title": "KBA Info Items",
              "type": "object",
            },
            "type": "array",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "lastSync": {
            "description": "Last Sync timestamp",
            "isPersonal": false,
            "order": [
              "effectiveAssignments",
              "timestamp",
            ],
            "properties": {
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "title": "Effective Assignments",
                "type": "array",
              },
              "timestamp": {
                "description": "Timestamp",
                "type": "string",
              },
            },
            "required": [],
            "scope": "private",
            "searchable": false,
            "title": "Last Sync timestamp",
            "type": "object",
            "usageDescription": "",
            "viewable": false,
          },
          "mail": {
            "description": "Email Address",
            "isPersonal": true,
            "policies": [
              {
                "policyId": "valid-email-address-format",
              },
            ],
            "searchable": true,
            "title": "Email Address",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "manager": {
            "description": "Manager",
            "isPersonal": false,
            "properties": {
              "_ref": {
                "description": "References a relationship from a managed object",
                "type": "string",
              },
              "_refProperties": {
                "description": "Supports metadata within the relationship",
                "properties": {
                  "_id": {
                    "description": "_refProperties object ID",
                    "type": "string",
                  },
                },
                "title": "Manager _refProperties",
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "User",
                "path": "managed/bravo_user",
                "query": {
                  "fields": [
                    "userName",
                    "givenName",
                    "sn",
                  ],
                  "queryFilter": "true",
                },
              },
            ],
            "reversePropertyName": "reports",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Manager",
            "type": "relationship",
            "usageDescription": "",
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "memberOfOrg": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": false,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations to which I Belong",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "memberOfOrgIDs": {
            "isVirtual": true,
            "items": {
              "title": "org identifiers",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "memberOfOrg",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "MemberOfOrgIDs",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "ownerOfOrg": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "owners",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Organizations I Own",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "password": {
            "description": "Password",
            "isPersonal": false,
            "isProtected": true,
            "scope": "private",
            "searchable": false,
            "title": "Password",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "postalAddress": {
            "description": "Address 1",
            "isPersonal": true,
            "title": "Address 1",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "postalCode": {
            "description": "Postal Code",
            "isPersonal": false,
            "title": "Postal Code",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "preferences": {
            "description": "Preferences",
            "isPersonal": false,
            "order": [
              "updates",
              "marketing",
            ],
            "properties": {
              "marketing": {
                "description": "Send me special offers and services",
                "type": "boolean",
              },
              "updates": {
                "description": "Send me news and updates",
                "type": "boolean",
              },
            },
            "required": [],
            "searchable": false,
            "title": "Preferences",
            "type": "object",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "profileImage": {
            "description": "Profile Image",
            "isPersonal": true,
            "searchable": true,
            "title": "Profile Image",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": false,
          },
          "reports": {
            "description": "Direct Reports",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Direct Reports Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "manager",
              "reverseRelationship": true,
              "title": "Direct Reports Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Direct Reports",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "roles": {
            "description": "Provisioning Roles",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
            "isPersonal": false,
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Provisioning Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociationField": "condition",
                  "label": "Role",
                  "path": "managed/bravo_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "members",
              "reverseRelationship": true,
              "title": "Provisioning Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Provisioning Roles",
            "type": "array",
            "usageDescription": "",
            "userEditable": false,
            "viewable": true,
          },
          "sn": {
            "description": "Last Name",
            "isPersonal": true,
            "searchable": true,
            "title": "Last Name",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "stateProvince": {
            "description": "State/Province",
            "isPersonal": false,
            "title": "State/Province",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "telephoneNumber": {
            "description": "Telephone Number",
            "isPersonal": true,
            "pattern": "^\\+?([0-9\\- \\(\\)])*$",
            "title": "Telephone Number",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
          "userName": {
            "description": "Username",
            "isPersonal": true,
            "minLength": 1,
            "policies": [
              {
                "policyId": "valid-username",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
              {
                "params": {
                  "minLength": 1,
                },
                "policyId": "minimum-length",
              },
              {
                "params": {
                  "maxLength": 255,
                },
                "policyId": "maximum-length",
              },
            ],
            "searchable": true,
            "title": "Username",
            "type": "string",
            "usageDescription": "",
            "userEditable": true,
            "viewable": true,
          },
        },
        "required": [
          "userName",
          "givenName",
          "sn",
          "mail",
        ],
        "title": "Bravo realm - User",
        "type": "object",
        "viewable": true,
      },
    },
    {
      "name": "alpha_role",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "",
        "icon": "fa-check-square-o",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
        "mat-icon": "assignment_ind",
        "order": [
          "_id",
          "name",
          "description",
          "members",
          "assignments",
          "condition",
          "temporalConstraints",
        ],
        "properties": {
          "_id": {
            "description": "Role ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "assignments": {
            "description": "Managed Assignments",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Assignments Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Assignment",
                  "path": "managed/alpha_assignment",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Managed Assignments Items",
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": false,
            "title": "Managed Assignments",
            "type": "array",
            "viewable": true,
          },
          "condition": {
            "description": "A conditional filter for this role",
            "isConditional": true,
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "The role description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "members": {
            "description": "Role Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Role Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Role Members Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Role Members",
            "type": "array",
            "viewable": true,
          },
          "name": {
            "description": "The role name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "temporalConstraints": {
            "description": "An array of temporal constraints for a role",
            "isTemporalConstraint": true,
            "items": {
              "order": [
                "duration",
              ],
              "properties": {
                "duration": {
                  "description": "Duration",
                  "type": "string",
                },
              },
              "required": [
                "duration",
              ],
              "title": "Temporal Constraints Items",
              "type": "object",
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": true,
            "title": "Temporal Constraints",
            "type": "array",
            "viewable": false,
          },
        },
        "required": [
          "name",
        ],
        "title": "Alpha realm - Role",
        "type": "object",
      },
    },
    {
      "name": "bravo_role",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "",
        "icon": "fa-check-square-o",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
        "mat-icon": "assignment_ind",
        "order": [
          "_id",
          "name",
          "description",
          "members",
          "assignments",
          "condition",
          "temporalConstraints",
        ],
        "properties": {
          "_id": {
            "description": "Role ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "assignments": {
            "description": "Managed Assignments",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Assignments Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Assignment",
                  "path": "managed/bravo_assignment",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Managed Assignments Items",
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": false,
            "title": "Managed Assignments",
            "type": "array",
            "viewable": true,
          },
          "condition": {
            "description": "A conditional filter for this role",
            "isConditional": true,
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "The role description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "members": {
            "description": "Role Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Role Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "roles",
              "reverseRelationship": true,
              "title": "Role Members Items",
              "type": "relationship",
              "validate": true,
            },
            "relationshipGrantTemporalConstraintsEnforced": true,
            "returnByDefault": false,
            "title": "Role Members",
            "type": "array",
            "viewable": true,
          },
          "name": {
            "description": "The role name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "temporalConstraints": {
            "description": "An array of temporal constraints for a role",
            "isTemporalConstraint": true,
            "items": {
              "order": [
                "duration",
              ],
              "properties": {
                "duration": {
                  "description": "Duration",
                  "type": "string",
                },
              },
              "required": [
                "duration",
              ],
              "title": "Temporal Constraints Items",
              "type": "object",
            },
            "notifyRelationships": [
              "members",
            ],
            "returnByDefault": true,
            "title": "Temporal Constraints",
            "type": "array",
            "viewable": false,
          },
        },
        "required": [
          "name",
        ],
        "title": "Bravo realm - Role",
        "type": "object",
      },
    },
    {
      "name": "alpha_assignment",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "A role assignment",
        "icon": "fa-key",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
        "mat-icon": "vpn_key",
        "order": [
          "_id",
          "name",
          "description",
          "mapping",
          "attributes",
          "linkQualifiers",
          "roles",
        ],
        "properties": {
          "_id": {
            "description": "The assignment ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "attributes": {
            "description": "The attributes operated on by this assignment.",
            "items": {
              "order": [
                "assignmentOperation",
                "unassignmentOperation",
                "name",
                "value",
              ],
              "properties": {
                "assignmentOperation": {
                  "description": "Assignment operation",
                  "type": "string",
                },
                "name": {
                  "description": "Name",
                  "type": "string",
                },
                "unassignmentOperation": {
                  "description": "Unassignment operation",
                  "type": "string",
                },
                "value": {
                  "description": "Value",
                  "type": "string",
                },
              },
              "required": [],
              "title": "Assignment Attributes Items",
              "type": "object",
            },
            "notifyRelationships": [
              "roles",
            ],
            "title": "Assignment Attributes",
            "type": "array",
            "viewable": true,
          },
          "description": {
            "description": "The assignment description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "linkQualifiers": {
            "description": "Conditional link qualifiers to restrict this assignment to.",
            "items": {
              "title": "Link Qualifiers Items",
              "type": "string",
            },
            "title": "Link Qualifiers",
            "type": "array",
            "viewable": true,
          },
          "mapping": {
            "description": "The name of the mapping this assignment applies to",
            "policies": [
              {
                "policyId": "mapping-exists",
              },
            ],
            "searchable": true,
            "title": "Mapping",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "The assignment name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "roles": {
            "description": "Managed Roles",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Role",
                  "notify": true,
                  "path": "managed/alpha_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "assignments",
              "reverseRelationship": true,
              "title": "Managed Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Managed Roles",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
        },
        "required": [
          "name",
          "description",
          "mapping",
        ],
        "title": "Alpha realm - Assignment",
        "type": "object",
      },
    },
    {
      "name": "bravo_assignment",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "A role assignment",
        "icon": "fa-key",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
        "mat-icon": "vpn_key",
        "order": [
          "_id",
          "name",
          "description",
          "mapping",
          "attributes",
          "linkQualifiers",
          "roles",
        ],
        "properties": {
          "_id": {
            "description": "The assignment ID",
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": false,
          },
          "attributes": {
            "description": "The attributes operated on by this assignment.",
            "items": {
              "order": [
                "assignmentOperation",
                "unassignmentOperation",
                "name",
                "value",
              ],
              "properties": {
                "assignmentOperation": {
                  "description": "Assignment operation",
                  "type": "string",
                },
                "name": {
                  "description": "Name",
                  "type": "string",
                },
                "unassignmentOperation": {
                  "description": "Unassignment operation",
                  "type": "string",
                },
                "value": {
                  "description": "Value",
                  "type": "string",
                },
              },
              "required": [],
              "title": "Assignment Attributes Items",
              "type": "object",
            },
            "notifyRelationships": [
              "roles",
            ],
            "title": "Assignment Attributes",
            "type": "array",
            "viewable": true,
          },
          "description": {
            "description": "The assignment description, used for display purposes.",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "viewable": true,
          },
          "linkQualifiers": {
            "description": "Conditional link qualifiers to restrict this assignment to.",
            "items": {
              "title": "Link Qualifiers Items",
              "type": "string",
            },
            "title": "Link Qualifiers",
            "type": "array",
            "viewable": true,
          },
          "mapping": {
            "description": "The name of the mapping this assignment applies to",
            "policies": [
              {
                "policyId": "mapping-exists",
              },
            ],
            "searchable": true,
            "title": "Mapping",
            "type": "string",
            "viewable": true,
          },
          "name": {
            "description": "The assignment name, used for display purposes.",
            "searchable": true,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
          "roles": {
            "description": "Managed Roles",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Managed Roles Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Role",
                  "notify": true,
                  "path": "managed/bravo_role",
                  "query": {
                    "fields": [
                      "name",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "assignments",
              "reverseRelationship": true,
              "title": "Managed Roles Items",
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "title": "Managed Roles",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
        },
        "required": [
          "name",
          "description",
          "mapping",
        ],
        "title": "Bravo realm - Assignment",
        "type": "object",
      },
    },
    {
      "name": "alpha_organization",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "An organization or tenant, whose resources are managed by organizational admins.",
        "icon": "fa-building",
        "order": [
          "name",
          "description",
          "owners",
          "admins",
          "members",
          "parent",
          "children",
          "adminIDs",
          "ownerIDs",
          "parentAdminIDs",
          "parentOwnerIDs",
          "parentIDs",
          "test",
        ],
        "properties": {
          "adminIDs": {
            "isVirtual": true,
            "items": {
              "title": "admin ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "admins",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Admin user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "admins": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "adminOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Administrators",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "children": {
            "description": "Child Organizations",
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/alpha_organization",
                  "query": {
                    "fields": [
                      "name",
                      "description",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "parent",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Child Organizations",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "description": {
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "members": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": true,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "memberOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "searchable": true,
            "title": "Name",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "ownerIDs": {
            "isVirtual": true,
            "items": {
              "title": "owner ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "owners",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Owner user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "owners": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "ownerOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Owner",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "parent": {
            "description": "Parent Organization",
            "notifyRelationships": [
              "children",
              "members",
            ],
            "notifySelf": true,
            "properties": {
              "_ref": {
                "type": "string",
              },
              "_refProperties": {
                "properties": {
                  "_id": {
                    "propName": "_id",
                    "required": false,
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "Organization",
                "notify": false,
                "path": "managed/alpha_organization",
                "query": {
                  "fields": [
                    "name",
                    "description",
                  ],
                  "queryFilter": "true",
                  "sortKeys": [],
                },
              },
            ],
            "returnByDefault": false,
            "reversePropertyName": "children",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Parent Organization",
            "type": "relationship",
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "parentAdminIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent admins",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "adminIDs",
                "parentAdminIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent admins",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentIDs": {
            "isVirtual": true,
            "items": {
              "title": "parent org ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "parent org ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentOwnerIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent owners",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "ownerIDs",
                "parentOwnerIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent owners",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "test": {
            "searchable": true,
            "title": "test",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
        },
        "required": [
          "name",
        ],
        "title": "Alpha realm - Organization",
        "type": "object",
      },
    },
    {
      "name": "bravo_organization",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "description": "An organization or tenant, whose resources are managed by organizational admins.",
        "icon": "fa-building",
        "order": [
          "name",
          "description",
          "owners",
          "admins",
          "members",
          "parent",
          "children",
          "adminIDs",
          "ownerIDs",
          "parentAdminIDs",
          "parentOwnerIDs",
          "parentIDs",
        ],
        "properties": {
          "adminIDs": {
            "isVirtual": true,
            "items": {
              "title": "admin ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "admins",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Admin user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "admins": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "adminOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Administrators",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "children": {
            "description": "Child Organizations",
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "Organization",
                  "notify": true,
                  "path": "managed/bravo_organization",
                  "query": {
                    "fields": [
                      "name",
                      "description",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "parent",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Child Organizations",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "description": {
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "members": {
            "items": {
              "notifySelf": false,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": true,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "memberOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "searchable": true,
            "title": "Name",
            "type": "string",
            "userEditable": true,
            "viewable": true,
          },
          "ownerIDs": {
            "isVirtual": true,
            "items": {
              "title": "owner ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
              ],
              "referencedRelationshipFields": [
                "owners",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "Owner user ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "owners": {
            "items": {
              "notifySelf": true,
              "properties": {
                "_ref": {
                  "type": "string",
                },
                "_refProperties": {
                  "properties": {
                    "_id": {
                      "propName": "_id",
                      "required": false,
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "label": "User",
                  "notify": false,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                    "sortKeys": [],
                  },
                },
              ],
              "reversePropertyName": "ownerOfOrg",
              "reverseRelationship": true,
              "type": "relationship",
              "validate": true,
            },
            "notifyRelationships": [
              "children",
            ],
            "returnByDefault": false,
            "searchable": false,
            "title": "Owner",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "parent": {
            "description": "Parent Organization",
            "notifyRelationships": [
              "children",
              "members",
            ],
            "notifySelf": true,
            "properties": {
              "_ref": {
                "type": "string",
              },
              "_refProperties": {
                "properties": {
                  "_id": {
                    "propName": "_id",
                    "required": false,
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "resourceCollection": [
              {
                "label": "Organization",
                "notify": false,
                "path": "managed/bravo_organization",
                "query": {
                  "fields": [
                    "name",
                    "description",
                  ],
                  "queryFilter": "true",
                  "sortKeys": [],
                },
              },
            ],
            "returnByDefault": false,
            "reversePropertyName": "children",
            "reverseRelationship": true,
            "searchable": false,
            "title": "Parent Organization",
            "type": "relationship",
            "userEditable": false,
            "validate": true,
            "viewable": true,
          },
          "parentAdminIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent admins",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "adminIDs",
                "parentAdminIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent admins",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentIDs": {
            "isVirtual": true,
            "items": {
              "title": "parent org ids",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "_id",
                "parentIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "parent org ids",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
          "parentOwnerIDs": {
            "isVirtual": true,
            "items": {
              "title": "user ids of parent owners",
              "type": "string",
            },
            "queryConfig": {
              "flattenProperties": true,
              "referencedObjectFields": [
                "ownerIDs",
                "parentOwnerIDs",
              ],
              "referencedRelationshipFields": [
                "parent",
              ],
            },
            "returnByDefault": true,
            "searchable": false,
            "title": "user ids of parent owners",
            "type": "array",
            "userEditable": false,
            "viewable": false,
          },
        },
        "required": [
          "name",
        ],
        "title": "Bravo realm - Organization",
        "type": "object",
      },
    },
    {
      "name": "alpha_group",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "icon": "fa-group",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
        "mat-icon": "group",
        "order": [
          "_id",
          "name",
          "description",
          "condition",
          "members",
        ],
        "properties": {
          "_id": {
            "description": "Group ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "propertyName": "name",
                },
                "policyId": "id-must-equal-property",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": false,
          },
          "condition": {
            "description": "A filter for conditionally assigned members",
            "isConditional": true,
            "policies": [
              {
                "policyId": "valid-query-filter",
              },
            ],
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "Group Description",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": false,
            "viewable": true,
          },
          "members": {
            "description": "Group Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Group Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/alpha_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "groups",
              "reverseRelationship": true,
              "title": "Group Members Items",
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "description": "Group Name",
            "policies": [
              {
                "policyId": "required",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/*",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [
          "name",
        ],
        "title": "Alpha realm - Group",
        "viewable": true,
      },
    },
    {
      "name": "bravo_group",
      "schema": {
        "$schema": "http://forgerock.org/json-schema#",
        "icon": "fa-group",
        "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
        "mat-icon": "group",
        "order": [
          "_id",
          "name",
          "description",
          "condition",
          "members",
        ],
        "properties": {
          "_id": {
            "description": "Group ID",
            "isPersonal": false,
            "policies": [
              {
                "params": {
                  "propertyName": "name",
                },
                "policyId": "id-must-equal-property",
              },
            ],
            "searchable": false,
            "type": "string",
            "usageDescription": "",
            "userEditable": false,
            "viewable": false,
          },
          "condition": {
            "description": "A filter for conditionally assigned members",
            "isConditional": true,
            "policies": [
              {
                "policyId": "valid-query-filter",
              },
            ],
            "searchable": false,
            "title": "Condition",
            "type": "string",
            "viewable": false,
          },
          "description": {
            "description": "Group Description",
            "searchable": true,
            "title": "Description",
            "type": "string",
            "userEditable": false,
            "viewable": true,
          },
          "members": {
            "description": "Group Members",
            "items": {
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
              "properties": {
                "_ref": {
                  "description": "References a relationship from a managed object",
                  "type": "string",
                },
                "_refProperties": {
                  "description": "Supports metadata within the relationship",
                  "properties": {
                    "_grantType": {
                      "description": "Grant Type",
                      "label": "Grant Type",
                      "type": "string",
                    },
                    "_id": {
                      "description": "_refProperties object ID",
                      "type": "string",
                    },
                  },
                  "title": "Group Members Items _refProperties",
                  "type": "object",
                },
              },
              "resourceCollection": [
                {
                  "conditionalAssociation": true,
                  "label": "User",
                  "notify": true,
                  "path": "managed/bravo_user",
                  "query": {
                    "fields": [
                      "userName",
                      "givenName",
                      "sn",
                    ],
                    "queryFilter": "true",
                  },
                },
              ],
              "reversePropertyName": "groups",
              "reverseRelationship": true,
              "title": "Group Members Items",
              "type": "relationship",
              "validate": true,
            },
            "policies": [],
            "returnByDefault": false,
            "searchable": false,
            "title": "Members",
            "type": "array",
            "userEditable": false,
            "viewable": true,
          },
          "name": {
            "description": "Group Name",
            "policies": [
              {
                "policyId": "required",
              },
              {
                "params": {
                  "forbiddenChars": [
                    "/*",
                  ],
                },
                "policyId": "cannot-contain-characters",
              },
            ],
            "searchable": false,
            "title": "Name",
            "type": "string",
            "viewable": true,
          },
        },
        "required": [
          "name",
        ],
        "title": "Bravo realm - Group",
        "viewable": true,
      },
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/metrics.json 1`] = `
{
  "_id": "metrics",
  "enabled": true,
  "prometheusRole": "&{openidm.prometheus.role}",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/notification/passwordUpdate.json 1`] = `
{
  "_id": "notification/passwordUpdate",
  "condition": {
    "file": "propertiesModifiedFilter.groovy",
    "globals": {
      "propertiesToCheck": [
        "password",
      ],
    },
    "type": "groovy",
  },
  "enabled": false,
  "methods": [
    "update",
    "patch",
  ],
  "notification": {
    "message": "Your password has been updated.",
    "notificationType": "info",
  },
  "path": "managed/alpha_user/*",
  "target": {
    "resource": "managed/alpha_user/{{response/_id}}",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/notification/profileUpdate.json 1`] = `
{
  "_id": "notification/profileUpdate",
  "condition": {
    "file": "propertiesModifiedFilter.groovy",
    "globals": {
      "propertiesToCheck": [
        "userName",
        "givenName",
        "sn",
        "mail",
        "description",
        "accountStatus",
        "telephoneNumber",
        "postalAddress",
        "address2",
        "city",
        "postalCode",
        "country",
        "stateProvince",
        "preferences",
      ],
    },
    "type": "groovy",
  },
  "enabled": false,
  "methods": [
    "update",
    "patch",
  ],
  "notification": {
    "message": "Your profile has been updated.",
    "notificationType": "info",
  },
  "path": "managed/alpha_user/*",
  "target": {
    "resource": "managed/alpha_user/{{response/_id}}",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/notificationFactory.json 1`] = `
{
  "_id": "notificationFactory",
  "enabled": false,
  "threadPool": {
    "maxPoolThreads": 10,
    "maxQueueSize": 20000,
    "steadyPoolThreads": 2,
    "threadKeepAlive": 60,
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/policy.json 1`] = `
{
  "_id": "policy",
  "additionalFiles": [],
  "file": "policy.js",
  "resources": [
    {
      "calculatedProperties": {
        "source": "require('selfServicePolicies').getRegistrationProperties()",
        "type": "text/javascript",
      },
      "resource": "selfservice/registration",
    },
    {
      "calculatedProperties": {
        "source": "require('selfServicePolicies').getResetProperties()",
        "type": "text/javascript",
      },
      "resource": "selfservice/reset",
    },
    {
      "properties": [
        {
          "name": "_id",
          "policies": [
            {
              "params": {
                "forbiddenChars": [
                  "/",
                ],
              },
              "policyId": "cannot-contain-characters",
            },
          ],
        },
        {
          "name": "password",
          "policies": [
            {
              "params": {
                "minLength": 8,
              },
              "policyId": "minimum-length",
            },
          ],
        },
      ],
      "resource": "internal/user/*",
    },
    {
      "properties": [
        {
          "name": "name",
          "policies": [
            {
              "policyId": "required",
            },
            {
              "policyId": "not-empty",
            },
            {
              "params": {
                "forbiddenChars": [
                  "/*",
                ],
              },
              "policyId": "cannot-contain-characters",
            },
          ],
        },
        {
          "name": "temporalConstraints",
          "policies": [
            {
              "policyId": "valid-temporal-constraints",
            },
          ],
        },
        {
          "name": "condition",
          "policies": [
            {
              "policyId": "valid-query-filter",
            },
          ],
        },
        {
          "name": "privileges",
          "policies": [
            {
              "params": {
                "types": [
                  "array",
                ],
              },
              "policyId": "valid-type",
            },
            {
              "params": {
                "properties": [
                  {
                    "name": "name",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "types": [
                            "string",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                    ],
                  },
                  {
                    "name": "path",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "forbiddenChars": [
                            "/*",
                          ],
                        },
                        "policyId": "cannot-contain-characters",
                      },
                      {
                        "policyId": "valid-privilege-path",
                      },
                    ],
                  },
                  {
                    "name": "accessFlags",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "types": [
                            "array",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                      {
                        "policyId": "valid-accessFlags-object",
                      },
                    ],
                  },
                  {
                    "name": "actions",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "params": {
                          "types": [
                            "array",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                    ],
                  },
                  {
                    "name": "permissions",
                    "policies": [
                      {
                        "policyId": "required",
                      },
                      {
                        "policyId": "not-empty",
                      },
                      {
                        "params": {
                          "types": [
                            "array",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                      {
                        "policyId": "valid-permissions",
                      },
                    ],
                  },
                  {
                    "name": "filter",
                    "policies": [
                      {
                        "params": {
                          "types": [
                            "string",
                            "null",
                          ],
                        },
                        "policyId": "valid-type",
                      },
                      {
                        "policyId": "valid-query-filter",
                      },
                    ],
                  },
                ],
              },
              "policyId": "valid-array-items",
            },
          ],
        },
      ],
      "resource": "internal/role/*",
    },
    {
      "properties": [
        {
          "name": "temporalConstraints",
          "policies": [
            {
              "policyId": "valid-temporal-constraints",
            },
          ],
        },
        {
          "name": "condition",
          "policies": [
            {
              "policyId": "valid-query-filter",
            },
          ],
        },
      ],
      "resource": "managed/role/*",
    },
  ],
  "type": "text/javascript",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/privilegeAssignments.json 1`] = `
{
  "_id": "privilegeAssignments",
  "privilegeAssignments": [
    {
      "name": "ownerPrivileges",
      "privileges": [
        "owner-view-update-delete-orgs",
        "owner-create-orgs",
        "owner-view-update-delete-admins-and-members",
        "owner-create-admins",
        "admin-view-update-delete-members",
        "admin-create-members",
      ],
      "relationshipField": "ownerOfOrg",
    },
    {
      "name": "adminPrivileges",
      "privileges": [
        "admin-view-update-delete-orgs",
        "admin-create-orgs",
        "admin-view-update-delete-members",
        "admin-create-members",
      ],
      "relationshipField": "adminOfOrg",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/privileges.json 1`] = `
{
  "_id": "privileges",
  "privileges": [
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
      "name": "owner-view-update-delete-orgs",
      "path": "managed/organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": false,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "owner-create-orgs",
      "path": "managed/organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "owner-view-update-delete-admins-and-members",
      "path": "managed/user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
      "name": "owner-create-admins",
      "path": "managed/user",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
      "name": "admin-view-update-delete-orgs",
      "path": "managed/organization",
      "permissions": [
        "VIEW",
        "UPDATE",
        "DELETE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "name",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "owners",
          "readOnly": true,
        },
        {
          "attribute": "admins",
          "readOnly": true,
        },
        {
          "attribute": "members",
          "readOnly": false,
        },
        {
          "attribute": "parent",
          "readOnly": false,
        },
        {
          "attribute": "children",
          "readOnly": false,
        },
        {
          "attribute": "parentIDs",
          "readOnly": true,
        },
        {
          "attribute": "adminIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentAdminIDs",
          "readOnly": true,
        },
        {
          "attribute": "ownerIDs",
          "readOnly": true,
        },
        {
          "attribute": "parentOwnerIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/parent pr",
      "name": "admin-create-orgs",
      "path": "managed/organization",
      "permissions": [
        "CREATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
      "name": "admin-view-update-delete-members",
      "path": "managed/user",
      "permissions": [
        "VIEW",
        "DELETE",
        "UPDATE",
      ],
    },
    {
      "accessFlags": [
        {
          "attribute": "userName",
          "readOnly": false,
        },
        {
          "attribute": "password",
          "readOnly": false,
        },
        {
          "attribute": "givenName",
          "readOnly": false,
        },
        {
          "attribute": "sn",
          "readOnly": false,
        },
        {
          "attribute": "mail",
          "readOnly": false,
        },
        {
          "attribute": "description",
          "readOnly": false,
        },
        {
          "attribute": "accountStatus",
          "readOnly": false,
        },
        {
          "attribute": "telephoneNumber",
          "readOnly": false,
        },
        {
          "attribute": "postalAddress",
          "readOnly": false,
        },
        {
          "attribute": "city",
          "readOnly": false,
        },
        {
          "attribute": "postalCode",
          "readOnly": false,
        },
        {
          "attribute": "country",
          "readOnly": false,
        },
        {
          "attribute": "stateProvince",
          "readOnly": false,
        },
        {
          "attribute": "roles",
          "readOnly": false,
        },
        {
          "attribute": "manager",
          "readOnly": false,
        },
        {
          "attribute": "authzRoles",
          "readOnly": false,
        },
        {
          "attribute": "reports",
          "readOnly": false,
        },
        {
          "attribute": "effectiveRoles",
          "readOnly": false,
        },
        {
          "attribute": "effectiveAssignments",
          "readOnly": false,
        },
        {
          "attribute": "lastSync",
          "readOnly": false,
        },
        {
          "attribute": "kbaInfo",
          "readOnly": false,
        },
        {
          "attribute": "preferences",
          "readOnly": false,
        },
        {
          "attribute": "consentedMappings",
          "readOnly": false,
        },
        {
          "attribute": "memberOfOrg",
          "readOnly": false,
        },
        {
          "attribute": "adminOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "ownerOfOrg",
          "readOnly": true,
        },
        {
          "attribute": "memberOfOrgIDs",
          "readOnly": true,
        },
      ],
      "actions": [],
      "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
      "name": "admin-create-members",
      "path": "managed/user",
      "permissions": [
        "CREATE",
      ],
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/process/access.json 1`] = `
{
  "_id": "process/access",
  "workflowAccess": [
    {
      "propertiesCheck": {
        "matches": ".*",
        "property": "_id",
        "requiresRole": "internal/role/openidm-authorized",
      },
    },
    {
      "propertiesCheck": {
        "matches": ".*",
        "property": "_id",
        "requiresRole": "internal/role/openidm-admin",
      },
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/provisioner.openicf.connectorinfoprovider.json 1`] = `
{
  "_id": "provisioner.openicf.connectorinfoprovider",
  "connectorsLocation": "connectors",
  "remoteConnectorClients": [],
  "remoteConnectorClientsGroups": [],
  "remoteConnectorServers": [],
  "remoteConnectorServersGroups": [],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/repo.ds.json 1`] = `
{
  "_id": "repo.ds",
  "commands": {
    "delete-mapping-links": {
      "_queryFilter": "/linkType eq "\${mapping}"",
      "operation": "DELETE",
    },
    "delete-target-ids-for-recon": {
      "_queryFilter": "/reconId eq "\${reconId}"",
      "operation": "DELETE",
    },
  },
  "embedded": false,
  "ldapConnectionFactories": {
    "bind": {
      "availabilityCheckIntervalSeconds": 30,
      "availabilityCheckTimeoutMilliSeconds": 10000,
      "connectionPoolSize": 50,
      "connectionSecurity": "none",
      "heartBeatIntervalSeconds": 60,
      "heartBeatTimeoutMilliSeconds": 10000,
      "primaryLdapServers": [
        {
          "hostname": "userstore-0.userstore",
          "port": 1389,
        },
      ],
      "secondaryLdapServers": [
        {
          "hostname": "userstore-2.userstore",
          "port": 1389,
        },
      ],
    },
    "root": {
      "authentication": {
        "simple": {
          "bindDn": "uid=admin",
          "bindPassword": "&{userstore.password}",
        },
      },
      "inheritFrom": "bind",
    },
  },
  "maxConnectionAttempts": 5,
  "queries": {
    "explicit": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
    },
    "generic": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "get-by-field-value": {
        "_queryFilter": "/\${field} eq "\${value}"",
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq "\${userId}"",
        "_sortKeys": "-createDate",
      },
      "get-recons": {
        "_fields": "reconId,mapping,activitydate",
        "_queryFilter": "/entryType eq "summary"",
        "_sortKeys": "-activitydate",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq "\${instanceId}"",
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
      },
      "query-cluster-instances": {
        "_queryFilter": "true",
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1",
      },
    },
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
    },
    "explicitMapping": {
      "clusteredrecontargetids": {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-recon-clusteredTargetIds",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-recon-id",
            "type": "simple",
          },
          "targetIds": {
            "ldapAttribute": "fr-idm-recon-targetIds",
            "type": "json",
          },
        },
      },
      "dsconfig/attributeValue": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-attribute-value-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "matchAttribute": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-match-attribute",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/characterSet": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-character-set-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowUnclassifiedCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-allow-unclassified-characters",
            "type": "simple",
          },
          "characterSet": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-character-set",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minCharacterSets": {
            "ldapAttribute": "ds-cfg-min-character-sets",
            "type": "simple",
          },
        },
      },
      "dsconfig/dictionary": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-dictionary-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "dictionaryFile": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-dictionary-file",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/lengthBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-length-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxPasswordLength": {
            "ldapAttribute": "ds-cfg-max-password-length",
            "type": "simple",
          },
          "minPasswordLength": {
            "ldapAttribute": "ds-cfg-min-password-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/passwordPolicies": {
        "dnTemplate": "cn=Password Policies,cn=config",
        "objectClasses": [
          "ds-cfg-password-policy",
          "ds-cfg-authentication-policy",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowPreEncodedPasswords": {
            "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
            "type": "simple",
          },
          "defaultPasswordStorageScheme": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-default-password-storage-scheme",
            "type": "simple",
          },
          "deprecatedPasswordStorageScheme": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
            "type": "simple",
          },
          "maxPasswordAge": {
            "ldapAttribute": "ds-cfg-max-password-age",
            "type": "simple",
          },
          "passwordAttribute": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-password-attribute",
            "type": "simple",
          },
          "passwordHistoryCount": {
            "ldapAttribute": "ds-cfg-password-history-count",
            "type": "simple",
          },
          "validator": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-password-validator",
            "type": "simple",
          },
        },
      },
      "dsconfig/repeatedCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-repeated-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxConsecutiveLength": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-max-consecutive-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/similarityBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-similarity-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minPasswordDifference": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-password-difference",
            "type": "simple",
          },
        },
      },
      "dsconfig/uniqueCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-unique-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minUniqueCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-unique-characters",
            "type": "simple",
          },
        },
      },
      "dsconfig/userDefinedVirtualAttribute": {
        "dnTemplate": "cn=Virtual Attributes,cn=config",
        "objectClasses": [
          "ds-cfg-user-defined-virtual-attribute",
          "ds-cfg-virtual-attribute",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "attributeType": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-attribute-type",
            "type": "simple",
          },
          "baseDn": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-base-dn",
            "type": "simple",
          },
          "conflictBehavior": {
            "ldapAttribute": "ds-cfg-conflict-behavior",
            "type": "simple",
          },
          "enabled": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "filter": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-filter",
            "type": "simple",
          },
          "groupDn": {
            "ldapAttribute": "ds-cfg-group-dn",
            "type": "simple",
          },
          "javaClass": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "scope": {
            "ldapAttribute": "ds-cfg-scope",
            "type": "simple",
          },
          "value": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-value",
            "type": "simple",
          },
        },
      },
      "identities/admin": {
        "dnTemplate": "o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/alpha": {
        "dnTemplate": "o=alpha,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/bravo": {
        "dnTemplate": "o=bravo,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "fr-idm-internal-role",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "authzMembers": {
            "isMultiValued": true,
            "propertyName": "authzRoles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "condition": {
            "ldapAttribute": "fr-idm-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "name": {
            "ldapAttribute": "fr-idm-name",
            "type": "simple",
          },
          "privileges": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-privilege",
            "type": "json",
          },
          "temporalConstraints": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-temporal-constraints",
            "type": "json",
          },
        },
      },
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-internal-user",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "password": {
            "ldapAttribute": "fr-idm-password",
            "type": "json",
          },
        },
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-link",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "firstId": {
            "ldapAttribute": "fr-idm-link-firstId",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-link-qualifier",
            "type": "simple",
          },
          "linkType": {
            "ldapAttribute": "fr-idm-link-type",
            "type": "simple",
          },
          "secondId": {
            "ldapAttribute": "fr-idm-link-secondId",
            "type": "simple",
          },
        },
      },
      "locks": {
        "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-lock",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-lock-nodeid",
            "type": "simple",
          },
        },
      },
      "managed/teammember": {
        "dnTemplate": "ou=people,o=root,ou=identities",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "fraas-admin",
          "iplanet-am-user-service",
          "deviceProfilesContainer",
          "devicePrintProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/teammembermeta",
            "type": "reference",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "inviteDate": {
            "ldapAttribute": "fr-idm-inviteDate",
            "type": "simple",
          },
          "jurisdiction": {
            "ldapAttribute": "fr-idm-jurisdiction",
            "type": "simple",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "onboardDate": {
            "ldapAttribute": "fr-idm-onboardDate",
            "type": "simple",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/teammembergroup": {
        "dnTemplate": "ou=groups,o=root,ou=identities",
        "objectClasses": [
          "groupofuniquenames",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "ldapAttribute": "uniqueMember",
            "type": "simple",
          },
        },
      },
      "recon/assoc": {
        "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
        "namingStrategy": {
          "dnAttribute": "fr-idm-reconassoc-reconid",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "fr-idm-reconassoc",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "fr-idm-reconassoc-reconid",
            "type": "simple",
          },
          "finishTime": {
            "ldapAttribute": "fr-idm-reconassoc-finishtime",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "subResources": {
          "entry": {
            "namingStrategy": {
              "dnAttribute": "uid",
              "type": "clientDnNaming",
            },
            "resource": "recon-assoc-entry",
            "type": "collection",
          },
        },
      },
      "recon/assoc/entry": {
        "objectClasses": [
          "uidObject",
          "fr-idm-reconassocentry",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "action": {
            "ldapAttribute": "fr-idm-reconassocentry-action",
            "type": "simple",
          },
          "ambiguousTargetObjectIds": {
            "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
            "type": "simple",
          },
          "exception": {
            "ldapAttribute": "fr-idm-reconassocentry-exception",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "message": {
            "ldapAttribute": "fr-idm-reconassocentry-message",
            "type": "simple",
          },
          "messageDetail": {
            "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
            "type": "simple",
          },
          "phase": {
            "ldapAttribute": "fr-idm-reconassocentry-phase",
            "type": "simple",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-reconassocentry-reconid",
            "type": "simple",
          },
          "situation": {
            "ldapAttribute": "fr-idm-reconassocentry-situation",
            "type": "simple",
          },
          "sourceObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "status": {
            "ldapAttribute": "fr-idm-reconassocentry-status",
            "type": "simple",
          },
          "targetObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "resourceName": "recon-assoc-entry",
        "subResourceRouting": [
          {
            "prefix": "entry",
            "template": "recon/assoc/{reconId}/entry",
          },
        ],
      },
      "sync/queue": {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-syncqueue",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "context": {
            "ldapAttribute": "fr-idm-syncqueue-context",
            "type": "json",
          },
          "createDate": {
            "ldapAttribute": "fr-idm-syncqueue-createdate",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-syncqueue-mapping",
            "type": "simple",
          },
          "newObject": {
            "ldapAttribute": "fr-idm-syncqueue-newobject",
            "type": "json",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-syncqueue-nodeid",
            "type": "simple",
          },
          "objectRev": {
            "ldapAttribute": "fr-idm-syncqueue-objectRev",
            "type": "simple",
          },
          "oldObject": {
            "ldapAttribute": "fr-idm-syncqueue-oldobject",
            "type": "json",
          },
          "remainingRetries": {
            "ldapAttribute": "fr-idm-syncqueue-remainingretries",
            "type": "simple",
          },
          "resourceCollection": {
            "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
            "type": "simple",
          },
          "resourceId": {
            "ldapAttribute": "fr-idm-syncqueue-resourceid",
            "type": "simple",
          },
          "state": {
            "ldapAttribute": "fr-idm-syncqueue-state",
            "type": "simple",
          },
          "syncAction": {
            "ldapAttribute": "fr-idm-syncqueue-syncaction",
            "type": "simple",
          },
        },
      },
    },
    "genericMapping": {
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
        "objectClasses": [
          "uidObject",
          "fr-idm-cluster-obj",
        ],
      },
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
      },
      "file": {
        "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
      },
      "internal/notification": {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-notification-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-notification",
        ],
        "properties": {
          "target": {
            "propertyName": "_notifications",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "internal/usermeta": {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "jsonstorage": {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
      },
      "managed/alpha_group": {
        "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_organization": {
        "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/alpha_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
        },
      },
      "managed/alpha_role": {
        "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_user": {
        "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/alpha_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/alpha_usermeta": {
        "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_group": {
        "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_organization": {
        "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/bravo_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
        },
      },
      "managed/bravo_role": {
        "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_user": {
        "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/bravo_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/bravo_usermeta": {
        "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/teammembermeta": {
        "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/teammember",
            "type": "reverseReference",
          },
        },
      },
      "reconprogressstate": {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
        "objectClasses": [
          "uidObject",
          "fr-idm-relationship",
        ],
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "ui/*": {
        "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
      },
    },
  },
  "rest2LdapOptions": {
    "mvccAttribute": "etag",
    "readOnUpdatePolicy": "controls",
    "returnNullForMissingProperties": true,
    "useMvcc": true,
    "usePermissiveModify": true,
    "useSubtreeDelete": true,
  },
  "security": {
    "keyManager": "jvm",
    "trustManager": "jvm",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/repo.init.json 1`] = `
{
  "_id": "repo.init",
  "insert": {
    "internal/role": [
      {
        "description": "Administrative access",
        "id": "openidm-admin",
        "name": "openidm-admin",
      },
      {
        "description": "Basic minimum user",
        "id": "openidm-authorized",
        "name": "openidm-authorized",
      },
      {
        "description": "Anonymous access",
        "id": "openidm-reg",
        "name": "openidm-reg",
      },
      {
        "description": "Authenticated via certificate",
        "id": "openidm-cert",
        "name": "openidm-cert",
      },
      {
        "description": "Allowed to reassign workflow tasks",
        "id": "openidm-tasks-manager",
        "name": "openidm-tasks-manager",
      },
      {
        "description": "Platform provisioning access",
        "id": "platform-provisioning",
        "name": "platform-provisioning",
      },
    ],
    "internal/user": [
      {
        "id": "openidm-admin",
        "password": "&{openidm.admin.password}",
      },
      {
        "id": "anonymous",
        "password": "anonymous",
      },
      {
        "id": "idm-provisioning",
      },
      {
        "id": "connector-server-client",
      },
    ],
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/router.json 1`] = `
{
  "_id": "router",
  "filters": [
    {
      "condition": {
        "source": "context.caller.external === true || context.current.name === 'selfservice'",
        "type": "text/javascript",
      },
      "onRequest": {
        "source": "require('fraas-authz').testAccess()",
        "type": "text/javascript",
      },
      "pattern": "^(managed|internal)($|(/.+))",
    },
    {
      "condition": {
        "source": "context.caller.external === true || context.current.name === 'selfservice'",
        "type": "text/javascript",
      },
      "evaluatePrivileges": true,
      "onRequest": {
        "source": "require('router-authz').testAccess()",
        "type": "text/javascript",
      },
    },
    {
      "methods": [
        "create",
        "update",
      ],
      "onRequest": {
        "file": "policyFilter.js",
        "type": "text/javascript",
      },
      "pattern": "^(managed|system|internal)($|(/.+))",
    },
    {
      "condition": {
        "source": "context.caller.external === true && (typeof context.privilege === 'undefined' || Object.keys(context.privilege.matchingPrivileges).length === 0)",
        "type": "text/javascript",
      },
      "onResponse": {
        "source": "require('relationshipFilter').filterResponse()",
        "type": "text/javascript",
      },
      "pattern": "^(managed|internal)($|(/.+))",
    },
    {
      "condition": {
        "source": "require('emailFilter').isAdminTemplate()",
        "type": "text/javascript",
      },
      "methods": [
        "action",
      ],
      "onRequest": {
        "source": "require('emailFilter').handleAdminTemplate()",
        "type": "text/javascript",
      },
      "pattern": "^external/email",
    },
    {
      "methods": [
        "create",
        "patch",
        "read",
        "update",
      ],
      "onRequest": {
        "source": "require('userPropertyConversion').filterRequest();",
        "type": "text/javascript",
      },
      "pattern": "^(repo/managed/alpha_user|repo/managed/bravo_user)($|(/.+))",
    },
    {
      "methods": [
        "create",
        "read",
        "update",
        "delete",
        "patch",
      ],
      "onResponse": {
        "source": "require('userPropertyConversion').filterResponse();",
        "type": "text/javascript",
      },
      "pattern": "^(repo/managed/alpha_user|repo/managed/bravo_user)($|(/.+))",
    },
    {
      "methods": [
        "create",
        "patch",
        "update",
      ],
      "onRequest": {
        "file": "script/checkRequestPropertiesFilter.js",
        "type": "text/javascript",
      },
      "pattern": "^(managed/alpha_user|managed/bravo_user)($|(/.+))",
    },
    {
      "methods": [
        "patch",
        "update",
      ],
      "onRequest": {
        "file": "script/checkSchemaPropertiesFilter.js",
        "type": "text/javascript",
      },
      "pattern": "^config/managed$",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/scheduler.json 1`] = `
{
  "_id": "scheduler",
  "scheduler": {
    "executePersistentSchedules": {
      "$bool": "&{openidm.scheduler.execute.persistent.schedules}",
    },
  },
  "threadPool": {
    "threadCount": 10,
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/script.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/secrets.json 1`] = `
{
  "_id": "secrets",
  "populateDefaults": true,
  "stores": [
    {
      "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
      "config": {
        "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
        "mappings": [
          {
            "aliases": [
              "&{openidm.config.crypto.alias|openidm-sym-default}",
              "openidm-localhost",
            ],
            "secretId": "idm.default",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.alias|openidm-sym-default}",
            ],
            "secretId": "idm.config.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.alias|openidm-sym-default}",
            ],
            "secretId": "idm.password.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.https.keystore.cert.alias|openidm-localhost}",
            ],
            "secretId": "idm.jwt.session.module.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}",
            ],
            "secretId": "idm.jwt.session.module.signing",
            "types": [
              "SIGN",
              "VERIFY",
            ],
          },
          {
            "aliases": [
              "selfservice",
            ],
            "secretId": "idm.selfservice.encryption",
            "types": [
              "ENCRYPT",
              "DECRYPT",
            ],
          },
          {
            "aliases": [
              "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}",
            ],
            "secretId": "idm.selfservice.signing",
            "types": [
              "SIGN",
              "VERIFY",
            ],
          },
        ],
        "providerName": "&{openidm.keystore.provider|SunJCE}",
        "storePassword": "&{openidm.keystore.password|changeit}",
        "storetype": "&{openidm.keystore.type|JCEKS}",
      },
      "name": "mainKeyStore",
    },
    {
      "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
      "config": {
        "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
        "mappings": [],
        "providerName": "&{openidm.truststore.provider|SUN}",
        "storePassword": "&{openidm.truststore.password|changeit}",
        "storetype": "&{openidm.truststore.type|JKS}",
      },
      "name": "mainTrustStore",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.kba.json 1`] = `
{
  "_id": "selfservice.kba",
  "kbaPropertyName": "kbaInfo",
  "minimumAnswersToDefine": 1,
  "minimumAnswersToVerify": 1,
  "questions": {
    "1": {
      "en": "What's your favorite color?",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.propertymap.json 1`] = `
{
  "_id": "selfservice.propertymap",
  "properties": [
    {
      "source": "givenName",
      "target": "givenName",
    },
    {
      "source": "familyName",
      "target": "sn",
    },
    {
      "source": "email",
      "target": "mail",
    },
    {
      "condition": "/object/postalAddress  pr",
      "source": "postalAddress",
      "target": "postalAddress",
    },
    {
      "condition": "/object/addressLocality  pr",
      "source": "addressLocality",
      "target": "city",
    },
    {
      "condition": "/object/addressRegion  pr",
      "source": "addressRegion",
      "target": "stateProvince",
    },
    {
      "condition": "/object/postalCode  pr",
      "source": "postalCode",
      "target": "postalCode",
    },
    {
      "condition": "/object/country  pr",
      "source": "country",
      "target": "country",
    },
    {
      "condition": "/object/phone  pr",
      "source": "phone",
      "target": "telephoneNumber",
    },
    {
      "source": "username",
      "target": "userName",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice.terms.json 1`] = `
{
  "_id": "selfservice.terms",
  "active": "0.0",
  "uiConfig": {
    "buttonText": "Accept",
    "displayName": "We've updated our terms",
    "purpose": "You must accept the updated terms in order to proceed.",
  },
  "versions": [
    {
      "createDate": "2019-10-28T04:20:11.320Z",
      "termsTranslations": {
        "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      },
      "version": "0.0",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice/registration.json 1`] = `
{
  "_id": "selfservice/registration",
  "allInOneRegistration": true,
  "snapshotToken": {
    "encryptionMethod": "A128CBC_HS256",
    "jweAlgorithm": "RSAES_PKCS1_V1_5",
    "jwsAlgorithm": "HS256",
    "tokenExpiry": 300,
    "type": "jwt",
  },
  "stageConfigs": [
    {
      "name": "parameters",
      "parameterNames": [
        "returnParams",
      ],
    },
    {
      "identityEmailField": "mail",
      "identityServiceUrl": "managed/alpha_user",
      "name": "idmUserDetails",
      "registrationProperties": [
        "userName",
        "givenName",
        "sn",
        "mail",
      ],
      "socialRegistrationEnabled": false,
    },
    {
      "kbaConfig": null,
      "name": "kbaSecurityAnswerDefinitionStage",
    },
    {
      "identityServiceUrl": "managed/alpha_user",
      "name": "selfRegistration",
    },
    {
      "identityPasswordField": "password",
      "identityUsernameField": "userName",
      "name": "localAutoLogin",
      "successUrl": "",
    },
  ],
  "storage": "stateless",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/selfservice/reset.json 1`] = `
{
  "_id": "selfservice/reset",
  "snapshotToken": {
    "encryptionMethod": "A128CBC_HS256",
    "jweAlgorithm": "RSAES_PKCS1_V1_5",
    "jwsAlgorithm": "HS256",
    "tokenExpiry": 300,
    "type": "jwt",
  },
  "stageConfigs": [
    {
      "name": "parameters",
      "parameterNames": [
        "returnParams",
      ],
    },
    {
      "identityEmailField": "mail",
      "identityIdField": "_id",
      "identityServiceUrl": "managed/alpha_user",
      "identityUsernameField": "userName",
      "name": "userQuery",
      "validQueryFields": [
        "userName",
        "mail",
        "givenName",
        "sn",
      ],
    },
    {
      "identityServiceUrl": "managed/alpha_user",
      "kbaConfig": null,
      "kbaPropertyName": "kbaInfo",
      "name": "kbaSecurityAnswerVerificationStage",
    },
    {
      "identityPasswordField": "password",
      "identityServiceUrl": "managed/alpha_user",
      "name": "resetStage",
    },
  ],
  "storage": "stateless",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/servletfilter/cors.json 1`] = `
{
  "_id": "servletfilter/cors",
  "classPathURLs": [],
  "filterClass": "org.eclipse.jetty.servlets.CrossOriginFilter",
  "initParams": {
    "allowCredentials": false,
    "allowedHeaders": "authorization,accept,content-type,origin,x-requested-with,cache-control,accept-api-version",
    "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
    "allowedOrigins": "*",
    "chainPreflight": false,
    "exposedHeaders": "WWW-Authenticate",
  },
  "requestAttributes": {},
  "scriptExtensions": {},
  "systemProperties": {},
  "urlPatterns": [
    "/*",
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/servletfilter/payload.json 1`] = `
{
  "_id": "servletfilter/payload",
  "classPathURLs": [],
  "filterClass": "org.forgerock.openidm.jetty.LargePayloadServletFilter",
  "initParams": {
    "maxRequestSizeInMegabytes": 5,
  },
  "requestAttributes": {},
  "scriptExtensions": {},
  "systemProperties": {},
  "urlPatterns": [
    "&{openidm.servlet.alias}/*",
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/servletfilter/upload.json 1`] = `
{
  "_id": "servletfilter/upload",
  "classPathURLs": [],
  "filterClass": "org.forgerock.openidm.jetty.LargePayloadServletFilter",
  "initParams": {
    "maxRequestSizeInMegabytes": 50,
  },
  "requestAttributes": {},
  "scriptExtensions": {},
  "systemProperties": {},
  "urlPatterns": [
    "&{openidm.servlet.upload.alias}/*",
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/admin.json 1`] = `
{
  "_id": "ui.context/admin",
  "defaultDir": "&{idm.install.dir}/ui/admin/default",
  "enabled": true,
  "extensionDir": "&{idm.install.dir}/ui/admin/extension",
  "responseHeaders": {
    "X-Frame-Options": "SAMEORIGIN",
  },
  "urlContextRoot": "/admin",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/api.json 1`] = `
{
  "_id": "ui.context/api",
  "authEnabled": true,
  "cacheEnabled": false,
  "defaultDir": "&{idm.install.dir}/ui/api/default",
  "enabled": true,
  "extensionDir": "&{idm.install.dir}/ui/api/extension",
  "urlContextRoot": "/api",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/enduser.json 1`] = `
{
  "_id": "ui.context/enduser",
  "defaultDir": "&{idm.install.dir}/ui/enduser",
  "enabled": true,
  "responseHeaders": {
    "X-Frame-Options": "DENY",
  },
  "urlContextRoot": "/",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui.context/oauth.json 1`] = `
{
  "_id": "ui.context/oauth",
  "cacheEnabled": true,
  "defaultDir": "&{idm.install.dir}/ui/oauth/default",
  "enabled": true,
  "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
  "urlContextRoot": "/oauthReturn",
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/configuration.json 1`] = `
{
  "_id": "ui/configuration",
  "configuration": {
    "defaultNotificationType": "info",
    "forgotUsername": false,
    "lang": "en",
    "notificationTypes": {
      "error": {
        "iconPath": "images/notifications/error.png",
        "name": "common.notification.types.error",
      },
      "info": {
        "iconPath": "images/notifications/info.png",
        "name": "common.notification.types.info",
      },
      "warning": {
        "iconPath": "images/notifications/warning.png",
        "name": "common.notification.types.warning",
      },
    },
    "passwordReset": true,
    "passwordResetLink": "",
    "platformSettings": {
      "adminOauthClient": "idmAdminClient",
      "adminOauthClientScopes": "fr:idm:*",
      "amUrl": "/am",
      "loginUrl": "",
    },
    "roles": {
      "internal/role/openidm-admin": "ui-admin",
      "internal/role/openidm-authorized": "ui-user",
    },
    "selfRegistration": true,
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/dashboard.json 1`] = `
{
  "_id": "ui/dashboard",
  "adminDashboards": [
    {
      "isDefault": true,
      "name": "Quick Start",
      "widgets": [
        {
          "cards": [
            {
              "href": "#resource/managed/alpha_user/list/",
              "icon": "fa-user",
              "name": "Manage Users",
            },
            {
              "href": "#resource/managed/alpha_role/list/",
              "icon": "fa-check-square-o",
              "name": "Manage Roles",
            },
            {
              "href": "#connectors/add/",
              "icon": "fa-database",
              "name": "Add Connector",
            },
            {
              "href": "#mapping/add/",
              "icon": "fa-map-marker",
              "name": "Create Mapping",
            },
            {
              "href": "#managed/add/",
              "icon": "fa-tablet",
              "name": "Add Device",
            },
            {
              "href": "#settings/",
              "icon": "fa-user",
              "name": "Configure System Preferences",
            },
          ],
          "size": "large",
          "type": "quickStart",
        },
      ],
    },
    {
      "isDefault": false,
      "name": "System Monitoring",
      "widgets": [
        {
          "legendRange": {
            "month": [
              500,
              2500,
              5000,
            ],
            "week": [
              10,
              30,
              90,
              270,
              810,
            ],
            "year": [
              10000,
              40000,
              100000,
              250000,
            ],
          },
          "maxRange": "#24423c",
          "minRange": "#b0d4cd",
          "size": "large",
          "type": "audit",
        },
        {
          "size": "large",
          "type": "clusterStatus",
        },
        {
          "size": "large",
          "type": "systemHealthFull",
        },
        {
          "barchart": "false",
          "size": "large",
          "type": "lastRecon",
        },
      ],
    },
    {
      "isDefault": false,
      "name": "Resource Report",
      "widgets": [
        {
          "selected": "activeUsers",
          "size": "x-small",
          "type": "counter",
        },
        {
          "selected": "rolesEnabled",
          "size": "x-small",
          "type": "counter",
        },
        {
          "selected": "activeConnectors",
          "size": "x-small",
          "type": "counter",
        },
        {
          "size": "large",
          "type": "resourceList",
        },
      ],
    },
    {
      "isDefault": false,
      "name": "Business Report",
      "widgets": [
        {
          "graphType": "fa-pie-chart",
          "providers": [
            "Username/Password",
          ],
          "size": "x-small",
          "type": "signIns",
          "widgetTitle": "Sign-Ins",
        },
        {
          "graphType": "fa-bar-chart",
          "size": "x-small",
          "type": "passwordResets",
          "widgetTitle": "Password Resets",
        },
        {
          "graphType": "fa-line-chart",
          "providers": [
            "Username/Password",
          ],
          "size": "x-small",
          "type": "newRegistrations",
          "widgetTitle": "New Registrations",
        },
        {
          "size": "x-small",
          "timezone": {
            "hours": "07",
            "minutes": "00",
            "negative": true,
          },
          "type": "socialLogin",
        },
        {
          "selected": "socialEnabled",
          "size": "x-small",
          "type": "counter",
        },
        {
          "selected": "manualRegistrations",
          "size": "x-small",
          "type": "counter",
        },
      ],
    },
  ],
  "dashboard": {
    "widgets": [
      {
        "size": "large",
        "type": "Welcome",
      },
    ],
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/profile.json 1`] = `
{
  "_id": "ui/profile",
  "tabs": [
    {
      "name": "personalInfoTab",
      "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab",
    },
    {
      "name": "signInAndSecurity",
      "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab",
    },
    {
      "name": "preference",
      "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab",
    },
    {
      "name": "trustedDevice",
      "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab",
    },
    {
      "name": "oauthApplication",
      "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab",
    },
    {
      "name": "privacyAndConsent",
      "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab",
    },
    {
      "name": "sharing",
      "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab",
    },
    {
      "name": "auditHistory",
      "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab",
    },
    {
      "name": "accountControls",
      "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab",
    },
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/themeconfig.json 1`] = `
{
  "_id": "ui/themeconfig",
  "icon": "favicon.ico",
  "path": "",
  "settings": {
    "footer": {
      "mailto": "info@forgerock.com",
    },
    "loginLogo": {
      "alt": "ForgeRock",
      "height": "104px",
      "src": "images/login-logo-dark.png",
      "title": "ForgeRock",
      "width": "210px",
    },
    "logo": {
      "alt": "ForgeRock",
      "src": "images/logo-horizontal-white.png",
      "title": "ForgeRock",
    },
  },
  "stylesheets": [
    "css/bootstrap-3.4.1-custom.css",
    "css/structure.css",
    "css/theme.css",
  ],
}
`;

exports[`frodo idm export "frodo idm export -AD testDir1": should export all idm config entities to separate files in the "testDir" directory: testDir1/ui/themerealm.json 1`] = `
{
  "_id": "ui/themerealm",
  "realm": {
    "/": [
      {
        "_id": "d6636b33-111b-40f2-870d-f4dcb7281e43",
        "accountCardBackgroundColor": "#ffffff",
        "accountCardHeaderColor": "#23282e",
        "accountCardInnerBorderColor": "#e7eef4",
        "accountCardInputBackgroundColor": "#ffffff",
        "accountCardInputBorderColor": "#c0c9d5",
        "accountCardInputLabelColor": "#5e6d82",
        "accountCardInputSelectColor": "#e4f4fd",
        "accountCardInputTextColor": "#23282e",
        "accountCardOuterBorderColor": "#e7eef4",
        "accountCardShadow": 3,
        "accountCardTabActiveBorderColor": "#109cf1",
        "accountCardTabActiveColor": "#e4f4fd",
        "accountCardTextColor": "#5e6d82",
        "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2022</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "accountFooterEnabled": false,
        "accountNavigationBackgroundColor": "#ffffff",
        "accountNavigationTextColor": "#455469",
        "accountNavigationToggleBorderColor": "#e7eef4",
        "accountTableRowHoverColor": "#f6f8fa",
        "backgroundColor": "#324054",
        "backgroundImage": "",
        "buttonRounded": 5,
        "favicon": "https://cdn.forgerock.com/platform/themes/starter/logo-starter.svg",
        "fontFamily": "Open Sans",
        "isDefault": false,
        "journeyCardBackgroundColor": "#ffffff",
        "journeyCardShadow": 3,
        "journeyCardTextColor": "#5e6d82",
        "journeyCardTitleColor": "#23282e",
        "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2022</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "journeyFooterEnabled": false,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyInputBackgroundColor": "#ffffff",
        "journeyInputBorderColor": "#c0c9d5",
        "journeyInputLabelColor": "#5e6d82",
        "journeyInputSelectColor": "#e4f4fd",
        "journeyInputTextColor": "#23282e",
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#004067",
        "linkColor": "#0070b3",
        "linkedTrees": [],
        "logo": "https://cdn.forgerock.com/platform/themes/starter/logo-starter.svg",
        "logoAltText": "Logo",
        "logoEnabled": true,
        "logoHeight": "56",
        "logoProfile": "https://cdn.forgerock.com/platform/themes/starter/logo-starter-full.svg",
        "logoProfileAltText": "Logo",
        "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/starter/logo-starter.svg",
        "logoProfileCollapsedAltText": "Logo",
        "logoProfileHeight": "24",
        "name": "Starter Theme",
        "primaryColor": "#324054",
        "primaryOffColor": "#242E3C",
        "profileBackgroundColor": "#ffffff",
        "profileMenuHighlightColor": "#f6f8fa",
        "profileMenuHoverColor": "#f6f8fa",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#455469",
        "textColor": "#ffffff",
        "topBarBackgroundColor": "#ffffff",
        "topBarBorderColor": "#e7eef4",
        "topBarHeaderColor": "#23282e",
        "topBarTextColor": "#69788b",
      },
    ],
    "alpha": [
      {
        "_id": "86ce2f64-586d-44fe-8593-b12a85aac68d",
        "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "accountFooterEnabled": false,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#324054",
        "backgroundImage": "",
        "bodyText": "#23282e",
        "buttonRounded": 5,
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": true,
        "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "journeyFooterEnabled": false,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#0c85cf",
        "linkColor": "#109cf1",
        "linkedTrees": [],
        "logo": "",
        "logoAltText": "",
        "logoHeight": "40",
        "logoProfile": "",
        "logoProfileAltText": "",
        "logoProfileCollapsed": "",
        "logoProfileCollapsedAltText": "",
        "logoProfileCollapsedHeight": "40",
        "logoProfileHeight": "40",
        "name": "Starter Theme",
        "pageTitle": "#23282e",
        "primaryColor": "#324054",
        "primaryOffColor": "#242E3C",
        "profileBackgroundColor": "#f6f8fa",
        "profileMenuHighlightColor": "#f3f5f8",
        "profileMenuHoverColor": "#324054",
        "profileMenuHoverTextColor": "#ffffff",
        "profileMenuTextHighlightColor": "#455469",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "cd6c93e2-52e2-4340-9770-66a588343841",
        "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "accountFooterEnabled": false,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#000000",
        "buttonRounded": "0",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "journeyFooterEnabled": false,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#000000",
        "linkColor": "#000000",
        "linkedTrees": [],
        "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
        "logoAltText": "Contrast",
        "logoEnabled": true,
        "logoHeight": "72",
        "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
        "logoProfileAltText": "Contrast",
        "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
        "logoProfileCollapsedAltText": "",
        "logoProfileCollapsedHeight": "22",
        "logoProfileHeight": "22",
        "name": "Contrast",
        "pageTitle": "#23282e",
        "primaryColor": "#000000",
        "primaryOffColor": "#000000",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#000000",
        "profileMenuTextHighlightColor": "#455469",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "00203891-dde0-4114-b27a-219ae0b43a61",
        "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
        "accountFooterEnabled": true,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#5E6D82",
        "buttonRounded": "50",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
        "journeyFooterEnabled": true,
        "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
        "journeyHeaderEnabled": true,
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#C60819",
        "linkColor": "#EB0A1E",
        "linkedTrees": [],
        "logo": "",
        "logoAltText": "",
        "logoEnabled": true,
        "logoHeight": "40",
        "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
        "logoProfileAltText": "Highlander",
        "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
        "logoProfileCollapsedAltText": "Highlander",
        "logoProfileCollapsedHeight": "28",
        "logoProfileHeight": "28",
        "name": "Highlander",
        "pageTitle": "#23282e",
        "primaryColor": "#EB0A1E",
        "primaryOffColor": "#C60819",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#EB0A1E",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "b82755e8-fe9a-4d27-b66b-45e37ae12345",
        "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
        "accountFooterEnabled": true,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#5E6D82",
        "buttonRounded": "50",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
        "journeyFooterEnabled": true,
        "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
        "journeyHeaderEnabled": true,
        "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
        "journeyJustifiedContentEnabled": true,
        "journeyLayout": "justified-right",
        "journeyTheaterMode": false,
        "linkActiveColor": "#49871E",
        "linkColor": "#5AA625",
        "linkedTrees": [],
        "logo": "",
        "logoAltText": "",
        "logoEnabled": true,
        "logoHeight": "40",
        "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
        "logoProfileAltText": "RobRoy",
        "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
        "logoProfileCollapsedAltText": "RobRoy",
        "logoProfileCollapsedHeight": "28",
        "logoProfileHeight": "28",
        "name": "Robroy",
        "pageTitle": "#23282e",
        "primaryColor": "#5AA625",
        "primaryOffColor": "#49871E",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#5AA625",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "4ded6d91-ceea-400a-ae3f-42209f1b0e06",
        "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
        "accountFooterEnabled": true,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#5E6D82",
        "buttonRounded": "50",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
        "journeyFooterEnabled": true,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
        "journeyJustifiedContentEnabled": true,
        "journeyLayout": "justified-right",
        "journeyTheaterMode": true,
        "linkActiveColor": "#007661",
        "linkColor": "#009C80",
        "linkedTrees": [],
        "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
        "logoAltText": "Zardoz Logo",
        "logoEnabled": true,
        "logoHeight": "47",
        "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
        "logoProfileAltText": "Zardaz Logo",
        "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
        "logoProfileCollapsedAltText": "Zardaz Logo",
        "logoProfileCollapsedHeight": "28",
        "logoProfileHeight": "40",
        "name": "Zardoz",
        "pageTitle": "#23282e",
        "primaryColor": "#009C80",
        "primaryOffColor": "#007661",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#009C80",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "63e19668-909f-479e-83d7-be7a01cd8187",
        "accountCardBackgroundColor": "#ffffff",
        "accountCardHeaderColor": "#23282e",
        "accountCardInnerBorderColor": "#e7eef4",
        "accountCardInputBackgroundColor": "#ffffff",
        "accountCardInputBorderColor": "#c0c9d5",
        "accountCardInputLabelColor": "#5e6d82",
        "accountCardInputSelectColor": "#e4f4fd",
        "accountCardInputTextColor": "#23282e",
        "accountCardOuterBorderColor": "#e7eef4",
        "accountCardShadow": 3,
        "accountCardTabActiveBorderColor": "#109cf1",
        "accountCardTabActiveColor": "#e4f4fd",
        "accountCardTextColor": "#5e6d82",
        "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
        "accountFooterEnabled": false,
        "accountNavigationBackgroundColor": "#ffffff",
        "accountNavigationTextColor": "#455469",
        "accountNavigationToggleBorderColor": "#e7eef4",
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": true,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "accountTableRowHoverColor": "#f6f8fa",
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#000000",
        "boldLinks": false,
        "buttonRounded": "0",
        "dangerColor": "#f7685b",
        "favicon": "",
        "fontFamily": "Open Sans",
        "isDefault": false,
        "journeyCardBackgroundColor": "#ffffff",
        "journeyCardShadow": 3,
        "journeyCardTextColor": "#5e6d82",
        "journeyCardTitleColor": "#23282e",
        "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#"target="_blank"class="text-body">My Company, Inc</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Privacy Policy</a><a href="#"target="_blank"style="color:#0000ee"class="pl-3 text-body">Terms & Conditions</a></div>",
        "journeyFooterEnabled": false,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyInputBackgroundColor": "#ffffff",
        "journeyInputBorderColor": "#c0c9d5",
        "journeyInputLabelColor": "#5e6d82",
        "journeyInputSelectColor": "#e4f4fd",
        "journeyInputTextColor": "#23282e",
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#000000",
        "linkColor": "#000000",
        "linkedTrees": [
          "FrodoTest",
          "AA-FrodoTest",
        ],
        "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
        "logoAltText": "Contrast",
        "logoEnabled": false,
        "logoHeight": "72",
        "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
        "logoProfileAltText": "Contrast",
        "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
        "logoProfileCollapsedAltText": "",
        "logoProfileCollapsedHeight": "22",
        "logoProfileHeight": "22",
        "name": "NoAccess",
        "pageTitle": "#23282e",
        "primaryColor": "#000000",
        "primaryOffColor": "#000000",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#000000",
        "profileMenuTextHighlightColor": "#455469",
        "secondaryColor": "#69788b",
        "switchBackgroundColor": "#c0c9d5",
        "textColor": "#ffffff",
        "topBarBackgroundColor": "#ffffff",
        "topBarBorderColor": "#e7eef4",
        "topBarHeaderColor": "#23282e",
        "topBarTextColor": "#69788b",
      },
    ],
    "bravo": [
      {
        "_id": "84bbd22e-6def-459f-91c9-4c9aa4e0bec0",
        "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "accountFooterEnabled": false,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#000000",
        "buttonRounded": "0",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "journeyFooterEnabled": false,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#000000",
        "linkColor": "#000000",
        "linkedTrees": [],
        "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
        "logoAltText": "Contrast",
        "logoEnabled": true,
        "logoHeight": "72",
        "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
        "logoProfileAltText": "Contrast",
        "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
        "logoProfileCollapsedAltText": "",
        "logoProfileCollapsedHeight": "22",
        "logoProfileHeight": "22",
        "name": "Contrast",
        "pageTitle": "#23282e",
        "primaryColor": "#000000",
        "primaryOffColor": "#000000",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#000000",
        "profileMenuTextHighlightColor": "#455469",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "05ef90a8-10f2-47fd-a481-c8c52f49e48f",
        "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
        "accountFooterEnabled": true,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#5E6D82",
        "buttonRounded": "50",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
        "journeyFooterEnabled": true,
        "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
        "journeyHeaderEnabled": true,
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#C60819",
        "linkColor": "#EB0A1E",
        "linkedTrees": [],
        "logo": "",
        "logoAltText": "",
        "logoEnabled": true,
        "logoHeight": "40",
        "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
        "logoProfileAltText": "Highlander",
        "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
        "logoProfileCollapsedAltText": "Highlander",
        "logoProfileCollapsedHeight": "28",
        "logoProfileHeight": "28",
        "name": "Highlander",
        "pageTitle": "#23282e",
        "primaryColor": "#EB0A1E",
        "primaryOffColor": "#C60819",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#EB0A1E",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "f19b7f5a-48dc-4c53-bfac-eeed5966511a",
        "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
        "accountFooterEnabled": true,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#5E6D82",
        "buttonRounded": "50",
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": false,
        "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
        "journeyFooterEnabled": true,
        "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
        "journeyHeaderEnabled": true,
        "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
        "journeyJustifiedContentEnabled": true,
        "journeyLayout": "justified-right",
        "journeyTheaterMode": false,
        "linkActiveColor": "#49871E",
        "linkColor": "#5AA625",
        "linkedTrees": [],
        "logo": "",
        "logoAltText": "",
        "logoEnabled": true,
        "logoHeight": "40",
        "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
        "logoProfileAltText": "RobRoy",
        "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
        "logoProfileCollapsedAltText": "RobRoy",
        "logoProfileCollapsedHeight": "28",
        "logoProfileHeight": "28",
        "name": "Robroy",
        "pageTitle": "#23282e",
        "primaryColor": "#5AA625",
        "primaryOffColor": "#49871E",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#5AA625",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "022ba5cf-a2e4-49a8-ae6d-2ca54abf6573",
        "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "accountFooterEnabled": false,
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "backgroundColor": "#324054",
        "backgroundImage": "",
        "bodyText": "#23282e",
        "buttonRounded": 5,
        "dangerColor": "#f7685b",
        "favicon": "",
        "isDefault": true,
        "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
        "journeyFooterEnabled": false,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyJustifiedContent": "",
        "journeyJustifiedContentEnabled": false,
        "journeyLayout": "card",
        "journeyTheaterMode": false,
        "linkActiveColor": "#0c85cf",
        "linkColor": "#109cf1",
        "linkedTrees": [],
        "logo": "",
        "logoAltText": "",
        "logoHeight": "40",
        "logoProfile": "",
        "logoProfileAltText": "",
        "logoProfileCollapsed": "",
        "logoProfileCollapsedAltText": "",
        "logoProfileCollapsedHeight": "40",
        "logoProfileHeight": "40",
        "name": "Starter Theme",
        "pageTitle": "#23282e",
        "primaryColor": "#324054",
        "primaryOffColor": "#242E3C",
        "profileBackgroundColor": "#f6f8fa",
        "profileMenuHighlightColor": "#f3f5f8",
        "profileMenuHoverColor": "#324054",
        "profileMenuHoverTextColor": "#ffffff",
        "profileMenuTextHighlightColor": "#455469",
        "secondaryColor": "#69788b",
        "textColor": "#ffffff",
      },
      {
        "_id": "4c7cb08c-7a9f-4cb6-9211-60654548cae9",
        "accountCardBackgroundColor": "#ffffff",
        "accountCardHeaderColor": "#23282e",
        "accountCardInnerBorderColor": "#e7eef4",
        "accountCardInputBackgroundColor": "#ffffff",
        "accountCardInputBorderColor": "#c0c9d5",
        "accountCardInputLabelColor": "#5e6d82",
        "accountCardInputSelectColor": "#e4f4fd",
        "accountCardInputTextColor": "#23282e",
        "accountCardOuterBorderColor": "#e7eef4",
        "accountCardShadow": 3,
        "accountCardTabActiveBorderColor": "#109cf1",
        "accountCardTabActiveColor": "#e4f4fd",
        "accountCardTextColor": "#5e6d82",
        "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
        "accountFooterEnabled": true,
        "accountNavigationBackgroundColor": "#ffffff",
        "accountNavigationTextColor": "#455469",
        "accountNavigationToggleBorderColor": "#e7eef4",
        "accountPageSections": {
          "accountControls": {
            "enabled": false,
          },
          "accountSecurity": {
            "enabled": true,
            "subsections": {
              "password": {
                "enabled": true,
              },
              "securityQuestions": {
                "enabled": false,
              },
              "twoStepVerification": {
                "enabled": true,
              },
              "username": {
                "enabled": true,
              },
            },
          },
          "consent": {
            "enabled": false,
          },
          "oauthApplications": {
            "enabled": false,
          },
          "personalInformation": {
            "enabled": true,
          },
          "preferences": {
            "enabled": false,
          },
          "social": {
            "enabled": false,
          },
          "trustedDevices": {
            "enabled": true,
          },
        },
        "accountTableRowHoverColor": "#f6f8fa",
        "backgroundColor": "#FFFFFF",
        "backgroundImage": "",
        "bodyText": "#5E6D82",
        "boldLinks": false,
        "buttonRounded": "50",
        "dangerColor": "#f7685b",
        "favicon": "",
        "fontFamily": "Open Sans",
        "isDefault": false,
        "journeyCardBackgroundColor": "#ffffff",
        "journeyCardBorderRadius": 4,
        "journeyCardHeaderBackgroundColor": "#ffffff",
        "journeyCardShadow": 3,
        "journeyCardTextColor": "#5e6d82",
        "journeyCardTitleColor": "#23282e",
        "journeyFloatingLabels": true,
        "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
        "journeyFooterEnabled": true,
        "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
        "journeyHeaderEnabled": false,
        "journeyInputBackgroundColor": "#ffffff",
        "journeyInputBorderColor": "#c0c9d5",
        "journeyInputLabelColor": "#5e6d82",
        "journeyInputSelectColor": "#e4f4fd",
        "journeyInputTextColor": "#23282e",
        "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
        "journeyJustifiedContentEnabled": true,
        "journeyLayout": "justified-right",
        "journeySignInButtonPosition": "flex-column",
        "journeyTheaterMode": true,
        "linkActiveColor": "#007661",
        "linkColor": "#009C80",
        "linkedTrees": [],
        "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
        "logoAltText": "Zardoz Logo",
        "logoEnabled": true,
        "logoHeight": "47",
        "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
        "logoProfileAltText": "Zardaz Logo",
        "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
        "logoProfileCollapsedAltText": "Zardaz Logo",
        "logoProfileCollapsedHeight": "28",
        "logoProfileHeight": "40",
        "name": "Zardoz",
        "pageTitle": "#23282e",
        "primaryColor": "#009C80",
        "primaryOffColor": "#007661",
        "profileBackgroundColor": "#FFFFFF",
        "profileMenuHighlightColor": "#FFFFFF",
        "profileMenuHoverColor": "#FFFFFF",
        "profileMenuHoverTextColor": "#455469",
        "profileMenuTextHighlightColor": "#009C80",
        "secondaryColor": "#69788b",
        "switchBackgroundColor": "#c0c9d5",
        "textColor": "#ffffff",
        "topBarBackgroundColor": "#ffffff",
        "topBarBorderColor": "#e7eef4",
        "topBarHeaderColor": "#23282e",
        "topBarTextColor": "#69788b",
      },
    ],
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir2 -E test/e2e/env/testEntityFile.json -e test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files 1`] = `""`;

exports[`frodo idm export "frodo idm export -AD testDir2 -E test/e2e/env/testEntityFile.json -e test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir2/repo.ds.json 1`] = `
{
  "_id": "repo.ds",
  "commands": {
    "delete-mapping-links": {
      "_queryFilter": "/linkType eq "\${mapping}"",
      "operation": "DELETE",
    },
    "delete-target-ids-for-recon": {
      "_queryFilter": "/reconId eq "\${reconId}"",
      "operation": "DELETE",
    },
  },
  "embedded": false,
  "ldapConnectionFactories": {
    "bind": {
      "availabilityCheckIntervalSeconds": 30,
      "availabilityCheckTimeoutMilliSeconds": 10000,
      "connectionPoolSize": 50,
      "connectionSecurity": "none",
      "heartBeatIntervalSeconds": 60,
      "heartBeatTimeoutMilliSeconds": 10000,
      "primaryLdapServers": [
        {
          "hostname": "userstore-0.userstore",
          "port": 1389,
        },
      ],
      "secondaryLdapServers": [
        {
          "hostname": "userstore-2.userstore",
          "port": 1389,
        },
      ],
    },
    "root": {
      "authentication": {
        "simple": {
          "bindDn": "\${admin}",
          "bindPassword": "&{userstore.password}",
        },
      },
      "inheritFrom": "bind",
    },
  },
  "maxConnectionAttempts": 5,
  "queries": {
    "explicit": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
    },
    "generic": {
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq "\${username}"",
      },
      "credential-query": {
        "_queryFilter": "/userName eq "\${username}"",
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
      },
      "for-userName": {
        "_queryFilter": "/userName eq "\${uid}"",
      },
      "get-by-field-value": {
        "_queryFilter": "/\${field} eq "\${value}"",
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq "\${userId}"",
        "_sortKeys": "-createDate",
      },
      "get-recons": {
        "_fields": "reconId,mapping,activitydate",
        "_queryFilter": "/entryType eq "summary"",
        "_sortKeys": "-activitydate",
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq "\${linkType}"",
      },
      "query-all": {
        "_queryFilter": "true",
      },
      "query-all-ids": {
        "_fields": "_id,_rev",
        "_queryFilter": "true",
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq "\${instanceId}"",
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
      },
      "query-cluster-instances": {
        "_queryFilter": "true",
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1",
      },
    },
  },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
    },
    "explicitMapping": {
      "clusteredrecontargetids": {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-recon-clusteredTargetIds",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-recon-id",
            "type": "simple",
          },
          "targetIds": {
            "ldapAttribute": "fr-idm-recon-targetIds",
            "type": "json",
          },
        },
      },
      "dsconfig/attributeValue": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-attribute-value-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "matchAttribute": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-match-attribute",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/characterSet": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-character-set-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowUnclassifiedCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-allow-unclassified-characters",
            "type": "simple",
          },
          "characterSet": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-character-set",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minCharacterSets": {
            "ldapAttribute": "ds-cfg-min-character-sets",
            "type": "simple",
          },
        },
      },
      "dsconfig/dictionary": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-dictionary-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "checkSubstrings": {
            "ldapAttribute": "ds-cfg-check-substrings",
            "type": "simple",
          },
          "dictionaryFile": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-dictionary-file",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minSubstringLength": {
            "ldapAttribute": "ds-cfg-min-substring-length",
            "type": "simple",
          },
          "testReversedPassword": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-test-reversed-password",
            "type": "simple",
          },
        },
      },
      "dsconfig/lengthBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-length-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxPasswordLength": {
            "ldapAttribute": "ds-cfg-max-password-length",
            "type": "simple",
          },
          "minPasswordLength": {
            "ldapAttribute": "ds-cfg-min-password-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/passwordPolicies": {
        "dnTemplate": "cn=Password Policies,cn=config",
        "objectClasses": [
          "ds-cfg-password-policy",
          "ds-cfg-authentication-policy",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "allowPreEncodedPasswords": {
            "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
            "type": "simple",
          },
          "defaultPasswordStorageScheme": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-default-password-storage-scheme",
            "type": "simple",
          },
          "deprecatedPasswordStorageScheme": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
            "type": "simple",
          },
          "maxPasswordAge": {
            "ldapAttribute": "ds-cfg-max-password-age",
            "type": "simple",
          },
          "passwordAttribute": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-password-attribute",
            "type": "simple",
          },
          "passwordHistoryCount": {
            "ldapAttribute": "ds-cfg-password-history-count",
            "type": "simple",
          },
          "validator": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-password-validator",
            "type": "simple",
          },
        },
      },
      "dsconfig/repeatedCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-repeated-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "maxConsecutiveLength": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-max-consecutive-length",
            "type": "simple",
          },
        },
      },
      "dsconfig/similarityBased": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-similarity-based-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minPasswordDifference": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-password-difference",
            "type": "simple",
          },
        },
      },
      "dsconfig/uniqueCharacters": {
        "dnTemplate": "cn=Password Validators,cn=config",
        "objectClasses": [
          "ds-cfg-password-validator",
          "ds-cfg-unique-characters-password-validator",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "caseSensitiveValidation": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-case-sensitive-validation",
            "type": "simple",
          },
          "enabled": {
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "javaClass": {
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "minUniqueCharacters": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-min-unique-characters",
            "type": "simple",
          },
        },
      },
      "dsconfig/userDefinedVirtualAttribute": {
        "dnTemplate": "cn=Virtual Attributes,cn=config",
        "objectClasses": [
          "ds-cfg-user-defined-virtual-attribute",
          "ds-cfg-virtual-attribute",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "attributeType": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-attribute-type",
            "type": "simple",
          },
          "baseDn": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-base-dn",
            "type": "simple",
          },
          "conflictBehavior": {
            "ldapAttribute": "ds-cfg-conflict-behavior",
            "type": "simple",
          },
          "enabled": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-enabled",
            "type": "simple",
          },
          "filter": {
            "isMultiValued": true,
            "ldapAttribute": "ds-cfg-filter",
            "type": "simple",
          },
          "groupDn": {
            "ldapAttribute": "ds-cfg-group-dn",
            "type": "simple",
          },
          "javaClass": {
            "isRequired": true,
            "ldapAttribute": "ds-cfg-java-class",
            "type": "simple",
          },
          "scope": {
            "ldapAttribute": "ds-cfg-scope",
            "type": "simple",
          },
          "value": {
            "isMultiValued": true,
            "isRequired": true,
            "ldapAttribute": "ds-cfg-value",
            "type": "simple",
          },
        },
      },
      "identities/admin": {
        "dnTemplate": "o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/alpha": {
        "dnTemplate": "o=alpha,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "identities/bravo": {
        "dnTemplate": "o=bravo,o=root,ou=identities",
        "isReadOnly": true,
        "namingStrategy": {
          "dnAttribute": "ou",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "organizationalunit",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "ou",
            "primaryKey": true,
            "type": "simple",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "count": {
            "isRequired": true,
            "ldapAttribute": "numSubordinates",
            "type": "simple",
            "writability": "readOnly",
          },
        },
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "fr-idm-internal-role",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "cn",
            "type": "simple",
            "writability": "createOnly",
          },
          "authzMembers": {
            "isMultiValued": true,
            "propertyName": "authzRoles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "condition": {
            "ldapAttribute": "fr-idm-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "name": {
            "ldapAttribute": "fr-idm-name",
            "type": "simple",
          },
          "privileges": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-privilege",
            "type": "json",
          },
          "temporalConstraints": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-temporal-constraints",
            "type": "json",
          },
        },
      },
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-internal-user",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "password": {
            "ldapAttribute": "fr-idm-password",
            "type": "json",
          },
        },
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-link",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "firstId": {
            "ldapAttribute": "fr-idm-link-firstId",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-link-qualifier",
            "type": "simple",
          },
          "linkType": {
            "ldapAttribute": "fr-idm-link-type",
            "type": "simple",
          },
          "secondId": {
            "ldapAttribute": "fr-idm-link-secondId",
            "type": "simple",
          },
        },
      },
      "locks": {
        "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-lock",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-lock-nodeid",
            "type": "simple",
          },
        },
      },
      "managed/teammember": {
        "dnTemplate": "ou=people,o=root,ou=identities",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "fraas-admin",
          "iplanet-am-user-service",
          "deviceProfilesContainer",
          "devicePrintProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/teammembermeta",
            "type": "reference",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "inviteDate": {
            "ldapAttribute": "fr-idm-inviteDate",
            "type": "simple",
          },
          "jurisdiction": {
            "ldapAttribute": "fr-idm-jurisdiction",
            "type": "simple",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "onboardDate": {
            "ldapAttribute": "fr-idm-onboardDate",
            "type": "simple",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/teammembergroup": {
        "dnTemplate": "ou=groups,o=root,ou=identities",
        "objectClasses": [
          "groupofuniquenames",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "ldapAttribute": "uniqueMember",
            "type": "simple",
          },
        },
      },
      "recon/assoc": {
        "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
        "namingStrategy": {
          "dnAttribute": "fr-idm-reconassoc-reconid",
          "type": "clientDnNaming",
        },
        "objectClasses": [
          "fr-idm-reconassoc",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "fr-idm-reconassoc-reconid",
            "type": "simple",
          },
          "finishTime": {
            "ldapAttribute": "fr-idm-reconassoc-finishtime",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "subResources": {
          "entry": {
            "namingStrategy": {
              "dnAttribute": "uid",
              "type": "clientDnNaming",
            },
            "resource": "recon-assoc-entry",
            "type": "collection",
          },
        },
      },
      "recon/assoc/entry": {
        "objectClasses": [
          "uidObject",
          "fr-idm-reconassocentry",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "action": {
            "ldapAttribute": "fr-idm-reconassocentry-action",
            "type": "simple",
          },
          "ambiguousTargetObjectIds": {
            "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
            "type": "simple",
          },
          "exception": {
            "ldapAttribute": "fr-idm-reconassocentry-exception",
            "type": "simple",
          },
          "isAnalysis": {
            "ldapAttribute": "fr-idm-reconassoc-isanalysis",
            "type": "simple",
          },
          "linkQualifier": {
            "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-reconassoc-mapping",
            "type": "simple",
          },
          "message": {
            "ldapAttribute": "fr-idm-reconassocentry-message",
            "type": "simple",
          },
          "messageDetail": {
            "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
            "type": "simple",
          },
          "phase": {
            "ldapAttribute": "fr-idm-reconassocentry-phase",
            "type": "simple",
          },
          "reconId": {
            "ldapAttribute": "fr-idm-reconassocentry-reconid",
            "type": "simple",
          },
          "situation": {
            "ldapAttribute": "fr-idm-reconassocentry-situation",
            "type": "simple",
          },
          "sourceObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
            "type": "simple",
          },
          "sourceResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
            "type": "simple",
          },
          "status": {
            "ldapAttribute": "fr-idm-reconassocentry-status",
            "type": "simple",
          },
          "targetObjectId": {
            "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
            "type": "simple",
          },
          "targetResourceCollection": {
            "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
            "type": "simple",
          },
        },
        "resourceName": "recon-assoc-entry",
        "subResourceRouting": [
          {
            "prefix": "entry",
            "template": "recon/assoc/{reconId}/entry",
          },
        ],
      },
      "sync/queue": {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
        "objectClasses": [
          "uidObject",
          "fr-idm-syncqueue",
        ],
        "properties": {
          "_id": {
            "isRequired": true,
            "ldapAttribute": "uid",
            "type": "simple",
            "writability": "createOnly",
          },
          "context": {
            "ldapAttribute": "fr-idm-syncqueue-context",
            "type": "json",
          },
          "createDate": {
            "ldapAttribute": "fr-idm-syncqueue-createdate",
            "type": "simple",
          },
          "mapping": {
            "ldapAttribute": "fr-idm-syncqueue-mapping",
            "type": "simple",
          },
          "newObject": {
            "ldapAttribute": "fr-idm-syncqueue-newobject",
            "type": "json",
          },
          "nodeId": {
            "ldapAttribute": "fr-idm-syncqueue-nodeid",
            "type": "simple",
          },
          "objectRev": {
            "ldapAttribute": "fr-idm-syncqueue-objectRev",
            "type": "simple",
          },
          "oldObject": {
            "ldapAttribute": "fr-idm-syncqueue-oldobject",
            "type": "json",
          },
          "remainingRetries": {
            "ldapAttribute": "fr-idm-syncqueue-remainingretries",
            "type": "simple",
          },
          "resourceCollection": {
            "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
            "type": "simple",
          },
          "resourceId": {
            "ldapAttribute": "fr-idm-syncqueue-resourceid",
            "type": "simple",
          },
          "state": {
            "ldapAttribute": "fr-idm-syncqueue-state",
            "type": "simple",
          },
          "syncAction": {
            "ldapAttribute": "fr-idm-syncqueue-syncaction",
            "type": "simple",
          },
        },
      },
    },
    "genericMapping": {
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
        "objectClasses": [
          "uidObject",
          "fr-idm-cluster-obj",
        ],
      },
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
      },
      "file": {
        "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
      },
      "internal/notification": {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-notification-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-notification",
        ],
        "properties": {
          "target": {
            "propertyName": "_notifications",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "internal/usermeta": {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "jsonstorage": {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
      },
      "managed/alpha_group": {
        "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_organization": {
        "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/alpha_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
        },
      },
      "managed/alpha_role": {
        "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/alpha_user": {
        "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/alpha_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/alpha_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/alpha_usermeta": {
        "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/alpha_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_group": {
        "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
        "idGenerator": {
          "propertyName": "name",
          "type": "property",
        },
        "jsonAttribute": "fr-idm-managed-group-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "cn",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "top",
          "groupOfURLs",
          "fr-idm-managed-group",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "cn",
            "primaryKey": true,
            "type": "simple",
            "writability": "createOnly",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "condition": {
            "ldapAttribute": "fr-idm-managed-group-condition",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "groups",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_organization": {
        "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-organization-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-organization",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
          "admins": {
            "isMultiValued": true,
            "propertyName": "adminOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "children": {
            "isMultiValued": true,
            "propertyName": "parent",
            "resourcePath": "managed/bravo_organization",
            "type": "reverseReference",
          },
          "members": {
            "isMultiValued": true,
            "propertyName": "memberOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "name": {
            "ldapAttribute": "fr-idm-managed-organization-name",
            "type": "simple",
          },
          "owners": {
            "isMultiValued": true,
            "propertyName": "ownerOfOrg",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "parent": {
            "ldapAttribute": "fr-idm-managed-organization-parent",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
        },
      },
      "managed/bravo_role": {
        "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
        "objectClasses": [
          "uidObject",
          "fr-idm-managed-role",
        ],
        "properties": {
          "members": {
            "isMultiValued": true,
            "propertyName": "roles",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/bravo_user": {
        "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-custom-attrs",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "namingStrategy": {
          "dnAttribute": "fr-idm-uuid",
          "type": "clientDnNaming",
        },
        "nativeId": false,
        "objectClasses": [
          "person",
          "organizationalPerson",
          "inetOrgPerson",
          "iplanet-am-user-service",
          "devicePrintProfilesContainer",
          "deviceProfilesContainer",
          "kbaInfoContainer",
          "fr-idm-managed-user-explicit",
          "forgerock-am-dashboard-service",
          "inetuser",
          "iplanet-am-auth-configuration-service",
          "iplanet-am-managed-person",
          "iPlanetPreferences",
          "oathDeviceProfilesContainer",
          "pushDeviceProfilesContainer",
          "sunAMAuthAccountLockout",
          "sunFMSAML2NameIdentifier",
          "webauthnDeviceProfilesContainer",
          "fr-idm-hybrid-obj",
          "fr-ext-attrs",
        ],
        "properties": {
          "_id": {
            "ldapAttribute": "fr-idm-uuid",
            "primaryKey": true,
            "type": "simple",
          },
          "_meta": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-meta",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_usermeta",
            "type": "reference",
          },
          "_notifications": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-notifications",
            "primaryKey": "uid",
            "resourcePath": "internal/notification",
            "type": "reference",
          },
          "_rev": {
            "ldapAttribute": "etag",
            "type": "simple",
          },
          "accountStatus": {
            "ldapAttribute": "inetUserStatus",
            "type": "simple",
          },
          "adminOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-admin",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "aliasList": {
            "isMultiValued": true,
            "ldapAttribute": "iplanet-am-user-alias-list",
            "type": "simple",
          },
          "assignedDashboard": {
            "isMultiValued": true,
            "ldapAttribute": "assignedDashboard",
            "type": "simple",
          },
          "authzRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
            "primaryKey": "cn",
            "resourcePath": "internal/role",
            "type": "reference",
          },
          "city": {
            "ldapAttribute": "l",
            "type": "simple",
          },
          "cn": {
            "ldapAttribute": "cn",
            "type": "simple",
          },
          "consentedMappings": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-consentedMapping",
            "type": "json",
          },
          "country": {
            "ldapAttribute": "co",
            "type": "simple",
          },
          "description": {
            "ldapAttribute": "description",
            "type": "simple",
          },
          "displayName": {
            "ldapAttribute": "displayName",
            "type": "simple",
          },
          "effectiveAssignments": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveAssignment",
            "type": "json",
          },
          "effectiveGroups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveGroup",
            "type": "json",
          },
          "effectiveRoles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-effectiveRole",
            "type": "json",
          },
          "frIndexedDate1": {
            "ldapAttribute": "fr-attr-idate1",
            "type": "simple",
          },
          "frIndexedDate2": {
            "ldapAttribute": "fr-attr-idate2",
            "type": "simple",
          },
          "frIndexedDate3": {
            "ldapAttribute": "fr-attr-idate3",
            "type": "simple",
          },
          "frIndexedDate4": {
            "ldapAttribute": "fr-attr-idate4",
            "type": "simple",
          },
          "frIndexedDate5": {
            "ldapAttribute": "fr-attr-idate5",
            "type": "simple",
          },
          "frIndexedInteger1": {
            "ldapAttribute": "fr-attr-iint1",
            "type": "simple",
          },
          "frIndexedInteger2": {
            "ldapAttribute": "fr-attr-iint2",
            "type": "simple",
          },
          "frIndexedInteger3": {
            "ldapAttribute": "fr-attr-iint3",
            "type": "simple",
          },
          "frIndexedInteger4": {
            "ldapAttribute": "fr-attr-iint4",
            "type": "simple",
          },
          "frIndexedInteger5": {
            "ldapAttribute": "fr-attr-iint5",
            "type": "simple",
          },
          "frIndexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti1",
            "type": "simple",
          },
          "frIndexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti2",
            "type": "simple",
          },
          "frIndexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti3",
            "type": "simple",
          },
          "frIndexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti4",
            "type": "simple",
          },
          "frIndexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-imulti5",
            "type": "simple",
          },
          "frIndexedString1": {
            "ldapAttribute": "fr-attr-istr1",
            "type": "simple",
          },
          "frIndexedString2": {
            "ldapAttribute": "fr-attr-istr2",
            "type": "simple",
          },
          "frIndexedString3": {
            "ldapAttribute": "fr-attr-istr3",
            "type": "simple",
          },
          "frIndexedString4": {
            "ldapAttribute": "fr-attr-istr4",
            "type": "simple",
          },
          "frIndexedString5": {
            "ldapAttribute": "fr-attr-istr5",
            "type": "simple",
          },
          "frUnindexedDate1": {
            "ldapAttribute": "fr-attr-date1",
            "type": "simple",
          },
          "frUnindexedDate2": {
            "ldapAttribute": "fr-attr-date2",
            "type": "simple",
          },
          "frUnindexedDate3": {
            "ldapAttribute": "fr-attr-date3",
            "type": "simple",
          },
          "frUnindexedDate4": {
            "ldapAttribute": "fr-attr-date4",
            "type": "simple",
          },
          "frUnindexedDate5": {
            "ldapAttribute": "fr-attr-date5",
            "type": "simple",
          },
          "frUnindexedInteger1": {
            "ldapAttribute": "fr-attr-int1",
            "type": "simple",
          },
          "frUnindexedInteger2": {
            "ldapAttribute": "fr-attr-int2",
            "type": "simple",
          },
          "frUnindexedInteger3": {
            "ldapAttribute": "fr-attr-int3",
            "type": "simple",
          },
          "frUnindexedInteger4": {
            "ldapAttribute": "fr-attr-int4",
            "type": "simple",
          },
          "frUnindexedInteger5": {
            "ldapAttribute": "fr-attr-int5",
            "type": "simple",
          },
          "frUnindexedMultivalued1": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi1",
            "type": "simple",
          },
          "frUnindexedMultivalued2": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi2",
            "type": "simple",
          },
          "frUnindexedMultivalued3": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi3",
            "type": "simple",
          },
          "frUnindexedMultivalued4": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi4",
            "type": "simple",
          },
          "frUnindexedMultivalued5": {
            "isMultiValued": true,
            "ldapAttribute": "fr-attr-multi5",
            "type": "simple",
          },
          "frUnindexedString1": {
            "ldapAttribute": "fr-attr-str1",
            "type": "simple",
          },
          "frUnindexedString2": {
            "ldapAttribute": "fr-attr-str2",
            "type": "simple",
          },
          "frUnindexedString3": {
            "ldapAttribute": "fr-attr-str3",
            "type": "simple",
          },
          "frUnindexedString4": {
            "ldapAttribute": "fr-attr-str4",
            "type": "simple",
          },
          "frUnindexedString5": {
            "ldapAttribute": "fr-attr-str5",
            "type": "simple",
          },
          "givenName": {
            "ldapAttribute": "givenName",
            "type": "simple",
          },
          "groups": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-groups",
            "primaryKey": "cn",
            "resourcePath": "managed/bravo_group",
            "type": "reference",
          },
          "kbaInfo": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-kbaInfo",
            "type": "json",
          },
          "lastSync": {
            "ldapAttribute": "fr-idm-lastSync",
            "type": "json",
          },
          "mail": {
            "ldapAttribute": "mail",
            "type": "simple",
          },
          "manager": {
            "isMultiValued": false,
            "ldapAttribute": "fr-idm-managed-user-manager",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_user",
            "type": "reference",
          },
          "memberOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-member",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "memberOfOrgIDs": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-memberoforgid",
            "type": "simple",
          },
          "ownerOfOrg": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-organization-owner",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_organization",
            "type": "reference",
          },
          "password": {
            "ldapAttribute": "userPassword",
            "type": "simple",
          },
          "postalAddress": {
            "ldapAttribute": "street",
            "type": "simple",
          },
          "postalCode": {
            "ldapAttribute": "postalCode",
            "type": "simple",
          },
          "preferences": {
            "ldapAttribute": "fr-idm-preferences",
            "type": "json",
          },
          "profileImage": {
            "ldapAttribute": "labeledURI",
            "type": "simple",
          },
          "reports": {
            "isMultiValued": true,
            "propertyName": "manager",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
          "roles": {
            "isMultiValued": true,
            "ldapAttribute": "fr-idm-managed-user-roles",
            "primaryKey": "uid",
            "resourcePath": "managed/bravo_role",
            "type": "reference",
          },
          "sn": {
            "ldapAttribute": "sn",
            "type": "simple",
          },
          "stateProvince": {
            "ldapAttribute": "st",
            "type": "simple",
          },
          "telephoneNumber": {
            "ldapAttribute": "telephoneNumber",
            "type": "simple",
          },
          "userName": {
            "ldapAttribute": "uid",
            "type": "simple",
          },
        },
      },
      "managed/bravo_usermeta": {
        "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/bravo_user",
            "type": "reverseReference",
          },
        },
      },
      "managed/teammembermeta": {
        "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
        "jsonAttribute": "fr-idm-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
        "objectClasses": [
          "uidObject",
          "fr-idm-generic-obj",
        ],
        "properties": {
          "target": {
            "propertyName": "_meta",
            "resourcePath": "managed/teammember",
            "type": "reverseReference",
          },
        },
      },
      "reconprogressstate": {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
        "jsonAttribute": "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
        "objectClasses": [
          "uidObject",
          "fr-idm-relationship",
        ],
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
      },
      "ui/*": {
        "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
      },
    },
  },
  "rest2LdapOptions": {
    "mvccAttribute": "etag",
    "readOnUpdatePolicy": "controls",
    "returnNullForMissingProperties": true,
    "useMvcc": true,
    "usePermissiveModify": true,
    "useSubtreeDelete": true,
  },
  "security": {
    "keyManager": "jvm",
    "trustManager": "jvm",
  },
}
`;

exports[`frodo idm export "frodo idm export -AD testDir2 -E test/e2e/env/testEntityFile.json -e test/e2e/env/testEnvFile.env": should export all idm config entities to separate files in the "testDir" directory according to the entity and env files: testDir2/script.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": "\${groovy}",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{\${installDir}}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{\${installDir}}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{\${installDir}}/bin/defaults/script",
    },
    "install": {
      "directory": "&{\${installDir}}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -N script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4 1`] = `""`;

exports[`frodo idm export "frodo idm export -N script -D testDir4": should export the idm config entity with idm id "script" into the directory testDir4: testDir4/script.idm.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;

exports[`frodo idm export "frodo idm export -N script -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json 1`] = `""`;

exports[`frodo idm export "frodo idm export -N script -f my-script.idm.json": should export the idm config entity with idm id "script" into file named my-script.idm.json: my-script.idm.json 1`] = `
{
  "ECMAScript": {
    "#javascript.debug": "&{openidm.script.javascript.debug}",
    "javascript.recompile.minimumInterval": 60000,
  },
  "Groovy": {
    "#groovy.disabled.global.ast.transformations": "",
    "#groovy.errors.tolerance": 10,
    "#groovy.output.debug": false,
    "#groovy.output.verbose": false,
    "#groovy.script.base": "#any class extends groovy.lang.Script",
    "#groovy.script.extension": ".groovy",
    "#groovy.source.encoding": "utf-8 #default US-ASCII",
    "#groovy.target.bytecode": "1.5",
    "#groovy.target.indy": true,
    "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
    "groovy.classpath": "&{idm.install.dir}/lib",
    "groovy.recompile": true,
    "groovy.recompile.minimumInterval": 60000,
    "groovy.source.encoding": "UTF-8",
    "groovy.target.directory": "&{idm.install.dir}/classes",
  },
  "_id": "script",
  "properties": {},
  "sources": {
    "default": {
      "directory": "&{idm.install.dir}/bin/defaults/script",
    },
    "install": {
      "directory": "&{idm.install.dir}",
    },
    "project": {
      "directory": "&{idm.instance.dir}",
    },
    "project-script": {
      "directory": "&{idm.instance.dir}/script",
    },
  },
}
`;
