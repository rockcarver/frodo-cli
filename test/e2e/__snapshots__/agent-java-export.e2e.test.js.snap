// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo agent java export "frodo agent java export --agent-id frodo-test-java-agent": should export the java agent with agent id "frodo-test-java-agent" 1`] = `""`;

exports[`frodo agent java export "frodo agent java export --agent-id frodo-test-java-agent": should export the java agent with agent id "frodo-test-java-agent": frodo-test-java-agent.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": {
          "inherited": false,
        },
        "alternativeAgentPort": {
          "inherited": false,
        },
        "alternativeAgentProtocol": {
          "inherited": false,
        },
        "clientHostnameHeader": {
          "inherited": false,
        },
        "clientIpHeader": {
          "inherited": false,
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "expiredSessionCacheSize": {
          "inherited": false,
          "value": 500,
        },
        "expiredSessionCacheTTL": {
          "inherited": false,
          "value": 20,
        },
        "fragmentRelayUri": {
          "inherited": false,
        },
        "idleTimeRefreshWindow": {
          "inherited": false,
          "value": 1,
        },
        "jwtCacheSize": {
          "inherited": false,
          "value": 5000,
        },
        "jwtCacheTTL": {
          "inherited": false,
          "value": 30,
        },
        "missingPostDataPreservationEntryUri": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "monitoringToCSV": {
          "inherited": false,
          "value": false,
        },
        "policyCachePerUser": {
          "inherited": false,
          "value": 50,
        },
        "policyCacheSize": {
          "inherited": false,
          "value": 5000,
        },
        "policyClientPollingInterval": {
          "inherited": false,
          "value": 3,
        },
        "possibleXssCodeElements": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "postDataCacheTtlMin": {
          "inherited": false,
          "value": 5,
        },
        "postDataPreservation": {
          "inherited": false,
          "value": false,
        },
        "postDataPreserveCacheEntryMaxEntries": {
          "inherited": false,
          "value": 1000,
        },
        "postDataPreserveCacheEntryMaxTotalSizeMb": {
          "inherited": false,
          "value": -1,
        },
        "postDataStickySessionKeyValue": {
          "inherited": false,
        },
        "postDataStickySessionMode": {
          "inherited": false,
          "value": "URL",
        },
        "sessionCacheTTL": {
          "inherited": false,
          "value": 15,
        },
        "ssoExchangeCacheSize": {
          "inherited": false,
          "value": 100,
        },
        "ssoExchangeCacheTTL": {
          "inherited": false,
          "value": 5,
        },
        "xssDetectionRedirectUri": {
          "inherited": false,
          "value": {},
        },
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": {
          "inherited": false,
          "value": false,
        },
        "amLoginUrl": {
          "inherited": false,
          "value": [],
        },
        "authServiceHost": {
          "inherited": false,
          "value": "testurl.com",
        },
        "authServicePort": {
          "inherited": false,
          "value": 8080,
        },
        "authServiceProtocol": {
          "inherited": false,
          "value": "http",
        },
        "authSuccessRedirectUrl": {
          "inherited": false,
          "value": false,
        },
        "conditionalLoginUrl": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "conditionalLogoutUrl": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "customLoginEnabled": {
          "inherited": false,
          "value": false,
        },
        "legacyLoginUrlList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "overridePolicyEvaluationRealmEnabled": {
          "inherited": false,
          "value": false,
        },
        "policyEvaluationApplication": {
          "inherited": false,
          "value": "iPlanetAMWebAgentService",
        },
        "policyEvaluationRealm": {
          "inherited": false,
          "value": "/",
        },
        "policyNotifications": {
          "inherited": false,
          "value": true,
        },
        "restrictToRealm": {
          "inherited": false,
          "value": {},
        },
        "urlPolicyEnvGetParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "urlPolicyEnvJsessionParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "urlPolicyEnvPostParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {
          "inherited": false,
          "value": {},
        },
        "clientIpValidationMode": {
          "inherited": false,
          "value": {
            "": "OFF",
          },
        },
        "clientIpValidationRange": {
          "inherited": false,
          "value": {},
        },
        "continuousSecurityCookies": {
          "inherited": false,
          "value": {},
        },
        "continuousSecurityHeaders": {
          "inherited": false,
          "value": {},
        },
        "cookieAttributeMultiValueSeparator": {
          "inherited": false,
          "value": "|",
        },
        "cookieAttributeUrlEncoded": {
          "inherited": false,
          "value": true,
        },
        "headerAttributeDateFormat": {
          "inherited": false,
          "value": "EEE, d MMM yyyy hh:mm:ss z",
        },
        "invertNotEnforcedIps": {
          "inherited": false,
          "value": false,
        },
        "invertNotEnforcedUris": {
          "inherited": false,
          "value": false,
        },
        "logoutEntryUri": {
          "inherited": false,
          "value": {},
        },
        "logoutIntrospection": {
          "inherited": false,
          "value": false,
        },
        "logoutRequestParameters": {
          "inherited": false,
          "value": {},
        },
        "notEnforcedFavicon": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedIps": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "notEnforcedIpsCacheEnabled": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedIpsCacheSize": {
          "inherited": false,
          "value": 1000,
        },
        "notEnforcedRuleCompoundSeparator": {
          "inherited": false,
          "value": "|",
        },
        "notEnforcedUris": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "notEnforcedUrisCacheEnabled": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedUrisCacheSize": {
          "inherited": false,
          "value": 1000,
        },
        "profileAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "profileAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "resourceAccessDeniedUri": {
          "inherited": false,
          "value": {},
        },
        "responseAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "responseAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "sessionAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "sessionAttributeMap": {
          "inherited": false,
          "value": {},
        },
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": {
          "inherited": false,
          "value": true,
        },
        "auditAccessType": {
          "inherited": false,
          "value": "LOG_NONE",
        },
        "auditLogLocation": {
          "inherited": false,
          "value": "REMOTE",
        },
        "cdssoRootUrl": {
          "inherited": false,
          "value": [
            "agentRootURL=http://testurl.com:8080/",
          ],
        },
        "configurationReloadInterval": {
          "inherited": false,
          "value": 0,
        },
        "customResponseHeader": {
          "inherited": false,
          "value": {},
        },
        "debugLevel": {
          "inherited": false,
          "value": "error",
        },
        "debugLogfilePrefix": {
          "inherited": false,
        },
        "debugLogfileRetentionCount": {
          "inherited": false,
          "value": -1,
        },
        "debugLogfileRotationMinutes": {
          "inherited": false,
          "value": -1,
        },
        "debugLogfileRotationSize": {
          "inherited": false,
          "value": 52428800,
        },
        "debugLogfileSuffix": {
          "inherited": false,
          "value": "-yyyy.MM.dd-HH.mm.ss",
        },
        "filterMode": {
          "inherited": false,
          "value": {
            "": "ALL",
          },
        },
        "fqdnCheck": {
          "inherited": false,
          "value": false,
        },
        "fqdnDefault": {
          "inherited": false,
          "value": "testurl.com",
        },
        "fqdnMapping": {
          "inherited": false,
          "value": {},
        },
        "httpSessionBinding": {
          "inherited": false,
          "value": true,
        },
        "jwtName": {
          "inherited": false,
          "value": "am-auth-jwt",
        },
        "lbCookieEnabled": {
          "inherited": false,
          "value": false,
        },
        "lbCookieName": {
          "inherited": false,
          "value": "amlbcookie",
        },
        "localAuditLogRotation": {
          "inherited": false,
          "value": false,
        },
        "localAuditLogfileRetentionCount": {
          "inherited": false,
          "value": -1,
        },
        "localAuditRotationSize": {
          "inherited": false,
          "value": 52428800,
        },
        "loginAttemptLimit": {
          "inherited": false,
          "value": 0,
        },
        "loginAttemptLimitCookieName": {
          "inherited": false,
          "value": "amFilterParam",
        },
        "preAuthCookieMaxAge": {
          "inherited": false,
          "value": 300,
        },
        "preAuthCookieName": {
          "inherited": false,
          "value": "amFilterCDSSORequest",
        },
        "recheckAmUnavailabilityInSeconds": {
          "inherited": false,
          "value": 5,
        },
        "redirectAttemptLimit": {
          "inherited": false,
          "value": 0,
        },
        "redirectAttemptLimitCookieName": {
          "inherited": false,
          "value": "amFilterRDParam",
        },
        "repositoryLocation": "centralized",
        "status": {
          "inherited": false,
          "value": "Inactive",
        },
        "userAttributeName": {
          "inherited": false,
          "value": "employeenumber",
        },
        "userMappingMode": {
          "inherited": false,
          "value": "USER_ID",
        },
        "userPrincipalFlag": {
          "inherited": false,
          "value": false,
        },
        "userTokenName": {
          "inherited": false,
          "value": "UserToken",
        },
        "userpassword": null,
        "webSocketConnectionIntervalInMinutes": {
          "inherited": false,
          "value": 30,
        },
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": {
          "inherited": false,
          "value": "application/json",
        },
        "agent302RedirectEnabled": {
          "inherited": false,
          "value": true,
        },
        "agent302RedirectHttpData": {
          "inherited": false,
          "value": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        },
        "agent302RedirectInvertEnabled": {
          "inherited": false,
          "value": false,
        },
        "agent302RedirectNerList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "agent302RedirectStatusCode": {
          "inherited": false,
          "value": 200,
        },
        "authFailReasonParameterName": {
          "inherited": false,
        },
        "authFailReasonParameterRemapper": {
          "inherited": false,
          "value": {},
        },
        "authFailReasonUrl": {
          "inherited": false,
        },
        "gotoParameterName": {
          "inherited": false,
          "value": "goto",
        },
        "gotoUrl": {
          "inherited": false,
        },
        "ignorePathInfo": {
          "inherited": false,
          "value": false,
        },
        "legacyRedirectUri": {
          "inherited": false,
          "value": "/agent/sunwLegacySupportURI",
        },
        "legacyUserAgentList": {
          "inherited": false,
          "value": [
            "Mozilla/4.7*",
          ],
        },
        "legacyUserAgentSupport": {
          "inherited": false,
          "value": false,
        },
        "localeCountry": {
          "inherited": false,
          "value": "US",
        },
        "localeLanguage": {
          "inherited": false,
          "value": "en",
        },
        "loginReasonMap": {
          "inherited": false,
          "value": {},
        },
        "loginReasonParameterName": {
          "inherited": false,
        },
        "portCheckEnabled": {
          "inherited": false,
          "value": false,
        },
        "portCheckFile": {
          "inherited": false,
          "value": "PortCheckContent.txt",
        },
        "portCheckSetting": {
          "inherited": false,
          "value": {
            "8080": "http",
          },
        },
        "unwantedHttpUrlParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "unwantedHttpUrlRegexParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "wantedHttpUrlParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "wantedHttpUrlRegexParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": {
          "inherited": false,
          "value": false,
        },
        "acceptSsoTokenDomainList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "acceptSsoTokenEnabled": {
          "inherited": false,
          "value": false,
        },
        "authExchangeCookieName": {
          "inherited": false,
        },
        "authExchangeUri": {
          "inherited": false,
        },
        "cdssoDomainList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "cdssoRedirectUri": {
          "inherited": false,
          "value": "/agent/post-authn-redirect",
        },
        "cdssoSecureCookies": {
          "inherited": false,
          "value": false,
        },
        "cookieResetDomains": {
          "inherited": false,
          "value": {},
        },
        "cookieResetEnabled": {
          "inherited": false,
          "value": false,
        },
        "cookieResetNames": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "cookieResetPaths": {
          "inherited": false,
          "value": {},
        },
        "encodeCookies": {
          "inherited": false,
          "value": false,
        },
        "excludedUserAgentsList": {
          "inherited": false,
          "value": [],
        },
        "httpOnly": {
          "inherited": false,
          "value": true,
        },
        "setCookieAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "setCookieInternalMap": {
          "inherited": false,
          "value": {},
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export --all": should export all java agents to a single file 1`] = `""`;

exports[`frodo agent java export "frodo agent java export --all": should export all java agents to a single file: allAlphaAgents.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "userpassword": null,
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    "frodo-test-java-agent2": {
      "_id": "frodo-test-java-agent2",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export --all-separate --directory agentJavaExportTestDir3": should export all java agents to separate files in the directory agentJavaExportTestDir3 1`] = `""`;

exports[`frodo agent java export "frodo agent java export --all-separate --directory agentJavaExportTestDir3": should export all java agents to separate files in the directory agentJavaExportTestDir3: agentJavaExportTestDir3/frodo-test-java-agent.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export -A": should export all java agents to separate files 1`] = `""`;

exports[`frodo agent java export "frodo agent java export -A": should export all java agents to separate files: frodo-test-java-agent.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "userpassword": null,
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export -A": should export all java agents to separate files: frodo-test-java-agent2.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent2": {
      "_id": "frodo-test-java-agent2",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export -a --file my-allAlphaAgents.java.agent.json": should export all java agents to a single file named my-allAlphaAgents.java.agent.json 1`] = `""`;

exports[`frodo agent java export "frodo agent java export -a --file my-allAlphaAgents.java.agent.json": should export all java agents to a single file named my-allAlphaAgents.java.agent.json: my-allAlphaAgents.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "userpassword": null,
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    "frodo-test-java-agent2": {
      "_id": "frodo-test-java-agent2",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export -aD agentJavaExportTestDir2": should export all java agents to a single file in the directory agentJavaExportTestDir2 1`] = `""`;

exports[`frodo agent java export "frodo agent java export -aD agentJavaExportTestDir2": should export all java agents to a single file in the directory agentJavaExportTestDir2: agentJavaExportTestDir2/allAlphaAgents.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "testurl.com",
        "authServicePort": 8080,
        "authServiceProtocol": "http",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=http://testurl.com:8080/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "testurl.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Inactive",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "8080": "http",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export -i frodo-test-java-agent -D agentJavaExportTestDir1": should export the java agent with agent id "frodo-test-java-agent" into the directory agentJavaExportTestDir1 1`] = `""`;

exports[`frodo agent java export "frodo agent java export -i frodo-test-java-agent -D agentJavaExportTestDir1": should export the java agent with agent id "frodo-test-java-agent" into the directory agentJavaExportTestDir1: agentJavaExportTestDir1/frodo-test-java-agent.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": {
          "inherited": false,
        },
        "alternativeAgentPort": {
          "inherited": false,
        },
        "alternativeAgentProtocol": {
          "inherited": false,
        },
        "clientHostnameHeader": {
          "inherited": false,
        },
        "clientIpHeader": {
          "inherited": false,
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "expiredSessionCacheSize": {
          "inherited": false,
          "value": 500,
        },
        "expiredSessionCacheTTL": {
          "inherited": false,
          "value": 20,
        },
        "fragmentRelayUri": {
          "inherited": false,
        },
        "idleTimeRefreshWindow": {
          "inherited": false,
          "value": 1,
        },
        "jwtCacheSize": {
          "inherited": false,
          "value": 5000,
        },
        "jwtCacheTTL": {
          "inherited": false,
          "value": 30,
        },
        "missingPostDataPreservationEntryUri": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "monitoringToCSV": {
          "inherited": false,
          "value": false,
        },
        "policyCachePerUser": {
          "inherited": false,
          "value": 50,
        },
        "policyCacheSize": {
          "inherited": false,
          "value": 5000,
        },
        "policyClientPollingInterval": {
          "inherited": false,
          "value": 3,
        },
        "possibleXssCodeElements": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "postDataCacheTtlMin": {
          "inherited": false,
          "value": 5,
        },
        "postDataPreservation": {
          "inherited": false,
          "value": false,
        },
        "postDataPreserveCacheEntryMaxEntries": {
          "inherited": false,
          "value": 1000,
        },
        "postDataPreserveCacheEntryMaxTotalSizeMb": {
          "inherited": false,
          "value": -1,
        },
        "postDataStickySessionKeyValue": {
          "inherited": false,
        },
        "postDataStickySessionMode": {
          "inherited": false,
          "value": "URL",
        },
        "sessionCacheTTL": {
          "inherited": false,
          "value": 15,
        },
        "ssoExchangeCacheSize": {
          "inherited": false,
          "value": 100,
        },
        "ssoExchangeCacheTTL": {
          "inherited": false,
          "value": 5,
        },
        "xssDetectionRedirectUri": {
          "inherited": false,
          "value": {},
        },
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": {
          "inherited": false,
          "value": false,
        },
        "amLoginUrl": {
          "inherited": false,
          "value": [],
        },
        "authServiceHost": {
          "inherited": false,
          "value": "testurl.com",
        },
        "authServicePort": {
          "inherited": false,
          "value": 8080,
        },
        "authServiceProtocol": {
          "inherited": false,
          "value": "http",
        },
        "authSuccessRedirectUrl": {
          "inherited": false,
          "value": false,
        },
        "conditionalLoginUrl": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "conditionalLogoutUrl": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "customLoginEnabled": {
          "inherited": false,
          "value": false,
        },
        "legacyLoginUrlList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "overridePolicyEvaluationRealmEnabled": {
          "inherited": false,
          "value": false,
        },
        "policyEvaluationApplication": {
          "inherited": false,
          "value": "iPlanetAMWebAgentService",
        },
        "policyEvaluationRealm": {
          "inherited": false,
          "value": "/",
        },
        "policyNotifications": {
          "inherited": false,
          "value": true,
        },
        "restrictToRealm": {
          "inherited": false,
          "value": {},
        },
        "urlPolicyEnvGetParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "urlPolicyEnvJsessionParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "urlPolicyEnvPostParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {
          "inherited": false,
          "value": {},
        },
        "clientIpValidationMode": {
          "inherited": false,
          "value": {
            "": "OFF",
          },
        },
        "clientIpValidationRange": {
          "inherited": false,
          "value": {},
        },
        "continuousSecurityCookies": {
          "inherited": false,
          "value": {},
        },
        "continuousSecurityHeaders": {
          "inherited": false,
          "value": {},
        },
        "cookieAttributeMultiValueSeparator": {
          "inherited": false,
          "value": "|",
        },
        "cookieAttributeUrlEncoded": {
          "inherited": false,
          "value": true,
        },
        "headerAttributeDateFormat": {
          "inherited": false,
          "value": "EEE, d MMM yyyy hh:mm:ss z",
        },
        "invertNotEnforcedIps": {
          "inherited": false,
          "value": false,
        },
        "invertNotEnforcedUris": {
          "inherited": false,
          "value": false,
        },
        "logoutEntryUri": {
          "inherited": false,
          "value": {},
        },
        "logoutIntrospection": {
          "inherited": false,
          "value": false,
        },
        "logoutRequestParameters": {
          "inherited": false,
          "value": {},
        },
        "notEnforcedFavicon": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedIps": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "notEnforcedIpsCacheEnabled": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedIpsCacheSize": {
          "inherited": false,
          "value": 1000,
        },
        "notEnforcedRuleCompoundSeparator": {
          "inherited": false,
          "value": "|",
        },
        "notEnforcedUris": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "notEnforcedUrisCacheEnabled": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedUrisCacheSize": {
          "inherited": false,
          "value": 1000,
        },
        "profileAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "profileAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "resourceAccessDeniedUri": {
          "inherited": false,
          "value": {},
        },
        "responseAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "responseAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "sessionAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "sessionAttributeMap": {
          "inherited": false,
          "value": {},
        },
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": {
          "inherited": false,
          "value": true,
        },
        "auditAccessType": {
          "inherited": false,
          "value": "LOG_NONE",
        },
        "auditLogLocation": {
          "inherited": false,
          "value": "REMOTE",
        },
        "cdssoRootUrl": {
          "inherited": false,
          "value": [
            "agentRootURL=http://testurl.com:8080/",
          ],
        },
        "configurationReloadInterval": {
          "inherited": false,
          "value": 0,
        },
        "customResponseHeader": {
          "inherited": false,
          "value": {},
        },
        "debugLevel": {
          "inherited": false,
          "value": "error",
        },
        "debugLogfilePrefix": {
          "inherited": false,
        },
        "debugLogfileRetentionCount": {
          "inherited": false,
          "value": -1,
        },
        "debugLogfileRotationMinutes": {
          "inherited": false,
          "value": -1,
        },
        "debugLogfileRotationSize": {
          "inherited": false,
          "value": 52428800,
        },
        "debugLogfileSuffix": {
          "inherited": false,
          "value": "-yyyy.MM.dd-HH.mm.ss",
        },
        "filterMode": {
          "inherited": false,
          "value": {
            "": "ALL",
          },
        },
        "fqdnCheck": {
          "inherited": false,
          "value": false,
        },
        "fqdnDefault": {
          "inherited": false,
          "value": "testurl.com",
        },
        "fqdnMapping": {
          "inherited": false,
          "value": {},
        },
        "httpSessionBinding": {
          "inherited": false,
          "value": true,
        },
        "jwtName": {
          "inherited": false,
          "value": "am-auth-jwt",
        },
        "lbCookieEnabled": {
          "inherited": false,
          "value": false,
        },
        "lbCookieName": {
          "inherited": false,
          "value": "amlbcookie",
        },
        "localAuditLogRotation": {
          "inherited": false,
          "value": false,
        },
        "localAuditLogfileRetentionCount": {
          "inherited": false,
          "value": -1,
        },
        "localAuditRotationSize": {
          "inherited": false,
          "value": 52428800,
        },
        "loginAttemptLimit": {
          "inherited": false,
          "value": 0,
        },
        "loginAttemptLimitCookieName": {
          "inherited": false,
          "value": "amFilterParam",
        },
        "preAuthCookieMaxAge": {
          "inherited": false,
          "value": 300,
        },
        "preAuthCookieName": {
          "inherited": false,
          "value": "amFilterCDSSORequest",
        },
        "recheckAmUnavailabilityInSeconds": {
          "inherited": false,
          "value": 5,
        },
        "redirectAttemptLimit": {
          "inherited": false,
          "value": 0,
        },
        "redirectAttemptLimitCookieName": {
          "inherited": false,
          "value": "amFilterRDParam",
        },
        "repositoryLocation": "centralized",
        "status": {
          "inherited": false,
          "value": "Inactive",
        },
        "userAttributeName": {
          "inherited": false,
          "value": "employeenumber",
        },
        "userMappingMode": {
          "inherited": false,
          "value": "USER_ID",
        },
        "userPrincipalFlag": {
          "inherited": false,
          "value": false,
        },
        "userTokenName": {
          "inherited": false,
          "value": "UserToken",
        },
        "webSocketConnectionIntervalInMinutes": {
          "inherited": false,
          "value": 30,
        },
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": {
          "inherited": false,
          "value": "application/json",
        },
        "agent302RedirectEnabled": {
          "inherited": false,
          "value": true,
        },
        "agent302RedirectHttpData": {
          "inherited": false,
          "value": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        },
        "agent302RedirectInvertEnabled": {
          "inherited": false,
          "value": false,
        },
        "agent302RedirectNerList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "agent302RedirectStatusCode": {
          "inherited": false,
          "value": 200,
        },
        "authFailReasonParameterName": {
          "inherited": false,
        },
        "authFailReasonParameterRemapper": {
          "inherited": false,
          "value": {},
        },
        "authFailReasonUrl": {
          "inherited": false,
        },
        "gotoParameterName": {
          "inherited": false,
          "value": "goto",
        },
        "gotoUrl": {
          "inherited": false,
        },
        "ignorePathInfo": {
          "inherited": false,
          "value": false,
        },
        "legacyRedirectUri": {
          "inherited": false,
          "value": "/agent/sunwLegacySupportURI",
        },
        "legacyUserAgentList": {
          "inherited": false,
          "value": [
            "Mozilla/4.7*",
          ],
        },
        "legacyUserAgentSupport": {
          "inherited": false,
          "value": false,
        },
        "localeCountry": {
          "inherited": false,
          "value": "US",
        },
        "localeLanguage": {
          "inherited": false,
          "value": "en",
        },
        "loginReasonMap": {
          "inherited": false,
          "value": {},
        },
        "loginReasonParameterName": {
          "inherited": false,
        },
        "portCheckEnabled": {
          "inherited": false,
          "value": false,
        },
        "portCheckFile": {
          "inherited": false,
          "value": "PortCheckContent.txt",
        },
        "portCheckSetting": {
          "inherited": false,
          "value": {
            "8080": "http",
          },
        },
        "unwantedHttpUrlParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "unwantedHttpUrlRegexParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "wantedHttpUrlParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "wantedHttpUrlRegexParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": {
          "inherited": false,
          "value": false,
        },
        "acceptSsoTokenDomainList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "acceptSsoTokenEnabled": {
          "inherited": false,
          "value": false,
        },
        "authExchangeCookieName": {
          "inherited": false,
        },
        "authExchangeUri": {
          "inherited": false,
        },
        "cdssoDomainList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "cdssoRedirectUri": {
          "inherited": false,
          "value": "/agent/post-authn-redirect",
        },
        "cdssoSecureCookies": {
          "inherited": false,
          "value": false,
        },
        "cookieResetDomains": {
          "inherited": false,
          "value": {},
        },
        "cookieResetEnabled": {
          "inherited": false,
          "value": false,
        },
        "cookieResetNames": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "cookieResetPaths": {
          "inherited": false,
          "value": {},
        },
        "encodeCookies": {
          "inherited": false,
          "value": false,
        },
        "excludedUserAgentsList": {
          "inherited": false,
          "value": [],
        },
        "httpOnly": {
          "inherited": false,
          "value": true,
        },
        "setCookieAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "setCookieInternalMap": {
          "inherited": false,
          "value": {},
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo agent java export "frodo agent java export -i frodo-test-java-agent -f my-frodo-test-java-agent.java.agent.json": should export the java agent with agent id "frodo-test-java-agent" into file named my-frodo-test-java-agent.java.agent.json 1`] = `""`;

exports[`frodo agent java export "frodo agent java export -i frodo-test-java-agent -f my-frodo-test-java-agent.java.agent.json": should export the java agent with agent id "frodo-test-java-agent" into file named my-frodo-test-java-agent.java.agent.json: my-frodo-test-java-agent.java.agent.json 1`] = `
{
  "agents": {
    "frodo-test-java-agent": {
      "_id": "frodo-test-java-agent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": {
          "inherited": false,
        },
        "alternativeAgentPort": {
          "inherited": false,
        },
        "alternativeAgentProtocol": {
          "inherited": false,
        },
        "clientHostnameHeader": {
          "inherited": false,
        },
        "clientIpHeader": {
          "inherited": false,
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "expiredSessionCacheSize": {
          "inherited": false,
          "value": 500,
        },
        "expiredSessionCacheTTL": {
          "inherited": false,
          "value": 20,
        },
        "fragmentRelayUri": {
          "inherited": false,
        },
        "idleTimeRefreshWindow": {
          "inherited": false,
          "value": 1,
        },
        "jwtCacheSize": {
          "inherited": false,
          "value": 5000,
        },
        "jwtCacheTTL": {
          "inherited": false,
          "value": 30,
        },
        "missingPostDataPreservationEntryUri": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "monitoringToCSV": {
          "inherited": false,
          "value": false,
        },
        "policyCachePerUser": {
          "inherited": false,
          "value": 50,
        },
        "policyCacheSize": {
          "inherited": false,
          "value": 5000,
        },
        "policyClientPollingInterval": {
          "inherited": false,
          "value": 3,
        },
        "possibleXssCodeElements": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "postDataCacheTtlMin": {
          "inherited": false,
          "value": 5,
        },
        "postDataPreservation": {
          "inherited": false,
          "value": false,
        },
        "postDataPreserveCacheEntryMaxEntries": {
          "inherited": false,
          "value": 1000,
        },
        "postDataPreserveCacheEntryMaxTotalSizeMb": {
          "inherited": false,
          "value": -1,
        },
        "postDataStickySessionKeyValue": {
          "inherited": false,
        },
        "postDataStickySessionMode": {
          "inherited": false,
          "value": "URL",
        },
        "sessionCacheTTL": {
          "inherited": false,
          "value": 15,
        },
        "ssoExchangeCacheSize": {
          "inherited": false,
          "value": 100,
        },
        "ssoExchangeCacheTTL": {
          "inherited": false,
          "value": 5,
        },
        "xssDetectionRedirectUri": {
          "inherited": false,
          "value": {},
        },
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": {
          "inherited": false,
          "value": false,
        },
        "amLoginUrl": {
          "inherited": false,
          "value": [],
        },
        "authServiceHost": {
          "inherited": false,
          "value": "testurl.com",
        },
        "authServicePort": {
          "inherited": false,
          "value": 8080,
        },
        "authServiceProtocol": {
          "inherited": false,
          "value": "http",
        },
        "authSuccessRedirectUrl": {
          "inherited": false,
          "value": false,
        },
        "conditionalLoginUrl": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "conditionalLogoutUrl": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "customLoginEnabled": {
          "inherited": false,
          "value": false,
        },
        "legacyLoginUrlList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "overridePolicyEvaluationRealmEnabled": {
          "inherited": false,
          "value": false,
        },
        "policyEvaluationApplication": {
          "inherited": false,
          "value": "iPlanetAMWebAgentService",
        },
        "policyEvaluationRealm": {
          "inherited": false,
          "value": "/",
        },
        "policyNotifications": {
          "inherited": false,
          "value": true,
        },
        "restrictToRealm": {
          "inherited": false,
          "value": {},
        },
        "urlPolicyEnvGetParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "urlPolicyEnvJsessionParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "urlPolicyEnvPostParameters": {
          "inherited": false,
          "value": [
            "",
          ],
        },
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {
          "inherited": false,
          "value": {},
        },
        "clientIpValidationMode": {
          "inherited": false,
          "value": {
            "": "OFF",
          },
        },
        "clientIpValidationRange": {
          "inherited": false,
          "value": {},
        },
        "continuousSecurityCookies": {
          "inherited": false,
          "value": {},
        },
        "continuousSecurityHeaders": {
          "inherited": false,
          "value": {},
        },
        "cookieAttributeMultiValueSeparator": {
          "inherited": false,
          "value": "|",
        },
        "cookieAttributeUrlEncoded": {
          "inherited": false,
          "value": true,
        },
        "headerAttributeDateFormat": {
          "inherited": false,
          "value": "EEE, d MMM yyyy hh:mm:ss z",
        },
        "invertNotEnforcedIps": {
          "inherited": false,
          "value": false,
        },
        "invertNotEnforcedUris": {
          "inherited": false,
          "value": false,
        },
        "logoutEntryUri": {
          "inherited": false,
          "value": {},
        },
        "logoutIntrospection": {
          "inherited": false,
          "value": false,
        },
        "logoutRequestParameters": {
          "inherited": false,
          "value": {},
        },
        "notEnforcedFavicon": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedIps": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "notEnforcedIpsCacheEnabled": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedIpsCacheSize": {
          "inherited": false,
          "value": 1000,
        },
        "notEnforcedRuleCompoundSeparator": {
          "inherited": false,
          "value": "|",
        },
        "notEnforcedUris": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "notEnforcedUrisCacheEnabled": {
          "inherited": false,
          "value": true,
        },
        "notEnforcedUrisCacheSize": {
          "inherited": false,
          "value": 1000,
        },
        "profileAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "profileAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "resourceAccessDeniedUri": {
          "inherited": false,
          "value": {},
        },
        "responseAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "responseAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "sessionAttributeFetchMode": {
          "inherited": false,
          "value": "NONE",
        },
        "sessionAttributeMap": {
          "inherited": false,
          "value": {},
        },
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": {
          "inherited": false,
          "value": true,
        },
        "auditAccessType": {
          "inherited": false,
          "value": "LOG_NONE",
        },
        "auditLogLocation": {
          "inherited": false,
          "value": "REMOTE",
        },
        "cdssoRootUrl": {
          "inherited": false,
          "value": [
            "agentRootURL=http://testurl.com:8080/",
          ],
        },
        "configurationReloadInterval": {
          "inherited": false,
          "value": 0,
        },
        "customResponseHeader": {
          "inherited": false,
          "value": {},
        },
        "debugLevel": {
          "inherited": false,
          "value": "error",
        },
        "debugLogfilePrefix": {
          "inherited": false,
        },
        "debugLogfileRetentionCount": {
          "inherited": false,
          "value": -1,
        },
        "debugLogfileRotationMinutes": {
          "inherited": false,
          "value": -1,
        },
        "debugLogfileRotationSize": {
          "inherited": false,
          "value": 52428800,
        },
        "debugLogfileSuffix": {
          "inherited": false,
          "value": "-yyyy.MM.dd-HH.mm.ss",
        },
        "filterMode": {
          "inherited": false,
          "value": {
            "": "ALL",
          },
        },
        "fqdnCheck": {
          "inherited": false,
          "value": false,
        },
        "fqdnDefault": {
          "inherited": false,
          "value": "testurl.com",
        },
        "fqdnMapping": {
          "inherited": false,
          "value": {},
        },
        "httpSessionBinding": {
          "inherited": false,
          "value": true,
        },
        "jwtName": {
          "inherited": false,
          "value": "am-auth-jwt",
        },
        "lbCookieEnabled": {
          "inherited": false,
          "value": false,
        },
        "lbCookieName": {
          "inherited": false,
          "value": "amlbcookie",
        },
        "localAuditLogRotation": {
          "inherited": false,
          "value": false,
        },
        "localAuditLogfileRetentionCount": {
          "inherited": false,
          "value": -1,
        },
        "localAuditRotationSize": {
          "inherited": false,
          "value": 52428800,
        },
        "loginAttemptLimit": {
          "inherited": false,
          "value": 0,
        },
        "loginAttemptLimitCookieName": {
          "inherited": false,
          "value": "amFilterParam",
        },
        "preAuthCookieMaxAge": {
          "inherited": false,
          "value": 300,
        },
        "preAuthCookieName": {
          "inherited": false,
          "value": "amFilterCDSSORequest",
        },
        "recheckAmUnavailabilityInSeconds": {
          "inherited": false,
          "value": 5,
        },
        "redirectAttemptLimit": {
          "inherited": false,
          "value": 0,
        },
        "redirectAttemptLimitCookieName": {
          "inherited": false,
          "value": "amFilterRDParam",
        },
        "repositoryLocation": "centralized",
        "status": {
          "inherited": false,
          "value": "Inactive",
        },
        "userAttributeName": {
          "inherited": false,
          "value": "employeenumber",
        },
        "userMappingMode": {
          "inherited": false,
          "value": "USER_ID",
        },
        "userPrincipalFlag": {
          "inherited": false,
          "value": false,
        },
        "userTokenName": {
          "inherited": false,
          "value": "UserToken",
        },
        "userpassword": null,
        "webSocketConnectionIntervalInMinutes": {
          "inherited": false,
          "value": 30,
        },
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": {
          "inherited": false,
          "value": "application/json",
        },
        "agent302RedirectEnabled": {
          "inherited": false,
          "value": true,
        },
        "agent302RedirectHttpData": {
          "inherited": false,
          "value": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        },
        "agent302RedirectInvertEnabled": {
          "inherited": false,
          "value": false,
        },
        "agent302RedirectNerList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "agent302RedirectStatusCode": {
          "inherited": false,
          "value": 200,
        },
        "authFailReasonParameterName": {
          "inherited": false,
        },
        "authFailReasonParameterRemapper": {
          "inherited": false,
          "value": {},
        },
        "authFailReasonUrl": {
          "inherited": false,
        },
        "gotoParameterName": {
          "inherited": false,
          "value": "goto",
        },
        "gotoUrl": {
          "inherited": false,
        },
        "ignorePathInfo": {
          "inherited": false,
          "value": false,
        },
        "legacyRedirectUri": {
          "inherited": false,
          "value": "/agent/sunwLegacySupportURI",
        },
        "legacyUserAgentList": {
          "inherited": false,
          "value": [
            "Mozilla/4.7*",
          ],
        },
        "legacyUserAgentSupport": {
          "inherited": false,
          "value": false,
        },
        "localeCountry": {
          "inherited": false,
          "value": "US",
        },
        "localeLanguage": {
          "inherited": false,
          "value": "en",
        },
        "loginReasonMap": {
          "inherited": false,
          "value": {},
        },
        "loginReasonParameterName": {
          "inherited": false,
        },
        "portCheckEnabled": {
          "inherited": false,
          "value": false,
        },
        "portCheckFile": {
          "inherited": false,
          "value": "PortCheckContent.txt",
        },
        "portCheckSetting": {
          "inherited": false,
          "value": {
            "8080": "http",
          },
        },
        "unwantedHttpUrlParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "unwantedHttpUrlRegexParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "wantedHttpUrlParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "wantedHttpUrlRegexParams": {
          "inherited": false,
          "value": [
            "",
          ],
        },
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": {
          "inherited": false,
          "value": false,
        },
        "acceptSsoTokenDomainList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "acceptSsoTokenEnabled": {
          "inherited": false,
          "value": false,
        },
        "authExchangeCookieName": {
          "inherited": false,
        },
        "authExchangeUri": {
          "inherited": false,
        },
        "cdssoDomainList": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "cdssoRedirectUri": {
          "inherited": false,
          "value": "/agent/post-authn-redirect",
        },
        "cdssoSecureCookies": {
          "inherited": false,
          "value": false,
        },
        "cookieResetDomains": {
          "inherited": false,
          "value": {},
        },
        "cookieResetEnabled": {
          "inherited": false,
          "value": false,
        },
        "cookieResetNames": {
          "inherited": false,
          "value": [
            "",
          ],
        },
        "cookieResetPaths": {
          "inherited": false,
          "value": {},
        },
        "encodeCookies": {
          "inherited": false,
          "value": false,
        },
        "excludedUserAgentsList": {
          "inherited": false,
          "value": [],
        },
        "httpOnly": {
          "inherited": false,
          "value": true,
        },
        "setCookieAttributeMap": {
          "inherited": false,
          "value": {},
        },
        "setCookieInternalMap": {
          "inherited": false,
          "value": {},
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;
