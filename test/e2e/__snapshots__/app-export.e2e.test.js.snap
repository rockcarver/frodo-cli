// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo app export "frodo app export --all -f my-allAlphaApplications.application.json": should export all apps to a single file named my-allAlphaApplications.application.json 1`] = `""`;

exports[`frodo app export "frodo app export --all -f my-allAlphaApplications.application.json": should export all apps to a single file named my-allAlphaApplications.application.json: ./my-allAlphaApplications.application.json 1`] = `
{
  "application": {
    "testapp": {
      "_id": "testapp",
      "_provider": {
        "_id": "",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "includeSubnameInTokenClaims": true,
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {
            "push": "Baseline-CIBA",
          },
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": {
          "inherited": false,
          "value": [],
        },
        "contacts": {
          "inherited": false,
          "value": [],
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "descriptions": {
          "inherited": false,
          "value": [
            "Test App",
          ],
        },
        "grantTypes": {
          "inherited": false,
          "value": [
            "authorization_code",
          ],
        },
        "isConsentImplied": {
          "inherited": false,
          "value": false,
        },
        "javascriptOrigins": {
          "inherited": false,
          "value": [],
        },
        "logoUri": {
          "inherited": false,
          "value": [],
        },
        "mixUpMitigation": {
          "inherited": false,
          "value": false,
        },
        "name": {
          "inherited": false,
          "value": [],
        },
        "policyUri": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenGracePeriod": {
          "inherited": false,
          "value": 0,
        },
        "requestUris": {
          "inherited": false,
          "value": [],
        },
        "require_pushed_authorization_requests": {
          "inherited": false,
          "value": false,
        },
        "responseTypes": {
          "inherited": false,
          "value": [
            "code",
            "token",
            "id_token",
            "code token",
            "token id_token",
            "code id_token",
            "code token id_token",
            "device_code",
            "device_code id_token",
          ],
        },
        "sectorIdentifierUri": {
          "inherited": false,
        },
        "softwareIdentity": {
          "inherited": false,
        },
        "softwareVersion": {
          "inherited": false,
        },
        "subjectType": {
          "inherited": false,
          "value": "public",
        },
        "tokenEndpointAuthMethod": {
          "inherited": false,
          "value": "client_secret_basic",
        },
        "tokenExchangeAuthLevel": {
          "inherited": false,
          "value": 0,
        },
        "tosURI": {
          "inherited": false,
          "value": [],
        },
        "updateAccessToken": {
          "inherited": false,
        },
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "authorizationCodeLifetime": {
          "inherited": false,
          "value": 0,
        },
        "clientName": {
          "inherited": false,
          "value": [
            "testapp",
          ],
        },
        "clientType": {
          "inherited": false,
          "value": "Confidential",
        },
        "defaultScopes": {
          "inherited": false,
          "value": [],
        },
        "loopbackInterfaceRedirection": {
          "inherited": false,
          "value": false,
        },
        "redirectionUris": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "scopes": {
          "inherited": false,
          "value": [],
        },
        "status": {
          "inherited": false,
          "value": "Active",
        },
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": {
          "inherited": false,
          "value": false,
        },
        "backchannel_logout_uri": {
          "inherited": false,
        },
        "claims": {
          "inherited": false,
          "value": [],
        },
        "clientSessionUri": {
          "inherited": false,
        },
        "defaultAcrValues": {
          "inherited": false,
          "value": [],
        },
        "defaultMaxAge": {
          "inherited": false,
          "value": 600,
        },
        "defaultMaxAgeEnabled": {
          "inherited": false,
          "value": false,
        },
        "jwtTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "postLogoutRedirectUri": {
          "inherited": false,
          "value": [],
        },
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": {
          "inherited": false,
          "value": [],
        },
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "useForceAuthnForMaxAge": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": {
          "inherited": false,
        },
        "authorizationResponseEncryptionMethod": {
          "inherited": false,
        },
        "authorizationResponseSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "clientJwtPublicKey": {
          "inherited": false,
        },
        "idTokenEncryptionAlgorithm": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "idTokenEncryptionEnabled": {
          "inherited": false,
          "value": false,
        },
        "idTokenEncryptionMethod": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "idTokenPublicEncryptionKey": {
          "inherited": false,
        },
        "idTokenSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "jwkSet": {
          "inherited": false,
        },
        "jwkStoreCacheMissCacheTime": {
          "inherited": false,
          "value": 60000,
        },
        "jwksCacheTimeout": {
          "inherited": false,
          "value": 3600000,
        },
        "jwksUri": {
          "inherited": false,
        },
        "mTLSCertificateBoundAccessTokens": {
          "inherited": false,
          "value": false,
        },
        "mTLSSubjectDN": {
          "inherited": false,
        },
        "mTLSTrustedCert": {
          "inherited": false,
        },
        "publicKeyLocation": {
          "inherited": false,
          "value": "jwks_uri",
        },
        "requestParameterEncryptedAlg": {
          "inherited": false,
        },
        "requestParameterEncryptedEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "requestParameterSignedAlg": {
          "inherited": false,
        },
        "tokenEndpointAuthSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "tokenIntrospectionEncryptedResponseAlg": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "tokenIntrospectionResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "tokenIntrospectionSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "userinfoEncryptedResponseAlg": {
          "inherited": false,
        },
        "userinfoEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "userinfoResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "userinfoSignedResponseAlg": {
          "inherited": false,
        },
      },
    },
  },
  "connector": {
    "EncoreAD": {
      "_id": "provisioner.openicf/EncoreAD",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "uid",
          "cn",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "ReilS5BMTftYl2t8OZvtaQ==",
              "iv": "jdqo9Kvv2ZxpWoywTUmT7w==",
              "keySize": 16,
              "mac": "N7QnFAv3SNRsBzEau1iDDg==",
              "purpose": "idm.config.encryption",
              "salt": "ut6NNENf3Op7SOjJuXdSdw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1674482716432,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "1.5.20.12",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "required": false,
              "type": "boolean",
              "userSpecific": true,
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "JAVA_TYPE_GUARDEDSTRING",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
              "userSpecific": false,
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "0e5811ab-ef31-401b-aaa1-70b523eafa55": {
      "_id": "0e5811ab-ef31-401b-aaa1-70b523eafa55",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-497",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "1b3510cf-9352-4573-9cd8-1eaf36cc629c": {
      "_id": "1b3510cf-9352-4573-9cd8-1eaf36cc629c",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-481",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "368b5b11-d8db-4079-98e9-0573934aef04": {
      "_id": "368b5b11-d8db-4079-98e9-0573934aef04",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-503",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "9fb975e4-9723-4fac-9fe7-ee25053c6218": {
      "_id": "9fb975e4-9723-4fac-9fe7-ee25053c6218",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-492",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322": {
      "_id": "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322",
      "description": "Test App",
      "name": "testapp",
      "ssoEntities": {
        "oidcId": "testapp",
      },
      "templateName": "web",
      "templateVersion": "1.0",
    },
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2": {
      "_id": "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2",
      "description": "This is a bookmark",
      "name": "MrAnderson",
      "ssoEntities": {},
      "templateName": "bookmark",
      "templateVersion": "1.0",
      "url": "https://mranderson.scheuber.io",
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadUser": {
      "_id": "sync/managedAlpha_user_systemEncoreadUser",
      "consentRequired": false,
      "displayName": "managedAlpha_user_systemEncoreadUser",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "cn",
          "target": "cn",
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='active') ? true : false;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"] or lastSync/managedAlpha_user_systemEncoreadUser pr",
      },
      "target": "system/EncoreAD/User",
    },
    "systemEncoreadUser_managedAlpha_user": {
      "_id": "sync/systemEncoreadUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.userPrincipalName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemEncoreadUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadUser",
      "name": "systemEncoreadUser_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function javaIsEqual(old, other) {
  var JsonPatch = org.forgerock.json.JsonPatch;
  var JsonValue = org.forgerock.json.JsonValue;
  return JsonPatch.diff(JsonValue(old), JsonValue(other)).asList().size() === 0;
}

if (situation === "FOUND") {
  var params = {
    "resourceId": targetId, 
    "mapping": mappingConfig.links,
    "linkQualifier": linkQualifier
  };

  // get the preview of the target object from the outbound mapping
  var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
  var attributes = [];

  // find all values where target app user has different values from the correlated IDM user
  Object.keys(source).filter(function (key) {
    if (key in targetPreview) {
      return !javaIsEqual(source[key], targetPreview[key]); 
    } else {
      return false
    }
  }).forEach(function (key) {
    var attribute = {
      "name": key,
      "value": source[key]
    };
    attributes.push(attribute);
  })

  // create override assignment if any diff was found
  if (attributes.length > 0) {
    var assignment = {
      "name": targetId + "-overrideAssignment",
      "description": targetId + "override assignment",
      "mapping": mappingConfig.links,
      "attributes": attributes,
      "type": "__OVERRIDE__",
      "members": [{"_ref": mappingConfig.target + "/" + targetId}]
    };
    var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
    var result = openidm.action("sync", "getTargetPreview", {}, params);
    Object.keys(source).forEach(function (key) {
      if (typeof result[key] === "undefined" || javaIsEqual(source[key], result[key])) {
        return
      }
      // unable to successfully recreate object being linked, delete assignment and throw exception
      openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
      throw "Unable to successfully recreate " + sourceId + " with an assignment for " + targetId;
    })
  }
}",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {},
            "source": "openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/d7f62815-a835-4e2f-a69e-25e7f9019fc2"})",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
      ],
      "properties": [],
      "runTargetPhase": false,
      "source": "system/EncoreAD/User",
      "target": "managed/alpha_user",
    },
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export --app-id EncoreAD": should export the app with app id "EncoreAD" 1`] = `""`;

exports[`frodo app export "frodo app export --app-id EncoreAD": should export the app with app id "EncoreAD": ./EncoreAD.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreAD": {
      "_id": "provisioner.openicf/EncoreAD",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "uid",
          "cn",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "ReilS5BMTftYl2t8OZvtaQ==",
              "iv": "jdqo9Kvv2ZxpWoywTUmT7w==",
              "keySize": 16,
              "mac": "N7QnFAv3SNRsBzEau1iDDg==",
              "purpose": "idm.config.encryption",
              "salt": "ut6NNENf3Op7SOjJuXdSdw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1674482716432,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "1.5.20.12",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "required": false,
              "type": "boolean",
              "userSpecific": true,
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "JAVA_TYPE_GUARDEDSTRING",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
              "userSpecific": false,
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadUser": {
      "_id": "sync/managedAlpha_user_systemEncoreadUser",
      "consentRequired": false,
      "displayName": "managedAlpha_user_systemEncoreadUser",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "cn",
          "target": "cn",
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='active') ? true : false;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"] or lastSync/managedAlpha_user_systemEncoreadUser pr",
      },
      "target": "system/EncoreAD/User",
    },
    "systemEncoreadUser_managedAlpha_user": {
      "_id": "sync/systemEncoreadUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.userPrincipalName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemEncoreadUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadUser",
      "name": "systemEncoreadUser_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function javaIsEqual(old, other) {
  var JsonPatch = org.forgerock.json.JsonPatch;
  var JsonValue = org.forgerock.json.JsonValue;
  return JsonPatch.diff(JsonValue(old), JsonValue(other)).asList().size() === 0;
}

if (situation === "FOUND") {
  var params = {
    "resourceId": targetId, 
    "mapping": mappingConfig.links,
    "linkQualifier": linkQualifier
  };

  // get the preview of the target object from the outbound mapping
  var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
  var attributes = [];

  // find all values where target app user has different values from the correlated IDM user
  Object.keys(source).filter(function (key) {
    if (key in targetPreview) {
      return !javaIsEqual(source[key], targetPreview[key]); 
    } else {
      return false
    }
  }).forEach(function (key) {
    var attribute = {
      "name": key,
      "value": source[key]
    };
    attributes.push(attribute);
  })

  // create override assignment if any diff was found
  if (attributes.length > 0) {
    var assignment = {
      "name": targetId + "-overrideAssignment",
      "description": targetId + "override assignment",
      "mapping": mappingConfig.links,
      "attributes": attributes,
      "type": "__OVERRIDE__",
      "members": [{"_ref": mappingConfig.target + "/" + targetId}]
    };
    var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
    var result = openidm.action("sync", "getTargetPreview", {}, params);
    Object.keys(source).forEach(function (key) {
      if (typeof result[key] === "undefined" || javaIsEqual(source[key], result[key])) {
        return
      }
      // unable to successfully recreate object being linked, delete assignment and throw exception
      openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
      throw "Unable to successfully recreate " + sourceId + " with an assignment for " + targetId;
    })
  }
}",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {},
            "source": "openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/d7f62815-a835-4e2f-a69e-25e7f9019fc2"})",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
      ],
      "properties": [],
      "runTargetPhase": false,
      "source": "system/EncoreAD/User",
      "target": "managed/alpha_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export --app-id EncoreAD": should export the app with app id "EncoreAD": EncoreAD.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreAD": {
      "_id": "provisioner.openicf/EncoreAD",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "uid",
          "cn",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "ReilS5BMTftYl2t8OZvtaQ==",
              "iv": "jdqo9Kvv2ZxpWoywTUmT7w==",
              "keySize": 16,
              "mac": "N7QnFAv3SNRsBzEau1iDDg==",
              "purpose": "idm.config.encryption",
              "salt": "ut6NNENf3Op7SOjJuXdSdw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1674482716432,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "1.5.20.12",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "required": false,
              "type": "boolean",
              "userSpecific": true,
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "JAVA_TYPE_GUARDEDSTRING",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
              "userSpecific": false,
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadUser": {
      "_id": "sync/managedAlpha_user_systemEncoreadUser",
      "consentRequired": false,
      "displayName": "managedAlpha_user_systemEncoreadUser",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "cn",
          "target": "cn",
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='active') ? true : false;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"] or lastSync/managedAlpha_user_systemEncoreadUser pr",
      },
      "target": "system/EncoreAD/User",
    },
    "systemEncoreadUser_managedAlpha_user": {
      "_id": "sync/systemEncoreadUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.userPrincipalName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemEncoreadUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadUser",
      "name": "systemEncoreadUser_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function javaIsEqual(old, other) {
  var JsonPatch = org.forgerock.json.JsonPatch;
  var JsonValue = org.forgerock.json.JsonValue;
  return JsonPatch.diff(JsonValue(old), JsonValue(other)).asList().size() === 0;
}

if (situation === "FOUND") {
  var params = {
    "resourceId": targetId, 
    "mapping": mappingConfig.links,
    "linkQualifier": linkQualifier
  };

  // get the preview of the target object from the outbound mapping
  var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
  var attributes = [];

  // find all values where target app user has different values from the correlated IDM user
  Object.keys(source).filter(function (key) {
    if (key in targetPreview) {
      return !javaIsEqual(source[key], targetPreview[key]); 
    } else {
      return false
    }
  }).forEach(function (key) {
    var attribute = {
      "name": key,
      "value": source[key]
    };
    attributes.push(attribute);
  })

  // create override assignment if any diff was found
  if (attributes.length > 0) {
    var assignment = {
      "name": targetId + "-overrideAssignment",
      "description": targetId + "override assignment",
      "mapping": mappingConfig.links,
      "attributes": attributes,
      "type": "__OVERRIDE__",
      "members": [{"_ref": mappingConfig.target + "/" + targetId}]
    };
    var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
    var result = openidm.action("sync", "getTargetPreview", {}, params);
    Object.keys(source).forEach(function (key) {
      if (typeof result[key] === "undefined" || javaIsEqual(source[key], result[key])) {
        return
      }
      // unable to successfully recreate object being linked, delete assignment and throw exception
      openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
      throw "Unable to successfully recreate " + sourceId + " with an assignment for " + targetId;
    })
  }
}",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {},
            "source": "openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/d7f62815-a835-4e2f-a69e-25e7f9019fc2"})",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
      ],
      "properties": [],
      "runTargetPhase": false,
      "source": "system/EncoreAD/User",
      "target": "managed/alpha_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files 1`] = `""`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./EncoreAD.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreAD": {
      "_id": "provisioner.openicf/EncoreAD",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "uid",
          "cn",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "ReilS5BMTftYl2t8OZvtaQ==",
              "iv": "jdqo9Kvv2ZxpWoywTUmT7w==",
              "keySize": 16,
              "mac": "N7QnFAv3SNRsBzEau1iDDg==",
              "purpose": "idm.config.encryption",
              "salt": "ut6NNENf3Op7SOjJuXdSdw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1674482716432,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "1.5.20.12",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "required": false,
              "type": "boolean",
              "userSpecific": true,
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "JAVA_TYPE_GUARDEDSTRING",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
              "userSpecific": false,
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadUser": {
      "_id": "sync/managedAlpha_user_systemEncoreadUser",
      "consentRequired": false,
      "displayName": "managedAlpha_user_systemEncoreadUser",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "cn",
          "target": "cn",
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='active') ? true : false;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"] or lastSync/managedAlpha_user_systemEncoreadUser pr",
      },
      "target": "system/EncoreAD/User",
    },
    "systemEncoreadUser_managedAlpha_user": {
      "_id": "sync/systemEncoreadUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.userPrincipalName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemEncoreadUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadUser",
      "name": "systemEncoreadUser_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function javaIsEqual(old, other) {
  var JsonPatch = org.forgerock.json.JsonPatch;
  var JsonValue = org.forgerock.json.JsonValue;
  return JsonPatch.diff(JsonValue(old), JsonValue(other)).asList().size() === 0;
}

if (situation === "FOUND") {
  var params = {
    "resourceId": targetId, 
    "mapping": mappingConfig.links,
    "linkQualifier": linkQualifier
  };

  // get the preview of the target object from the outbound mapping
  var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
  var attributes = [];

  // find all values where target app user has different values from the correlated IDM user
  Object.keys(source).filter(function (key) {
    if (key in targetPreview) {
      return !javaIsEqual(source[key], targetPreview[key]); 
    } else {
      return false
    }
  }).forEach(function (key) {
    var attribute = {
      "name": key,
      "value": source[key]
    };
    attributes.push(attribute);
  })

  // create override assignment if any diff was found
  if (attributes.length > 0) {
    var assignment = {
      "name": targetId + "-overrideAssignment",
      "description": targetId + "override assignment",
      "mapping": mappingConfig.links,
      "attributes": attributes,
      "type": "__OVERRIDE__",
      "members": [{"_ref": mappingConfig.target + "/" + targetId}]
    };
    var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
    var result = openidm.action("sync", "getTargetPreview", {}, params);
    Object.keys(source).forEach(function (key) {
      if (typeof result[key] === "undefined" || javaIsEqual(source[key], result[key])) {
        return
      }
      // unable to successfully recreate object being linked, delete assignment and throw exception
      openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
      throw "Unable to successfully recreate " + sourceId + " with an assignment for " + targetId;
    })
  }
}",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {},
            "source": "openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/d7f62815-a835-4e2f-a69e-25e7f9019fc2"})",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
      ],
      "properties": [],
      "runTargetPhase": false,
      "source": "system/EncoreAD/User",
      "target": "managed/alpha_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./MrAnderson.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2": {
      "_id": "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2",
      "description": "This is a bookmark",
      "name": "MrAnderson",
      "ssoEntities": {},
      "templateName": "bookmark",
      "templateVersion": "1.0",
      "url": "https://mranderson.scheuber.io",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./benefits.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "9fb975e4-9723-4fac-9fe7-ee25053c6218": {
      "_id": "9fb975e4-9723-4fac-9fe7-ee25053c6218",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-492",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./company.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "1b3510cf-9352-4573-9cd8-1eaf36cc629c": {
      "_id": "1b3510cf-9352-4573-9cd8-1eaf36cc629c",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-481",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./engineering.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "0e5811ab-ef31-401b-aaa1-70b523eafa55": {
      "_id": "0e5811ab-ef31-401b-aaa1-70b523eafa55",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-497",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./sales.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "368b5b11-d8db-4079-98e9-0573934aef04": {
      "_id": "368b5b11-d8db-4079-98e9-0573934aef04",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-503",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: ./testapp.application.json 1`] = `
{
  "application": {
    "testapp": {
      "_id": "testapp",
      "_provider": {
        "_id": "",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "includeSubnameInTokenClaims": true,
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {
            "push": "Baseline-CIBA",
          },
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": {
          "inherited": false,
          "value": [],
        },
        "contacts": {
          "inherited": false,
          "value": [],
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "descriptions": {
          "inherited": false,
          "value": [
            "Test App",
          ],
        },
        "grantTypes": {
          "inherited": false,
          "value": [
            "authorization_code",
          ],
        },
        "isConsentImplied": {
          "inherited": false,
          "value": false,
        },
        "javascriptOrigins": {
          "inherited": false,
          "value": [],
        },
        "logoUri": {
          "inherited": false,
          "value": [],
        },
        "mixUpMitigation": {
          "inherited": false,
          "value": false,
        },
        "name": {
          "inherited": false,
          "value": [],
        },
        "policyUri": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenGracePeriod": {
          "inherited": false,
          "value": 0,
        },
        "requestUris": {
          "inherited": false,
          "value": [],
        },
        "require_pushed_authorization_requests": {
          "inherited": false,
          "value": false,
        },
        "responseTypes": {
          "inherited": false,
          "value": [
            "code",
            "token",
            "id_token",
            "code token",
            "token id_token",
            "code id_token",
            "code token id_token",
            "device_code",
            "device_code id_token",
          ],
        },
        "sectorIdentifierUri": {
          "inherited": false,
        },
        "softwareIdentity": {
          "inherited": false,
        },
        "softwareVersion": {
          "inherited": false,
        },
        "subjectType": {
          "inherited": false,
          "value": "public",
        },
        "tokenEndpointAuthMethod": {
          "inherited": false,
          "value": "client_secret_basic",
        },
        "tokenExchangeAuthLevel": {
          "inherited": false,
          "value": 0,
        },
        "tosURI": {
          "inherited": false,
          "value": [],
        },
        "updateAccessToken": {
          "inherited": false,
        },
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "authorizationCodeLifetime": {
          "inherited": false,
          "value": 0,
        },
        "clientName": {
          "inherited": false,
          "value": [
            "testapp",
          ],
        },
        "clientType": {
          "inherited": false,
          "value": "Confidential",
        },
        "defaultScopes": {
          "inherited": false,
          "value": [],
        },
        "loopbackInterfaceRedirection": {
          "inherited": false,
          "value": false,
        },
        "redirectionUris": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "scopes": {
          "inherited": false,
          "value": [],
        },
        "status": {
          "inherited": false,
          "value": "Active",
        },
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": {
          "inherited": false,
          "value": false,
        },
        "backchannel_logout_uri": {
          "inherited": false,
        },
        "claims": {
          "inherited": false,
          "value": [],
        },
        "clientSessionUri": {
          "inherited": false,
        },
        "defaultAcrValues": {
          "inherited": false,
          "value": [],
        },
        "defaultMaxAge": {
          "inherited": false,
          "value": 600,
        },
        "defaultMaxAgeEnabled": {
          "inherited": false,
          "value": false,
        },
        "jwtTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "postLogoutRedirectUri": {
          "inherited": false,
          "value": [],
        },
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": {
          "inherited": false,
          "value": [],
        },
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "useForceAuthnForMaxAge": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": {
          "inherited": false,
        },
        "authorizationResponseEncryptionMethod": {
          "inherited": false,
        },
        "authorizationResponseSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "clientJwtPublicKey": {
          "inherited": false,
        },
        "idTokenEncryptionAlgorithm": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "idTokenEncryptionEnabled": {
          "inherited": false,
          "value": false,
        },
        "idTokenEncryptionMethod": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "idTokenPublicEncryptionKey": {
          "inherited": false,
        },
        "idTokenSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "jwkSet": {
          "inherited": false,
        },
        "jwkStoreCacheMissCacheTime": {
          "inherited": false,
          "value": 60000,
        },
        "jwksCacheTimeout": {
          "inherited": false,
          "value": 3600000,
        },
        "jwksUri": {
          "inherited": false,
        },
        "mTLSCertificateBoundAccessTokens": {
          "inherited": false,
          "value": false,
        },
        "mTLSSubjectDN": {
          "inherited": false,
        },
        "mTLSTrustedCert": {
          "inherited": false,
        },
        "publicKeyLocation": {
          "inherited": false,
          "value": "jwks_uri",
        },
        "requestParameterEncryptedAlg": {
          "inherited": false,
        },
        "requestParameterEncryptedEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "requestParameterSignedAlg": {
          "inherited": false,
        },
        "tokenEndpointAuthSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "tokenIntrospectionEncryptedResponseAlg": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "tokenIntrospectionResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "tokenIntrospectionSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "userinfoEncryptedResponseAlg": {
          "inherited": false,
        },
        "userinfoEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "userinfoResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "userinfoSignedResponseAlg": {
          "inherited": false,
        },
      },
    },
  },
  "managedApplication": {
    "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322": {
      "_id": "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322",
      "description": "Test App",
      "name": "testapp",
      "ssoEntities": {
        "oidcId": "testapp",
      },
      "templateName": "web",
      "templateVersion": "1.0",
    },
  },
  "meta": Any<Object>,
  "script": {},
}
`;

exports[`frodo app export "frodo app export -a --file my-other-allAlphaApplications.application.json": should export all apps to a single file named my-other-allAlphaApplications.application.json 1`] = `""`;

exports[`frodo app export "frodo app export -a --file my-other-allAlphaApplications.application.json": should export all apps to a single file named my-other-allAlphaApplications.application.json: ./my-other-allAlphaApplications.application.json 1`] = `
{
  "application": {
    "testapp": {
      "_id": "testapp",
      "_provider": {
        "_id": "",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "includeSubnameInTokenClaims": true,
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {
            "push": "Baseline-CIBA",
          },
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": {
          "inherited": false,
          "value": [],
        },
        "contacts": {
          "inherited": false,
          "value": [],
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "descriptions": {
          "inherited": false,
          "value": [
            "Test App",
          ],
        },
        "grantTypes": {
          "inherited": false,
          "value": [
            "authorization_code",
          ],
        },
        "isConsentImplied": {
          "inherited": false,
          "value": false,
        },
        "javascriptOrigins": {
          "inherited": false,
          "value": [],
        },
        "logoUri": {
          "inherited": false,
          "value": [],
        },
        "mixUpMitigation": {
          "inherited": false,
          "value": false,
        },
        "name": {
          "inherited": false,
          "value": [],
        },
        "policyUri": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenGracePeriod": {
          "inherited": false,
          "value": 0,
        },
        "requestUris": {
          "inherited": false,
          "value": [],
        },
        "require_pushed_authorization_requests": {
          "inherited": false,
          "value": false,
        },
        "responseTypes": {
          "inherited": false,
          "value": [
            "code",
            "token",
            "id_token",
            "code token",
            "token id_token",
            "code id_token",
            "code token id_token",
            "device_code",
            "device_code id_token",
          ],
        },
        "sectorIdentifierUri": {
          "inherited": false,
        },
        "softwareIdentity": {
          "inherited": false,
        },
        "softwareVersion": {
          "inherited": false,
        },
        "subjectType": {
          "inherited": false,
          "value": "public",
        },
        "tokenEndpointAuthMethod": {
          "inherited": false,
          "value": "client_secret_basic",
        },
        "tokenExchangeAuthLevel": {
          "inherited": false,
          "value": 0,
        },
        "tosURI": {
          "inherited": false,
          "value": [],
        },
        "updateAccessToken": {
          "inherited": false,
        },
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "authorizationCodeLifetime": {
          "inherited": false,
          "value": 0,
        },
        "clientName": {
          "inherited": false,
          "value": [
            "testapp",
          ],
        },
        "clientType": {
          "inherited": false,
          "value": "Confidential",
        },
        "defaultScopes": {
          "inherited": false,
          "value": [],
        },
        "loopbackInterfaceRedirection": {
          "inherited": false,
          "value": false,
        },
        "redirectionUris": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "scopes": {
          "inherited": false,
          "value": [],
        },
        "status": {
          "inherited": false,
          "value": "Active",
        },
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": {
          "inherited": false,
          "value": false,
        },
        "backchannel_logout_uri": {
          "inherited": false,
        },
        "claims": {
          "inherited": false,
          "value": [],
        },
        "clientSessionUri": {
          "inherited": false,
        },
        "defaultAcrValues": {
          "inherited": false,
          "value": [],
        },
        "defaultMaxAge": {
          "inherited": false,
          "value": 600,
        },
        "defaultMaxAgeEnabled": {
          "inherited": false,
          "value": false,
        },
        "jwtTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "postLogoutRedirectUri": {
          "inherited": false,
          "value": [],
        },
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": {
          "inherited": false,
          "value": [],
        },
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "useForceAuthnForMaxAge": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": {
          "inherited": false,
        },
        "authorizationResponseEncryptionMethod": {
          "inherited": false,
        },
        "authorizationResponseSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "clientJwtPublicKey": {
          "inherited": false,
        },
        "idTokenEncryptionAlgorithm": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "idTokenEncryptionEnabled": {
          "inherited": false,
          "value": false,
        },
        "idTokenEncryptionMethod": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "idTokenPublicEncryptionKey": {
          "inherited": false,
        },
        "idTokenSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "jwkSet": {
          "inherited": false,
        },
        "jwkStoreCacheMissCacheTime": {
          "inherited": false,
          "value": 60000,
        },
        "jwksCacheTimeout": {
          "inherited": false,
          "value": 3600000,
        },
        "jwksUri": {
          "inherited": false,
        },
        "mTLSCertificateBoundAccessTokens": {
          "inherited": false,
          "value": false,
        },
        "mTLSSubjectDN": {
          "inherited": false,
        },
        "mTLSTrustedCert": {
          "inherited": false,
        },
        "publicKeyLocation": {
          "inherited": false,
          "value": "jwks_uri",
        },
        "requestParameterEncryptedAlg": {
          "inherited": false,
        },
        "requestParameterEncryptedEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "requestParameterSignedAlg": {
          "inherited": false,
        },
        "tokenEndpointAuthSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "tokenIntrospectionEncryptedResponseAlg": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "tokenIntrospectionResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "tokenIntrospectionSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "userinfoEncryptedResponseAlg": {
          "inherited": false,
        },
        "userinfoEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "userinfoResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "userinfoSignedResponseAlg": {
          "inherited": false,
        },
      },
    },
  },
  "connector": {
    "EncoreAD": {
      "_id": "provisioner.openicf/EncoreAD",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "uid",
          "cn",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "ReilS5BMTftYl2t8OZvtaQ==",
              "iv": "jdqo9Kvv2ZxpWoywTUmT7w==",
              "keySize": 16,
              "mac": "N7QnFAv3SNRsBzEau1iDDg==",
              "purpose": "idm.config.encryption",
              "salt": "ut6NNENf3Op7SOjJuXdSdw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1674482716432,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "1.5.20.12",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "required": false,
              "type": "boolean",
              "userSpecific": true,
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "JAVA_TYPE_GUARDEDSTRING",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
              "userSpecific": false,
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "0e5811ab-ef31-401b-aaa1-70b523eafa55": {
      "_id": "0e5811ab-ef31-401b-aaa1-70b523eafa55",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-497",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "1b3510cf-9352-4573-9cd8-1eaf36cc629c": {
      "_id": "1b3510cf-9352-4573-9cd8-1eaf36cc629c",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-481",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "368b5b11-d8db-4079-98e9-0573934aef04": {
      "_id": "368b5b11-d8db-4079-98e9-0573934aef04",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-503",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "9fb975e4-9723-4fac-9fe7-ee25053c6218": {
      "_id": "9fb975e4-9723-4fac-9fe7-ee25053c6218",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-492",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322": {
      "_id": "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322",
      "description": "Test App",
      "name": "testapp",
      "ssoEntities": {
        "oidcId": "testapp",
      },
      "templateName": "web",
      "templateVersion": "1.0",
    },
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2": {
      "_id": "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2",
      "description": "This is a bookmark",
      "name": "MrAnderson",
      "ssoEntities": {},
      "templateName": "bookmark",
      "templateVersion": "1.0",
      "url": "https://mranderson.scheuber.io",
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadUser": {
      "_id": "sync/managedAlpha_user_systemEncoreadUser",
      "consentRequired": false,
      "displayName": "managedAlpha_user_systemEncoreadUser",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "cn",
          "target": "cn",
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='active') ? true : false;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"] or lastSync/managedAlpha_user_systemEncoreadUser pr",
      },
      "target": "system/EncoreAD/User",
    },
    "systemEncoreadUser_managedAlpha_user": {
      "_id": "sync/systemEncoreadUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.userPrincipalName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemEncoreadUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadUser",
      "name": "systemEncoreadUser_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function javaIsEqual(old, other) {
  var JsonPatch = org.forgerock.json.JsonPatch;
  var JsonValue = org.forgerock.json.JsonValue;
  return JsonPatch.diff(JsonValue(old), JsonValue(other)).asList().size() === 0;
}

if (situation === "FOUND") {
  var params = {
    "resourceId": targetId, 
    "mapping": mappingConfig.links,
    "linkQualifier": linkQualifier
  };

  // get the preview of the target object from the outbound mapping
  var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
  var attributes = [];

  // find all values where target app user has different values from the correlated IDM user
  Object.keys(source).filter(function (key) {
    if (key in targetPreview) {
      return !javaIsEqual(source[key], targetPreview[key]); 
    } else {
      return false
    }
  }).forEach(function (key) {
    var attribute = {
      "name": key,
      "value": source[key]
    };
    attributes.push(attribute);
  })

  // create override assignment if any diff was found
  if (attributes.length > 0) {
    var assignment = {
      "name": targetId + "-overrideAssignment",
      "description": targetId + "override assignment",
      "mapping": mappingConfig.links,
      "attributes": attributes,
      "type": "__OVERRIDE__",
      "members": [{"_ref": mappingConfig.target + "/" + targetId}]
    };
    var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
    var result = openidm.action("sync", "getTargetPreview", {}, params);
    Object.keys(source).forEach(function (key) {
      if (typeof result[key] === "undefined" || javaIsEqual(source[key], result[key])) {
        return
      }
      // unable to successfully recreate object being linked, delete assignment and throw exception
      openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
      throw "Unable to successfully recreate " + sourceId + " with an assignment for " + targetId;
    })
  }
}",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {},
            "source": "openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/d7f62815-a835-4e2f-a69e-25e7f9019fc2"})",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
      ],
      "properties": [],
      "runTargetPhase": false,
      "source": "system/EncoreAD/User",
      "target": "managed/alpha_user",
    },
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -a --no-deps -f my-yet-another-allAlphaApplications.application.json": should export all apps to a single file with no dependencies into a file named my-yet-another-allAlphaApplications.application.json 1`] = `""`;

exports[`frodo app export "frodo app export -a --no-deps -f my-yet-another-allAlphaApplications.application.json": should export all apps to a single file with no dependencies into a file named my-yet-another-allAlphaApplications.application.json: ./my-yet-another-allAlphaApplications.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "0e5811ab-ef31-401b-aaa1-70b523eafa55": {
      "_id": "0e5811ab-ef31-401b-aaa1-70b523eafa55",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-497",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "1b3510cf-9352-4573-9cd8-1eaf36cc629c": {
      "_id": "1b3510cf-9352-4573-9cd8-1eaf36cc629c",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-481",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "368b5b11-d8db-4079-98e9-0573934aef04": {
      "_id": "368b5b11-d8db-4079-98e9-0573934aef04",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-503",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "9fb975e4-9723-4fac-9fe7-ee25053c6218": {
      "_id": "9fb975e4-9723-4fac-9fe7-ee25053c6218",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-492",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322": {
      "_id": "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322",
      "description": "Test App",
      "name": "testapp",
      "ssoEntities": {
        "oidcId": "testapp",
      },
      "templateName": "web",
      "templateVersion": "1.0",
    },
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2": {
      "_id": "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2",
      "description": "This is a bookmark",
      "name": "MrAnderson",
      "ssoEntities": {},
      "templateName": "bookmark",
      "templateVersion": "1.0",
      "url": "https://mranderson.scheuber.io",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -a --no-deps -f my-yet-another-allAlphaApplications.application.json": should export all apps to a single file with no dependencies into a file named my-yet-another-allAlphaApplications.application.json: my-yet-another-allAlphaApplications.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "0e5811ab-ef31-401b-aaa1-70b523eafa55": {
      "_id": "0e5811ab-ef31-401b-aaa1-70b523eafa55",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-497",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "1b3510cf-9352-4573-9cd8-1eaf36cc629c": {
      "_id": "1b3510cf-9352-4573-9cd8-1eaf36cc629c",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-481",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "368b5b11-d8db-4079-98e9-0573934aef04": {
      "_id": "368b5b11-d8db-4079-98e9-0573934aef04",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-503",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "9fb975e4-9723-4fac-9fe7-ee25053c6218": {
      "_id": "9fb975e4-9723-4fac-9fe7-ee25053c6218",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-492",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322": {
      "_id": "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322",
      "description": "Test App",
      "name": "testapp",
      "ssoEntities": {
        "oidcId": "testapp",
      },
      "templateName": "web",
      "templateVersion": "1.0",
    },
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2": {
      "_id": "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2",
      "description": "This is a bookmark",
      "name": "MrAnderson",
      "ssoEntities": {},
      "templateName": "bookmark",
      "templateVersion": "1.0",
      "url": "https://mranderson.scheuber.io",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -a": should export all apps to a single file 1`] = `""`;

exports[`frodo app export "frodo app export -a": should export all apps to a single file: ./allAlphaApplications.application.json 1`] = `
{
  "application": {
    "testapp": {
      "_id": "testapp",
      "_provider": {
        "_id": "",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "includeSubnameInTokenClaims": true,
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {
            "push": "Baseline-CIBA",
          },
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": {
          "inherited": false,
          "value": [],
        },
        "contacts": {
          "inherited": false,
          "value": [],
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "descriptions": {
          "inherited": false,
          "value": [
            "Test App",
          ],
        },
        "grantTypes": {
          "inherited": false,
          "value": [
            "authorization_code",
          ],
        },
        "isConsentImplied": {
          "inherited": false,
          "value": false,
        },
        "javascriptOrigins": {
          "inherited": false,
          "value": [],
        },
        "logoUri": {
          "inherited": false,
          "value": [],
        },
        "mixUpMitigation": {
          "inherited": false,
          "value": false,
        },
        "name": {
          "inherited": false,
          "value": [],
        },
        "policyUri": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenGracePeriod": {
          "inherited": false,
          "value": 0,
        },
        "requestUris": {
          "inherited": false,
          "value": [],
        },
        "require_pushed_authorization_requests": {
          "inherited": false,
          "value": false,
        },
        "responseTypes": {
          "inherited": false,
          "value": [
            "code",
            "token",
            "id_token",
            "code token",
            "token id_token",
            "code id_token",
            "code token id_token",
            "device_code",
            "device_code id_token",
          ],
        },
        "sectorIdentifierUri": {
          "inherited": false,
        },
        "softwareIdentity": {
          "inherited": false,
        },
        "softwareVersion": {
          "inherited": false,
        },
        "subjectType": {
          "inherited": false,
          "value": "public",
        },
        "tokenEndpointAuthMethod": {
          "inherited": false,
          "value": "client_secret_basic",
        },
        "tokenExchangeAuthLevel": {
          "inherited": false,
          "value": 0,
        },
        "tosURI": {
          "inherited": false,
          "value": [],
        },
        "updateAccessToken": {
          "inherited": false,
        },
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "authorizationCodeLifetime": {
          "inherited": false,
          "value": 0,
        },
        "clientName": {
          "inherited": false,
          "value": [
            "testapp",
          ],
        },
        "clientType": {
          "inherited": false,
          "value": "Confidential",
        },
        "defaultScopes": {
          "inherited": false,
          "value": [],
        },
        "loopbackInterfaceRedirection": {
          "inherited": false,
          "value": false,
        },
        "redirectionUris": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "scopes": {
          "inherited": false,
          "value": [],
        },
        "status": {
          "inherited": false,
          "value": "Active",
        },
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": {
          "inherited": false,
          "value": false,
        },
        "backchannel_logout_uri": {
          "inherited": false,
        },
        "claims": {
          "inherited": false,
          "value": [],
        },
        "clientSessionUri": {
          "inherited": false,
        },
        "defaultAcrValues": {
          "inherited": false,
          "value": [],
        },
        "defaultMaxAge": {
          "inherited": false,
          "value": 600,
        },
        "defaultMaxAgeEnabled": {
          "inherited": false,
          "value": false,
        },
        "jwtTokenLifetime": {
          "inherited": false,
          "value": 0,
        },
        "postLogoutRedirectUri": {
          "inherited": false,
          "value": [],
        },
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": {
          "inherited": false,
          "value": [],
        },
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "useForceAuthnForMaxAge": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": {
          "inherited": false,
        },
        "authorizationResponseEncryptionMethod": {
          "inherited": false,
        },
        "authorizationResponseSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "clientJwtPublicKey": {
          "inherited": false,
        },
        "idTokenEncryptionAlgorithm": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "idTokenEncryptionEnabled": {
          "inherited": false,
          "value": false,
        },
        "idTokenEncryptionMethod": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "idTokenPublicEncryptionKey": {
          "inherited": false,
        },
        "idTokenSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "jwkSet": {
          "inherited": false,
        },
        "jwkStoreCacheMissCacheTime": {
          "inherited": false,
          "value": 60000,
        },
        "jwksCacheTimeout": {
          "inherited": false,
          "value": 3600000,
        },
        "jwksUri": {
          "inherited": false,
        },
        "mTLSCertificateBoundAccessTokens": {
          "inherited": false,
          "value": false,
        },
        "mTLSSubjectDN": {
          "inherited": false,
        },
        "mTLSTrustedCert": {
          "inherited": false,
        },
        "publicKeyLocation": {
          "inherited": false,
          "value": "jwks_uri",
        },
        "requestParameterEncryptedAlg": {
          "inherited": false,
        },
        "requestParameterEncryptedEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "requestParameterSignedAlg": {
          "inherited": false,
        },
        "tokenEndpointAuthSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "tokenIntrospectionEncryptedResponseAlg": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "tokenIntrospectionResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "tokenIntrospectionSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "userinfoEncryptedResponseAlg": {
          "inherited": false,
        },
        "userinfoEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "userinfoResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "userinfoSignedResponseAlg": {
          "inherited": false,
        },
      },
    },
  },
  "connector": {
    "EncoreAD": {
      "_id": "provisioner.openicf/EncoreAD",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "uid",
          "cn",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "ReilS5BMTftYl2t8OZvtaQ==",
              "iv": "jdqo9Kvv2ZxpWoywTUmT7w==",
              "keySize": 16,
              "mac": "N7QnFAv3SNRsBzEau1iDDg==",
              "purpose": "idm.config.encryption",
              "salt": "ut6NNENf3Op7SOjJuXdSdw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1674482716432,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "1.5.20.12",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "required": false,
              "type": "boolean",
              "userSpecific": true,
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "JAVA_TYPE_GUARDEDSTRING",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "required": false,
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
              "userSpecific": false,
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "0e5811ab-ef31-401b-aaa1-70b523eafa55": {
      "_id": "0e5811ab-ef31-401b-aaa1-70b523eafa55",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-497",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "1b3510cf-9352-4573-9cd8-1eaf36cc629c": {
      "_id": "1b3510cf-9352-4573-9cd8-1eaf36cc629c",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-481",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "368b5b11-d8db-4079-98e9-0573934aef04": {
      "_id": "368b5b11-d8db-4079-98e9-0573934aef04",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-503",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "9fb975e4-9723-4fac-9fe7-ee25053c6218": {
      "_id": "9fb975e4-9723-4fac-9fe7-ee25053c6218",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "c88e6422-561c-4362-9cd1-6a377ad97b36-492",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322": {
      "_id": "ab00f0cd-e7a0-44fe-9ae9-f80f0e193322",
      "description": "Test App",
      "name": "testapp",
      "ssoEntities": {
        "oidcId": "testapp",
      },
      "templateName": "web",
      "templateVersion": "1.0",
    },
    "d7f62815-a835-4e2f-a69e-25e7f9019fc2": {
      "_id": "d7f62815-a835-4e2f-a69e-25e7f9019fc2",
      "authoritative": false,
      "connectorId": "EncoreAD",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemEncoreadUser_managedAlpha_user",
        "managedAlpha_user_systemEncoreadUser",
      ],
      "name": "EncoreAD",
      "templateName": "active.directory",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "cn": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "userSpecific": true,
              },
              "__NAME__": {
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "userSpecific": true,
              },
              "accountExpires": {
                "userSpecific": true,
              },
              "c": {
                "userSpecific": true,
              },
              "cn": {
                "userSpecific": true,
              },
              "co": {
                "userSpecific": true,
              },
              "company": {
                "userSpecific": true,
              },
              "countryCode": {
                "userSpecific": true,
              },
              "department": {
                "userSpecific": true,
              },
              "description": {
                "userSpecific": true,
              },
              "displayName": {
                "userSpecific": true,
              },
              "division": {
                "userSpecific": true,
              },
              "employeeID": {
                "userSpecific": true,
              },
              "employeeNumber": {
                "userSpecific": true,
              },
              "employeeType": {
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "userSpecific": true,
              },
              "givenName": {
                "userSpecific": true,
              },
              "homePhone": {
                "userSpecific": true,
              },
              "initials": {
                "userSpecific": true,
              },
              "l": {
                "userSpecific": true,
              },
              "lastLogon": {
                "userSpecific": true,
              },
              "ldapGroups": {},
              "lockoutTime": {
                "userSpecific": true,
              },
              "mail": {
                "userSpecific": true,
              },
              "manager": {
                "userSpecific": true,
              },
              "memberOf": {
                "userSpecific": true,
              },
              "middleName": {
                "userSpecific": true,
              },
              "mobile": {
                "userSpecific": true,
              },
              "objectGUID": {
                "userSpecific": true,
              },
              "otherHomePhone": {
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "userSpecific": true,
              },
              "postOfficeBox": {
                "userSpecific": true,
              },
              "postalCode": {
                "userSpecific": true,
              },
              "pwdLastSet": {
                "userSpecific": true,
              },
              "sAMAccountName": {
                "userSpecific": true,
              },
              "sn": {
                "userSpecific": true,
              },
              "st": {
                "userSpecific": true,
              },
              "streetAddress": {
                "userSpecific": true,
              },
              "telephoneNumber": {
                "userSpecific": true,
              },
              "title": {
                "userSpecific": true,
              },
              "uSNChanged": {
                "userSpecific": true,
              },
              "uSNCreated": {
                "userSpecific": true,
              },
              "userAccountControl": {
                "userSpecific": true,
              },
              "userPrincipalName": {
                "userSpecific": true,
              },
              "whenChanged": {
                "userSpecific": true,
              },
              "whenCreated": {
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2": {
      "_id": "e9f2ecd5-3d50-4da0-9ca2-587dbca390e2",
      "description": "This is a bookmark",
      "name": "MrAnderson",
      "ssoEntities": {},
      "templateName": "bookmark",
      "templateVersion": "1.0",
      "url": "https://mranderson.scheuber.io",
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadUser": {
      "_id": "sync/managedAlpha_user_systemEncoreadUser",
      "consentRequired": false,
      "displayName": "managedAlpha_user_systemEncoreadUser",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "cn",
          "target": "cn",
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='active') ? true : false;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "d7f62815-a835-4e2f-a69e-25e7f9019fc2"] or lastSync/managedAlpha_user_systemEncoreadUser pr",
      },
      "target": "system/EncoreAD/User",
    },
    "systemEncoreadUser_managedAlpha_user": {
      "_id": "sync/systemEncoreadUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq "' + source.userPrincipalName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemEncoreadUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadUser",
      "name": "systemEncoreadUser_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function javaIsEqual(old, other) {
  var JsonPatch = org.forgerock.json.JsonPatch;
  var JsonValue = org.forgerock.json.JsonValue;
  return JsonPatch.diff(JsonValue(old), JsonValue(other)).asList().size() === 0;
}

if (situation === "FOUND") {
  var params = {
    "resourceId": targetId, 
    "mapping": mappingConfig.links,
    "linkQualifier": linkQualifier
  };

  // get the preview of the target object from the outbound mapping
  var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
  var attributes = [];

  // find all values where target app user has different values from the correlated IDM user
  Object.keys(source).filter(function (key) {
    if (key in targetPreview) {
      return !javaIsEqual(source[key], targetPreview[key]); 
    } else {
      return false
    }
  }).forEach(function (key) {
    var attribute = {
      "name": key,
      "value": source[key]
    };
    attributes.push(attribute);
  })

  // create override assignment if any diff was found
  if (attributes.length > 0) {
    var assignment = {
      "name": targetId + "-overrideAssignment",
      "description": targetId + "override assignment",
      "mapping": mappingConfig.links,
      "attributes": attributes,
      "type": "__OVERRIDE__",
      "members": [{"_ref": mappingConfig.target + "/" + targetId}]
    };
    var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
    var result = openidm.action("sync", "getTargetPreview", {}, params);
    Object.keys(source).forEach(function (key) {
      if (typeof result[key] === "undefined" || javaIsEqual(source[key], result[key])) {
        return
      }
      // unable to successfully recreate object being linked, delete assignment and throw exception
      openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
      throw "Unable to successfully recreate " + sourceId + " with an assignment for " + targetId;
    })
  }
}",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {},
            "source": "openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/d7f62815-a835-4e2f-a69e-25e7f9019fc2"})",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
      ],
      "properties": [],
      "runTargetPhase": false,
      "source": "system/EncoreAD/User",
      "target": "managed/alpha_user",
    },
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -i HRLite --no-deps -f my-nodeps-HRLite.application.json": should export the app with app id "HRLite" with no dependencies into a file named my-nodeps-HRLite.application.json 1`] = `""`;

exports[`frodo app export "frodo app export -i HRLite --no-deps -f my-nodeps-HRLite.application.json": should export the app with app id "HRLite" with no dependencies into a file named my-nodeps-HRLite.application.json: ./my-nodeps-HRLite.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite --no-deps -f my-nodeps-HRLite.application.json": should export the app with app id "HRLite" with no dependencies into a file named my-nodeps-HRLite.application.json: my-nodeps-HRLite.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite -f my-HRLite.application.json": should export the app with app id "HRLite" into file named my-HRLite.application.json 1`] = `""`;

exports[`frodo app export "frodo app export -i HRLite -f my-HRLite.application.json": should export the app with app id "HRLite" into file named my-HRLite.application.json: ./my-HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite -f my-HRLite.application.json": should export the app with app id "HRLite" into file named my-HRLite.application.json: my-HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite": should export the app with app id "HRLite" 1`] = `""`;

exports[`frodo app export "frodo app export -i HRLite": should export the app with app id "HRLite": ./HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite": should export the app with app id "HRLite": HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "73doNZivdgZ7KmuOlzFBdD/7blip0OU6uRwBDv53wcQ=",
              "iv": "/C0QyOAnnUNQCovrsMgzEw==",
              "keySize": 16,
              "mac": "EAPShe6oCwxlTCHYC2wBlQ==",
              "purpose": "idm.config.encryption",
              "salt": "zYm6JkzqEzE1/0Y+o9K3+Q==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "08505c1b-87ea-4ed0-ab89-20432dcc6249": {
      "_id": "08505c1b-87ea-4ed0-ab89-20432dcc6249",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail = checkuserName+"@ad-volker-demo.encore.forgerock.org"; 
target.password = 'Frdp-2010';
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;
