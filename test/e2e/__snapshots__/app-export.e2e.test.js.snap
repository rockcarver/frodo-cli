// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo app export "frodo app export --all -f my-allAlphaApplications.application.json": should export all apps to a single file named my-allAlphaApplications.application.json 1`] = `0`;

exports[`frodo app export "frodo app export --all -f my-allAlphaApplications.application.json": should export all apps to a single file named my-allAlphaApplications.application.json 2`] = `""`;

exports[`frodo app export "frodo app export --all -f my-allAlphaApplications.application.json": should export all apps to a single file named my-allAlphaApplications.application.json: my-allAlphaApplications.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreADv2": {
      "_id": "provisioner.openicf/EncoreADv2",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "sAMAccountName",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "CTj3bUp5X751CH2Rp+gNCQ==",
              "iv": "MLlGLkkY8lewkImEL5okww==",
              "keySize": 16,
              "mac": "/fmm6tTVDtoEIaaekXtZIQ==",
              "purpose": "idm.config.encryption",
              "salt": "DzyYuBYWadeSW8BlhX0Jqw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1690969088087,
        "ldapGroupsUseStaticGroups": false,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "[1.5.20.12, 1.5.21.0)",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "string",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "gpigd7hcpjldqu81aCo67bUfjxHldBGf6LAdsfXBJIc=",
              "iv": "I0rXA4v5KVb5Z2FgirVyVA==",
              "keySize": 16,
              "mac": "zXSltI9rpo9MEJKPuop/zQ==",
              "purpose": "idm.config.encryption",
              "salt": "sFzdBL01YZWyjilDZimG/A==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "234ae748-fcd5-459d-96a6-dd8d67f16080": {
      "_id": "234ae748-fcd5-459d-96a6-dd8d67f16080",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-982",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "26968c01-3c25-42c4-803c-3c9c0571cae6": {
      "_id": "26968c01-3c25-42c4-803c-3c9c0571cae6",
      "authoritative": false,
      "connectorId": "EncoreADv2",
      "description": "Encore Workforce AD",
      "icon": "",
      "mappingNames": [
        "systemEncoreadv2User_managedAlpha_user",
        "managedAlpha_user_systemEncoreadv2User",
        "systemEncoreadv2Group_managedAlpha_assignment",
      ],
      "name": "EncoreADv2",
      "templateName": "active.directory",
      "templateVersion": "2.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "__NAME__": {
                "order": 2,
                "userSpecific": true,
              },
              "cn": {
                "isDisplay": true,
                "order": 1,
                "userSpecific": true,
              },
              "description": {
                "order": 3,
                "userSpecific": true,
              },
              "displayName": {
                "order": 4,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 5,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 7,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 8,
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "order": 2,
                "userSpecific": true,
              },
              "__NAME__": {
                "order": 1,
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "order": 3,
                "userSpecific": true,
              },
              "accountExpires": {
                "order": 36,
                "userSpecific": true,
              },
              "c": {
                "order": 32,
                "userSpecific": true,
              },
              "cn": {
                "order": 5,
                "userSpecific": true,
              },
              "co": {
                "order": 30,
                "userSpecific": true,
              },
              "company": {
                "order": 10,
                "userSpecific": true,
              },
              "countryCode": {
                "order": 31,
                "userSpecific": true,
              },
              "department": {
                "order": 23,
                "userSpecific": true,
              },
              "description": {
                "order": 13,
                "userSpecific": true,
              },
              "displayName": {
                "order": 12,
                "userSpecific": true,
              },
              "division": {
                "order": 11,
                "userSpecific": true,
              },
              "employeeID": {
                "order": 27,
                "userSpecific": true,
              },
              "employeeNumber": {
                "order": 28,
                "userSpecific": true,
              },
              "employeeType": {
                "order": 29,
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "order": 14,
                "userSpecific": true,
              },
              "givenName": {
                "order": 7,
                "userSpecific": true,
              },
              "homePhone": {
                "order": 15,
                "userSpecific": true,
              },
              "initials": {
                "order": 24,
                "userSpecific": true,
              },
              "l": {
                "order": 16,
                "userSpecific": true,
              },
              "lastLogon": {
                "order": 19,
                "userSpecific": true,
              },
              "ldapGroups": {
                "isEntitlement": false,
                "nonAccountObject": "Group",
                "order": 46,
              },
              "lockoutTime": {
                "order": 38,
                "userSpecific": true,
              },
              "mail": {
                "order": 8,
                "userSpecific": true,
              },
              "manager": {
                "order": 22,
                "userSpecific": true,
              },
              "memberOf": {
                "order": 43,
                "userSpecific": true,
              },
              "middleName": {
                "order": 9,
                "userSpecific": true,
              },
              "mobile": {
                "order": 26,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "otherHomePhone": {
                "order": 44,
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "order": 20,
                "userSpecific": true,
              },
              "postOfficeBox": {
                "order": 18,
                "userSpecific": true,
              },
              "postalCode": {
                "order": 17,
                "userSpecific": true,
              },
              "pwdLastSet": {
                "order": 37,
                "userSpecific": true,
              },
              "sAMAccountName": {
                "isDisplay": true,
                "order": 45,
                "userSpecific": true,
              },
              "sn": {
                "order": 4,
                "userSpecific": true,
              },
              "st": {
                "order": 21,
                "userSpecific": true,
              },
              "streetAddress": {
                "order": 25,
                "userSpecific": true,
              },
              "telephoneNumber": {
                "order": 33,
                "userSpecific": true,
              },
              "title": {
                "order": 34,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 39,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 40,
                "userSpecific": true,
              },
              "userAccountControl": {
                "order": 35,
                "userSpecific": true,
              },
              "userPrincipalName": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 41,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 42,
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "55bb522b-7348-4ab6-b0b3-5d3936359ce6": {
      "_id": "55bb522b-7348-4ab6-b0b3-5d3936359ce6",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-997",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "bc48b94e-83d0-4f3a-b37a-d6f19c608a33": {
      "_id": "bc48b94e-83d0-4f3a-b37a-d6f19c608a33",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-991",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "d1488dc0-11c0-49ab-bc4c-3f45876917dc": {
      "_id": "d1488dc0-11c0-49ab-bc4c-3f45876917dc",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-1002",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadv2User": {
      "_id": "mapping/managedAlpha_user_systemEncoreadv2User",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'sAMAccountName eq "' + source.userName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "ldapGroups",
      ],
      "displayName": "managedAlpha_user_systemEncoreadv2User",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadv2User",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = false;
target.__NAME__ = \`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
openidm.update('system/EncoreADv2/User/' + target._id, null, target); 'UNLINK';",
            "type": "text/javascript",
          },
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = true;
target.__NAME__ = \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
'UPDATE'; openidm.update('system/EncoreADv2/User/' + target._id, null, target);",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "",
          "target": "cn",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source.userName;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='inactive') ? false : true;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName + ' ' + source.sn",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "settings": {},
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or lastSync/managedAlpha_user_systemEncoreadv2User pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/EncoreADv2/User",
    },
    "systemEncoreadv2Group_managedAlpha_assignment": {
      "_id": "mapping/systemEncoreadv2Group_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemEncoreadv2Group_managedAlpha_assignment",
      "icon": null,
      "name": "systemEncoreadv2Group_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.description !== "undefined") && source.description !== null) {
  source.description;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemEncoreadv2User",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "__NAME__",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'ldapGroups',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_EncoreADv2_Group_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/EncoreADv2/Group",
      "target": "managed/alpha_assignment",
    },
    "systemEncoreadv2User_managedAlpha_user": {
      "_id": "mapping/systemEncoreadv2User_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'userName eq "' + source.sAMAccountName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "ldapGroups",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemEncoreadv2User_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadv2User",
      "name": "systemEncoreadv2User_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function compare(sourceVal, previewVal, strictEquality) {
    if (Array.isArray(sourceVal) && Array.isArray(previewVal)) {
        return arraysAreEqual(sourceVal, previewVal, strictEquality);
    } else if (elementIsObject(sourceVal) && elementIsObject(previewVal)) {
        return mapsAreEqual(sourceVal, previewVal, strictEquality);
    } else {
        return sourceVal === previewVal;
    }
}

function arraysAreEqual(sourceArray, previewArray, strictEquality) {
    if (!lengthCheck(sourceArray, previewArray, strictEquality)) {
        return false;
    }

    return sourceArray.every((sourceEle) => previewArray.some((previewEle) => compare(sourceEle, previewEle)));
}

function mapsAreEqual(sourceMap, previewMap, strictEquality) {
    var sourceKeys = Object.keys(sourceMap);
    var previewKeys = Object.keys(previewMap);

    if (!lengthCheck(sourceKeys, previewKeys, strictEquality)) {
        return false;
    }

    if (!sourceKeys.every((sourceKey) => previewKeys.includes(sourceKey))) {
        return false;
    }
    return sourceKeys.every((key) => compare(sourceMap[key], previewMap[key], strictEquality));
}

function lengthCheck(first, second, strictEquality) {
    return strictEquality ? (first.length === second.length)
        : (first.length <= second.length);
}

function elementIsObject(val) {
    return typeof val === "object" && val !== null;
}

if (situation === "FOUND") {
    var params = {
        "resourceId": targetId,
        "mapping": mappingConfig.links,
        "linkQualifier": linkQualifier
    };

    // get the preview of the target object from the outbound mapping
    var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
    var attributes = [];

    // find all values where target app user has different values from the correlated IDM user
    Object.keys(source).filter(function(key) {
        return (key in targetPreview) ? !compare(source[key], targetPreview[key], true) : false;
    }).forEach(function(key) {
        var attribute = {
            "name": key,
            "value": source[key]
        };
        attributes.push(attribute);
    })

    // create override assignment if any diff was found
    if (attributes.length > 0) {
        var assignment = {
            "name": targetId + "-overrideAssignment",
            "description": targetId + "override assignment",
            "mapping": mappingConfig.links,
            "attributes": attributes,
            "type": "__OVERRIDE__"
        };
        var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
        openidm.create(mappingConfig.target + "/" + targetId + "/assignments", null, {"_ref": assignmentResCollection + "/" + assignmentResult["_id"]});
        var result = openidm.action("sync", "getTargetPreview", {}, params);
        Object.keys(source).forEach(function(key) {
            if (typeof result[key] === "undefined" || compare(source[key], result[key], false)) {
                return;
            }
            // unable to successfully recreate object being linked, delete assignment and throw exception
            openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
            throw new org.forgerock.openidm.sync.SynchronizationException("onLink - Unable to successfully preserve differences for source: " + sourceId);
        })
    }
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {
              "managedApplicationId": "26968c01-3c25-42c4-803c-3c9c0571cae6",
            },
            "source": "let idFound = false;
if (typeof target.effectiveApplications !== "undefined" && target.effectiveApplications !== null) {
  target.effectiveApplications.forEach((effectiveApplication) => {
    if (effectiveApplication._id === managedApplicationId) {
      idFound = true;
    }
  });
}
if (!idFound) {
  openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/"+managedApplicationId});
}
",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectField": "__NAME__",
          "referencedObjectType": "Group",
          "source": "ldapGroups",
          "target": "assignments",
        },
      ],
      "runTargetPhase": false,
      "source": "system/EncoreADv2/User",
      "target": "managed/alpha_user",
    },
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail =  "volker.scheuber+" + checkuserName+ "-volker-demo"+ "@forgerock.com"; 
target.password = 'Frdp-2010';
var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {_queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "onUpdate": {
        "globals": {},
        "source": "var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {
    _queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "manager",
          "target": "frIndexedString3",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "syncAfter": [],
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export --app-id EncoreADv2": should export the app with app id "EncoreADv2" 1`] = `0`;

exports[`frodo app export "frodo app export --app-id EncoreADv2": should export the app with app id "EncoreADv2" 2`] = `""`;

exports[`frodo app export "frodo app export --app-id EncoreADv2": should export the app with app id "EncoreADv2": EncoreADv2.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreADv2": {
      "_id": "provisioner.openicf/EncoreADv2",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "sAMAccountName",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "CTj3bUp5X751CH2Rp+gNCQ==",
              "iv": "MLlGLkkY8lewkImEL5okww==",
              "keySize": 16,
              "mac": "/fmm6tTVDtoEIaaekXtZIQ==",
              "purpose": "idm.config.encryption",
              "salt": "DzyYuBYWadeSW8BlhX0Jqw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1690969088087,
        "ldapGroupsUseStaticGroups": false,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "[1.5.20.12, 1.5.21.0)",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "string",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "26968c01-3c25-42c4-803c-3c9c0571cae6": {
      "_id": "26968c01-3c25-42c4-803c-3c9c0571cae6",
      "authoritative": false,
      "connectorId": "EncoreADv2",
      "description": "Encore Workforce AD",
      "icon": "",
      "mappingNames": [
        "systemEncoreadv2User_managedAlpha_user",
        "managedAlpha_user_systemEncoreadv2User",
        "systemEncoreadv2Group_managedAlpha_assignment",
      ],
      "name": "EncoreADv2",
      "templateName": "active.directory",
      "templateVersion": "2.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "__NAME__": {
                "order": 2,
                "userSpecific": true,
              },
              "cn": {
                "isDisplay": true,
                "order": 1,
                "userSpecific": true,
              },
              "description": {
                "order": 3,
                "userSpecific": true,
              },
              "displayName": {
                "order": 4,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 5,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 7,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 8,
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "order": 2,
                "userSpecific": true,
              },
              "__NAME__": {
                "order": 1,
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "order": 3,
                "userSpecific": true,
              },
              "accountExpires": {
                "order": 36,
                "userSpecific": true,
              },
              "c": {
                "order": 32,
                "userSpecific": true,
              },
              "cn": {
                "order": 5,
                "userSpecific": true,
              },
              "co": {
                "order": 30,
                "userSpecific": true,
              },
              "company": {
                "order": 10,
                "userSpecific": true,
              },
              "countryCode": {
                "order": 31,
                "userSpecific": true,
              },
              "department": {
                "order": 23,
                "userSpecific": true,
              },
              "description": {
                "order": 13,
                "userSpecific": true,
              },
              "displayName": {
                "order": 12,
                "userSpecific": true,
              },
              "division": {
                "order": 11,
                "userSpecific": true,
              },
              "employeeID": {
                "order": 27,
                "userSpecific": true,
              },
              "employeeNumber": {
                "order": 28,
                "userSpecific": true,
              },
              "employeeType": {
                "order": 29,
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "order": 14,
                "userSpecific": true,
              },
              "givenName": {
                "order": 7,
                "userSpecific": true,
              },
              "homePhone": {
                "order": 15,
                "userSpecific": true,
              },
              "initials": {
                "order": 24,
                "userSpecific": true,
              },
              "l": {
                "order": 16,
                "userSpecific": true,
              },
              "lastLogon": {
                "order": 19,
                "userSpecific": true,
              },
              "ldapGroups": {
                "isEntitlement": false,
                "nonAccountObject": "Group",
                "order": 46,
              },
              "lockoutTime": {
                "order": 38,
                "userSpecific": true,
              },
              "mail": {
                "order": 8,
                "userSpecific": true,
              },
              "manager": {
                "order": 22,
                "userSpecific": true,
              },
              "memberOf": {
                "order": 43,
                "userSpecific": true,
              },
              "middleName": {
                "order": 9,
                "userSpecific": true,
              },
              "mobile": {
                "order": 26,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "otherHomePhone": {
                "order": 44,
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "order": 20,
                "userSpecific": true,
              },
              "postOfficeBox": {
                "order": 18,
                "userSpecific": true,
              },
              "postalCode": {
                "order": 17,
                "userSpecific": true,
              },
              "pwdLastSet": {
                "order": 37,
                "userSpecific": true,
              },
              "sAMAccountName": {
                "isDisplay": true,
                "order": 45,
                "userSpecific": true,
              },
              "sn": {
                "order": 4,
                "userSpecific": true,
              },
              "st": {
                "order": 21,
                "userSpecific": true,
              },
              "streetAddress": {
                "order": 25,
                "userSpecific": true,
              },
              "telephoneNumber": {
                "order": 33,
                "userSpecific": true,
              },
              "title": {
                "order": 34,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 39,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 40,
                "userSpecific": true,
              },
              "userAccountControl": {
                "order": 35,
                "userSpecific": true,
              },
              "userPrincipalName": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 41,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 42,
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadv2User": {
      "_id": "mapping/managedAlpha_user_systemEncoreadv2User",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'sAMAccountName eq "' + source.userName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "ldapGroups",
      ],
      "displayName": "managedAlpha_user_systemEncoreadv2User",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadv2User",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = false;
target.__NAME__ = \`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
openidm.update('system/EncoreADv2/User/' + target._id, null, target); 'UNLINK';",
            "type": "text/javascript",
          },
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = true;
target.__NAME__ = \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
'UPDATE'; openidm.update('system/EncoreADv2/User/' + target._id, null, target);",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "",
          "target": "cn",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source.userName;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='inactive') ? false : true;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName + ' ' + source.sn",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "settings": {},
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or lastSync/managedAlpha_user_systemEncoreadv2User pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/EncoreADv2/User",
    },
    "systemEncoreadv2Group_managedAlpha_assignment": {
      "_id": "mapping/systemEncoreadv2Group_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemEncoreadv2Group_managedAlpha_assignment",
      "icon": null,
      "name": "systemEncoreadv2Group_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.description !== "undefined") && source.description !== null) {
  source.description;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemEncoreadv2User",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "__NAME__",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'ldapGroups',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_EncoreADv2_Group_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/EncoreADv2/Group",
      "target": "managed/alpha_assignment",
    },
    "systemEncoreadv2User_managedAlpha_user": {
      "_id": "mapping/systemEncoreadv2User_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'userName eq "' + source.sAMAccountName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "ldapGroups",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemEncoreadv2User_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadv2User",
      "name": "systemEncoreadv2User_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function compare(sourceVal, previewVal, strictEquality) {
    if (Array.isArray(sourceVal) && Array.isArray(previewVal)) {
        return arraysAreEqual(sourceVal, previewVal, strictEquality);
    } else if (elementIsObject(sourceVal) && elementIsObject(previewVal)) {
        return mapsAreEqual(sourceVal, previewVal, strictEquality);
    } else {
        return sourceVal === previewVal;
    }
}

function arraysAreEqual(sourceArray, previewArray, strictEquality) {
    if (!lengthCheck(sourceArray, previewArray, strictEquality)) {
        return false;
    }

    return sourceArray.every((sourceEle) => previewArray.some((previewEle) => compare(sourceEle, previewEle)));
}

function mapsAreEqual(sourceMap, previewMap, strictEquality) {
    var sourceKeys = Object.keys(sourceMap);
    var previewKeys = Object.keys(previewMap);

    if (!lengthCheck(sourceKeys, previewKeys, strictEquality)) {
        return false;
    }

    if (!sourceKeys.every((sourceKey) => previewKeys.includes(sourceKey))) {
        return false;
    }
    return sourceKeys.every((key) => compare(sourceMap[key], previewMap[key], strictEquality));
}

function lengthCheck(first, second, strictEquality) {
    return strictEquality ? (first.length === second.length)
        : (first.length <= second.length);
}

function elementIsObject(val) {
    return typeof val === "object" && val !== null;
}

if (situation === "FOUND") {
    var params = {
        "resourceId": targetId,
        "mapping": mappingConfig.links,
        "linkQualifier": linkQualifier
    };

    // get the preview of the target object from the outbound mapping
    var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
    var attributes = [];

    // find all values where target app user has different values from the correlated IDM user
    Object.keys(source).filter(function(key) {
        return (key in targetPreview) ? !compare(source[key], targetPreview[key], true) : false;
    }).forEach(function(key) {
        var attribute = {
            "name": key,
            "value": source[key]
        };
        attributes.push(attribute);
    })

    // create override assignment if any diff was found
    if (attributes.length > 0) {
        var assignment = {
            "name": targetId + "-overrideAssignment",
            "description": targetId + "override assignment",
            "mapping": mappingConfig.links,
            "attributes": attributes,
            "type": "__OVERRIDE__"
        };
        var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
        openidm.create(mappingConfig.target + "/" + targetId + "/assignments", null, {"_ref": assignmentResCollection + "/" + assignmentResult["_id"]});
        var result = openidm.action("sync", "getTargetPreview", {}, params);
        Object.keys(source).forEach(function(key) {
            if (typeof result[key] === "undefined" || compare(source[key], result[key], false)) {
                return;
            }
            // unable to successfully recreate object being linked, delete assignment and throw exception
            openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
            throw new org.forgerock.openidm.sync.SynchronizationException("onLink - Unable to successfully preserve differences for source: " + sourceId);
        })
    }
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {
              "managedApplicationId": "26968c01-3c25-42c4-803c-3c9c0571cae6",
            },
            "source": "let idFound = false;
if (typeof target.effectiveApplications !== "undefined" && target.effectiveApplications !== null) {
  target.effectiveApplications.forEach((effectiveApplication) => {
    if (effectiveApplication._id === managedApplicationId) {
      idFound = true;
    }
  });
}
if (!idFound) {
  openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/"+managedApplicationId});
}
",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectField": "__NAME__",
          "referencedObjectType": "Group",
          "source": "ldapGroups",
          "target": "assignments",
        },
      ],
      "runTargetPhase": false,
      "source": "system/EncoreADv2/User",
      "target": "managed/alpha_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files 1`] = `0`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files 2`] = `""`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: EncoreADv2.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreADv2": {
      "_id": "provisioner.openicf/EncoreADv2",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "sAMAccountName",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "CTj3bUp5X751CH2Rp+gNCQ==",
              "iv": "MLlGLkkY8lewkImEL5okww==",
              "keySize": 16,
              "mac": "/fmm6tTVDtoEIaaekXtZIQ==",
              "purpose": "idm.config.encryption",
              "salt": "DzyYuBYWadeSW8BlhX0Jqw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1690969088087,
        "ldapGroupsUseStaticGroups": false,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "[1.5.20.12, 1.5.21.0)",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "string",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "26968c01-3c25-42c4-803c-3c9c0571cae6": {
      "_id": "26968c01-3c25-42c4-803c-3c9c0571cae6",
      "authoritative": false,
      "connectorId": "EncoreADv2",
      "description": "Encore Workforce AD",
      "icon": "",
      "mappingNames": [
        "systemEncoreadv2User_managedAlpha_user",
        "managedAlpha_user_systemEncoreadv2User",
        "systemEncoreadv2Group_managedAlpha_assignment",
      ],
      "name": "EncoreADv2",
      "templateName": "active.directory",
      "templateVersion": "2.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "__NAME__": {
                "order": 2,
                "userSpecific": true,
              },
              "cn": {
                "isDisplay": true,
                "order": 1,
                "userSpecific": true,
              },
              "description": {
                "order": 3,
                "userSpecific": true,
              },
              "displayName": {
                "order": 4,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 5,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 7,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 8,
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "order": 2,
                "userSpecific": true,
              },
              "__NAME__": {
                "order": 1,
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "order": 3,
                "userSpecific": true,
              },
              "accountExpires": {
                "order": 36,
                "userSpecific": true,
              },
              "c": {
                "order": 32,
                "userSpecific": true,
              },
              "cn": {
                "order": 5,
                "userSpecific": true,
              },
              "co": {
                "order": 30,
                "userSpecific": true,
              },
              "company": {
                "order": 10,
                "userSpecific": true,
              },
              "countryCode": {
                "order": 31,
                "userSpecific": true,
              },
              "department": {
                "order": 23,
                "userSpecific": true,
              },
              "description": {
                "order": 13,
                "userSpecific": true,
              },
              "displayName": {
                "order": 12,
                "userSpecific": true,
              },
              "division": {
                "order": 11,
                "userSpecific": true,
              },
              "employeeID": {
                "order": 27,
                "userSpecific": true,
              },
              "employeeNumber": {
                "order": 28,
                "userSpecific": true,
              },
              "employeeType": {
                "order": 29,
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "order": 14,
                "userSpecific": true,
              },
              "givenName": {
                "order": 7,
                "userSpecific": true,
              },
              "homePhone": {
                "order": 15,
                "userSpecific": true,
              },
              "initials": {
                "order": 24,
                "userSpecific": true,
              },
              "l": {
                "order": 16,
                "userSpecific": true,
              },
              "lastLogon": {
                "order": 19,
                "userSpecific": true,
              },
              "ldapGroups": {
                "isEntitlement": false,
                "nonAccountObject": "Group",
                "order": 46,
              },
              "lockoutTime": {
                "order": 38,
                "userSpecific": true,
              },
              "mail": {
                "order": 8,
                "userSpecific": true,
              },
              "manager": {
                "order": 22,
                "userSpecific": true,
              },
              "memberOf": {
                "order": 43,
                "userSpecific": true,
              },
              "middleName": {
                "order": 9,
                "userSpecific": true,
              },
              "mobile": {
                "order": 26,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "otherHomePhone": {
                "order": 44,
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "order": 20,
                "userSpecific": true,
              },
              "postOfficeBox": {
                "order": 18,
                "userSpecific": true,
              },
              "postalCode": {
                "order": 17,
                "userSpecific": true,
              },
              "pwdLastSet": {
                "order": 37,
                "userSpecific": true,
              },
              "sAMAccountName": {
                "isDisplay": true,
                "order": 45,
                "userSpecific": true,
              },
              "sn": {
                "order": 4,
                "userSpecific": true,
              },
              "st": {
                "order": 21,
                "userSpecific": true,
              },
              "streetAddress": {
                "order": 25,
                "userSpecific": true,
              },
              "telephoneNumber": {
                "order": 33,
                "userSpecific": true,
              },
              "title": {
                "order": 34,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 39,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 40,
                "userSpecific": true,
              },
              "userAccountControl": {
                "order": 35,
                "userSpecific": true,
              },
              "userPrincipalName": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 41,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 42,
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadv2User": {
      "_id": "mapping/managedAlpha_user_systemEncoreadv2User",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'sAMAccountName eq "' + source.userName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "ldapGroups",
      ],
      "displayName": "managedAlpha_user_systemEncoreadv2User",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadv2User",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = false;
target.__NAME__ = \`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
openidm.update('system/EncoreADv2/User/' + target._id, null, target); 'UNLINK';",
            "type": "text/javascript",
          },
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = true;
target.__NAME__ = \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
'UPDATE'; openidm.update('system/EncoreADv2/User/' + target._id, null, target);",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "",
          "target": "cn",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source.userName;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='inactive') ? false : true;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName + ' ' + source.sn",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "settings": {},
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or lastSync/managedAlpha_user_systemEncoreadv2User pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/EncoreADv2/User",
    },
    "systemEncoreadv2Group_managedAlpha_assignment": {
      "_id": "mapping/systemEncoreadv2Group_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemEncoreadv2Group_managedAlpha_assignment",
      "icon": null,
      "name": "systemEncoreadv2Group_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.description !== "undefined") && source.description !== null) {
  source.description;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemEncoreadv2User",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "__NAME__",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'ldapGroups',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_EncoreADv2_Group_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/EncoreADv2/Group",
      "target": "managed/alpha_assignment",
    },
    "systemEncoreadv2User_managedAlpha_user": {
      "_id": "mapping/systemEncoreadv2User_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'userName eq "' + source.sAMAccountName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "ldapGroups",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemEncoreadv2User_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadv2User",
      "name": "systemEncoreadv2User_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function compare(sourceVal, previewVal, strictEquality) {
    if (Array.isArray(sourceVal) && Array.isArray(previewVal)) {
        return arraysAreEqual(sourceVal, previewVal, strictEquality);
    } else if (elementIsObject(sourceVal) && elementIsObject(previewVal)) {
        return mapsAreEqual(sourceVal, previewVal, strictEquality);
    } else {
        return sourceVal === previewVal;
    }
}

function arraysAreEqual(sourceArray, previewArray, strictEquality) {
    if (!lengthCheck(sourceArray, previewArray, strictEquality)) {
        return false;
    }

    return sourceArray.every((sourceEle) => previewArray.some((previewEle) => compare(sourceEle, previewEle)));
}

function mapsAreEqual(sourceMap, previewMap, strictEquality) {
    var sourceKeys = Object.keys(sourceMap);
    var previewKeys = Object.keys(previewMap);

    if (!lengthCheck(sourceKeys, previewKeys, strictEquality)) {
        return false;
    }

    if (!sourceKeys.every((sourceKey) => previewKeys.includes(sourceKey))) {
        return false;
    }
    return sourceKeys.every((key) => compare(sourceMap[key], previewMap[key], strictEquality));
}

function lengthCheck(first, second, strictEquality) {
    return strictEquality ? (first.length === second.length)
        : (first.length <= second.length);
}

function elementIsObject(val) {
    return typeof val === "object" && val !== null;
}

if (situation === "FOUND") {
    var params = {
        "resourceId": targetId,
        "mapping": mappingConfig.links,
        "linkQualifier": linkQualifier
    };

    // get the preview of the target object from the outbound mapping
    var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
    var attributes = [];

    // find all values where target app user has different values from the correlated IDM user
    Object.keys(source).filter(function(key) {
        return (key in targetPreview) ? !compare(source[key], targetPreview[key], true) : false;
    }).forEach(function(key) {
        var attribute = {
            "name": key,
            "value": source[key]
        };
        attributes.push(attribute);
    })

    // create override assignment if any diff was found
    if (attributes.length > 0) {
        var assignment = {
            "name": targetId + "-overrideAssignment",
            "description": targetId + "override assignment",
            "mapping": mappingConfig.links,
            "attributes": attributes,
            "type": "__OVERRIDE__"
        };
        var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
        openidm.create(mappingConfig.target + "/" + targetId + "/assignments", null, {"_ref": assignmentResCollection + "/" + assignmentResult["_id"]});
        var result = openidm.action("sync", "getTargetPreview", {}, params);
        Object.keys(source).forEach(function(key) {
            if (typeof result[key] === "undefined" || compare(source[key], result[key], false)) {
                return;
            }
            // unable to successfully recreate object being linked, delete assignment and throw exception
            openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
            throw new org.forgerock.openidm.sync.SynchronizationException("onLink - Unable to successfully preserve differences for source: " + sourceId);
        })
    }
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {
              "managedApplicationId": "26968c01-3c25-42c4-803c-3c9c0571cae6",
            },
            "source": "let idFound = false;
if (typeof target.effectiveApplications !== "undefined" && target.effectiveApplications !== null) {
  target.effectiveApplications.forEach((effectiveApplication) => {
    if (effectiveApplication._id === managedApplicationId) {
      idFound = true;
    }
  });
}
if (!idFound) {
  openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/"+managedApplicationId});
}
",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectField": "__NAME__",
          "referencedObjectType": "Group",
          "source": "ldapGroups",
          "target": "assignments",
        },
      ],
      "runTargetPhase": false,
      "source": "system/EncoreADv2/User",
      "target": "managed/alpha_user",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "gpigd7hcpjldqu81aCo67bUfjxHldBGf6LAdsfXBJIc=",
              "iv": "I0rXA4v5KVb5Z2FgirVyVA==",
              "keySize": 16,
              "mac": "zXSltI9rpo9MEJKPuop/zQ==",
              "purpose": "idm.config.encryption",
              "salt": "sFzdBL01YZWyjilDZimG/A==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail =  "volker.scheuber+" + checkuserName+ "-volker-demo"+ "@forgerock.com"; 
target.password = 'Frdp-2010';
var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {_queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "onUpdate": {
        "globals": {},
        "source": "var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {
    _queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "manager",
          "target": "frIndexedString3",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "syncAfter": [],
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: benefits.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "bc48b94e-83d0-4f3a-b37a-d6f19c608a33": {
      "_id": "bc48b94e-83d0-4f3a-b37a-d6f19c608a33",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-991",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: company.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "234ae748-fcd5-459d-96a6-dd8d67f16080": {
      "_id": "234ae748-fcd5-459d-96a6-dd8d67f16080",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-982",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: engineering.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "55bb522b-7348-4ab6-b0b3-5d3936359ce6": {
      "_id": "55bb522b-7348-4ab6-b0b3-5d3936359ce6",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-997",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -A": should export all apps to separate files: sales.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "d1488dc0-11c0-49ab-bc4c-3f45876917dc": {
      "_id": "d1488dc0-11c0-49ab-bc4c-3f45876917dc",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-1002",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -a --file my-other-allAlphaApplications.application.json": should export all apps to a single file named my-other-allAlphaApplications.application.json 1`] = `0`;

exports[`frodo app export "frodo app export -a --file my-other-allAlphaApplications.application.json": should export all apps to a single file named my-other-allAlphaApplications.application.json 2`] = `""`;

exports[`frodo app export "frodo app export -a --file my-other-allAlphaApplications.application.json": should export all apps to a single file named my-other-allAlphaApplications.application.json: my-other-allAlphaApplications.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreADv2": {
      "_id": "provisioner.openicf/EncoreADv2",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "sAMAccountName",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "CTj3bUp5X751CH2Rp+gNCQ==",
              "iv": "MLlGLkkY8lewkImEL5okww==",
              "keySize": 16,
              "mac": "/fmm6tTVDtoEIaaekXtZIQ==",
              "purpose": "idm.config.encryption",
              "salt": "DzyYuBYWadeSW8BlhX0Jqw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1690969088087,
        "ldapGroupsUseStaticGroups": false,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "[1.5.20.12, 1.5.21.0)",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "string",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "gpigd7hcpjldqu81aCo67bUfjxHldBGf6LAdsfXBJIc=",
              "iv": "I0rXA4v5KVb5Z2FgirVyVA==",
              "keySize": 16,
              "mac": "zXSltI9rpo9MEJKPuop/zQ==",
              "purpose": "idm.config.encryption",
              "salt": "sFzdBL01YZWyjilDZimG/A==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "234ae748-fcd5-459d-96a6-dd8d67f16080": {
      "_id": "234ae748-fcd5-459d-96a6-dd8d67f16080",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-982",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "26968c01-3c25-42c4-803c-3c9c0571cae6": {
      "_id": "26968c01-3c25-42c4-803c-3c9c0571cae6",
      "authoritative": false,
      "connectorId": "EncoreADv2",
      "description": "Encore Workforce AD",
      "icon": "",
      "mappingNames": [
        "systemEncoreadv2User_managedAlpha_user",
        "managedAlpha_user_systemEncoreadv2User",
        "systemEncoreadv2Group_managedAlpha_assignment",
      ],
      "name": "EncoreADv2",
      "templateName": "active.directory",
      "templateVersion": "2.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "__NAME__": {
                "order": 2,
                "userSpecific": true,
              },
              "cn": {
                "isDisplay": true,
                "order": 1,
                "userSpecific": true,
              },
              "description": {
                "order": 3,
                "userSpecific": true,
              },
              "displayName": {
                "order": 4,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 5,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 7,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 8,
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "order": 2,
                "userSpecific": true,
              },
              "__NAME__": {
                "order": 1,
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "order": 3,
                "userSpecific": true,
              },
              "accountExpires": {
                "order": 36,
                "userSpecific": true,
              },
              "c": {
                "order": 32,
                "userSpecific": true,
              },
              "cn": {
                "order": 5,
                "userSpecific": true,
              },
              "co": {
                "order": 30,
                "userSpecific": true,
              },
              "company": {
                "order": 10,
                "userSpecific": true,
              },
              "countryCode": {
                "order": 31,
                "userSpecific": true,
              },
              "department": {
                "order": 23,
                "userSpecific": true,
              },
              "description": {
                "order": 13,
                "userSpecific": true,
              },
              "displayName": {
                "order": 12,
                "userSpecific": true,
              },
              "division": {
                "order": 11,
                "userSpecific": true,
              },
              "employeeID": {
                "order": 27,
                "userSpecific": true,
              },
              "employeeNumber": {
                "order": 28,
                "userSpecific": true,
              },
              "employeeType": {
                "order": 29,
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "order": 14,
                "userSpecific": true,
              },
              "givenName": {
                "order": 7,
                "userSpecific": true,
              },
              "homePhone": {
                "order": 15,
                "userSpecific": true,
              },
              "initials": {
                "order": 24,
                "userSpecific": true,
              },
              "l": {
                "order": 16,
                "userSpecific": true,
              },
              "lastLogon": {
                "order": 19,
                "userSpecific": true,
              },
              "ldapGroups": {
                "isEntitlement": false,
                "nonAccountObject": "Group",
                "order": 46,
              },
              "lockoutTime": {
                "order": 38,
                "userSpecific": true,
              },
              "mail": {
                "order": 8,
                "userSpecific": true,
              },
              "manager": {
                "order": 22,
                "userSpecific": true,
              },
              "memberOf": {
                "order": 43,
                "userSpecific": true,
              },
              "middleName": {
                "order": 9,
                "userSpecific": true,
              },
              "mobile": {
                "order": 26,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "otherHomePhone": {
                "order": 44,
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "order": 20,
                "userSpecific": true,
              },
              "postOfficeBox": {
                "order": 18,
                "userSpecific": true,
              },
              "postalCode": {
                "order": 17,
                "userSpecific": true,
              },
              "pwdLastSet": {
                "order": 37,
                "userSpecific": true,
              },
              "sAMAccountName": {
                "isDisplay": true,
                "order": 45,
                "userSpecific": true,
              },
              "sn": {
                "order": 4,
                "userSpecific": true,
              },
              "st": {
                "order": 21,
                "userSpecific": true,
              },
              "streetAddress": {
                "order": 25,
                "userSpecific": true,
              },
              "telephoneNumber": {
                "order": 33,
                "userSpecific": true,
              },
              "title": {
                "order": 34,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 39,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 40,
                "userSpecific": true,
              },
              "userAccountControl": {
                "order": 35,
                "userSpecific": true,
              },
              "userPrincipalName": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 41,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 42,
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "55bb522b-7348-4ab6-b0b3-5d3936359ce6": {
      "_id": "55bb522b-7348-4ab6-b0b3-5d3936359ce6",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-997",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "bc48b94e-83d0-4f3a-b37a-d6f19c608a33": {
      "_id": "bc48b94e-83d0-4f3a-b37a-d6f19c608a33",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-991",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "d1488dc0-11c0-49ab-bc4c-3f45876917dc": {
      "_id": "d1488dc0-11c0-49ab-bc4c-3f45876917dc",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-1002",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadv2User": {
      "_id": "mapping/managedAlpha_user_systemEncoreadv2User",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'sAMAccountName eq "' + source.userName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "ldapGroups",
      ],
      "displayName": "managedAlpha_user_systemEncoreadv2User",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadv2User",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = false;
target.__NAME__ = \`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
openidm.update('system/EncoreADv2/User/' + target._id, null, target); 'UNLINK';",
            "type": "text/javascript",
          },
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = true;
target.__NAME__ = \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
'UPDATE'; openidm.update('system/EncoreADv2/User/' + target._id, null, target);",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "",
          "target": "cn",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source.userName;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='inactive') ? false : true;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName + ' ' + source.sn",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "settings": {},
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or lastSync/managedAlpha_user_systemEncoreadv2User pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/EncoreADv2/User",
    },
    "systemEncoreadv2Group_managedAlpha_assignment": {
      "_id": "mapping/systemEncoreadv2Group_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemEncoreadv2Group_managedAlpha_assignment",
      "icon": null,
      "name": "systemEncoreadv2Group_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.description !== "undefined") && source.description !== null) {
  source.description;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemEncoreadv2User",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "__NAME__",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'ldapGroups',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_EncoreADv2_Group_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/EncoreADv2/Group",
      "target": "managed/alpha_assignment",
    },
    "systemEncoreadv2User_managedAlpha_user": {
      "_id": "mapping/systemEncoreadv2User_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'userName eq "' + source.sAMAccountName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "ldapGroups",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemEncoreadv2User_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadv2User",
      "name": "systemEncoreadv2User_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function compare(sourceVal, previewVal, strictEquality) {
    if (Array.isArray(sourceVal) && Array.isArray(previewVal)) {
        return arraysAreEqual(sourceVal, previewVal, strictEquality);
    } else if (elementIsObject(sourceVal) && elementIsObject(previewVal)) {
        return mapsAreEqual(sourceVal, previewVal, strictEquality);
    } else {
        return sourceVal === previewVal;
    }
}

function arraysAreEqual(sourceArray, previewArray, strictEquality) {
    if (!lengthCheck(sourceArray, previewArray, strictEquality)) {
        return false;
    }

    return sourceArray.every((sourceEle) => previewArray.some((previewEle) => compare(sourceEle, previewEle)));
}

function mapsAreEqual(sourceMap, previewMap, strictEquality) {
    var sourceKeys = Object.keys(sourceMap);
    var previewKeys = Object.keys(previewMap);

    if (!lengthCheck(sourceKeys, previewKeys, strictEquality)) {
        return false;
    }

    if (!sourceKeys.every((sourceKey) => previewKeys.includes(sourceKey))) {
        return false;
    }
    return sourceKeys.every((key) => compare(sourceMap[key], previewMap[key], strictEquality));
}

function lengthCheck(first, second, strictEquality) {
    return strictEquality ? (first.length === second.length)
        : (first.length <= second.length);
}

function elementIsObject(val) {
    return typeof val === "object" && val !== null;
}

if (situation === "FOUND") {
    var params = {
        "resourceId": targetId,
        "mapping": mappingConfig.links,
        "linkQualifier": linkQualifier
    };

    // get the preview of the target object from the outbound mapping
    var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
    var attributes = [];

    // find all values where target app user has different values from the correlated IDM user
    Object.keys(source).filter(function(key) {
        return (key in targetPreview) ? !compare(source[key], targetPreview[key], true) : false;
    }).forEach(function(key) {
        var attribute = {
            "name": key,
            "value": source[key]
        };
        attributes.push(attribute);
    })

    // create override assignment if any diff was found
    if (attributes.length > 0) {
        var assignment = {
            "name": targetId + "-overrideAssignment",
            "description": targetId + "override assignment",
            "mapping": mappingConfig.links,
            "attributes": attributes,
            "type": "__OVERRIDE__"
        };
        var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
        openidm.create(mappingConfig.target + "/" + targetId + "/assignments", null, {"_ref": assignmentResCollection + "/" + assignmentResult["_id"]});
        var result = openidm.action("sync", "getTargetPreview", {}, params);
        Object.keys(source).forEach(function(key) {
            if (typeof result[key] === "undefined" || compare(source[key], result[key], false)) {
                return;
            }
            // unable to successfully recreate object being linked, delete assignment and throw exception
            openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
            throw new org.forgerock.openidm.sync.SynchronizationException("onLink - Unable to successfully preserve differences for source: " + sourceId);
        })
    }
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {
              "managedApplicationId": "26968c01-3c25-42c4-803c-3c9c0571cae6",
            },
            "source": "let idFound = false;
if (typeof target.effectiveApplications !== "undefined" && target.effectiveApplications !== null) {
  target.effectiveApplications.forEach((effectiveApplication) => {
    if (effectiveApplication._id === managedApplicationId) {
      idFound = true;
    }
  });
}
if (!idFound) {
  openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/"+managedApplicationId});
}
",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectField": "__NAME__",
          "referencedObjectType": "Group",
          "source": "ldapGroups",
          "target": "assignments",
        },
      ],
      "runTargetPhase": false,
      "source": "system/EncoreADv2/User",
      "target": "managed/alpha_user",
    },
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail =  "volker.scheuber+" + checkuserName+ "-volker-demo"+ "@forgerock.com"; 
target.password = 'Frdp-2010';
var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {_queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "onUpdate": {
        "globals": {},
        "source": "var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {
    _queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "manager",
          "target": "frIndexedString3",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "syncAfter": [],
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -a --no-deps -f my-yet-another-allAlphaApplications.application.json": should export all apps to a single file with no dependencies into a file named my-yet-another-allAlphaApplications.application.json 1`] = `0`;

exports[`frodo app export "frodo app export -a --no-deps -f my-yet-another-allAlphaApplications.application.json": should export all apps to a single file with no dependencies into a file named my-yet-another-allAlphaApplications.application.json 2`] = `""`;

exports[`frodo app export "frodo app export -a --no-deps -f my-yet-another-allAlphaApplications.application.json": should export all apps to a single file with no dependencies into a file named my-yet-another-allAlphaApplications.application.json: my-yet-another-allAlphaApplications.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "234ae748-fcd5-459d-96a6-dd8d67f16080": {
      "_id": "234ae748-fcd5-459d-96a6-dd8d67f16080",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-982",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "26968c01-3c25-42c4-803c-3c9c0571cae6": {
      "_id": "26968c01-3c25-42c4-803c-3c9c0571cae6",
      "authoritative": false,
      "connectorId": "EncoreADv2",
      "description": "Encore Workforce AD",
      "icon": "",
      "mappingNames": [
        "systemEncoreadv2User_managedAlpha_user",
        "managedAlpha_user_systemEncoreadv2User",
        "systemEncoreadv2Group_managedAlpha_assignment",
      ],
      "name": "EncoreADv2",
      "templateName": "active.directory",
      "templateVersion": "2.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "__NAME__": {
                "order": 2,
                "userSpecific": true,
              },
              "cn": {
                "isDisplay": true,
                "order": 1,
                "userSpecific": true,
              },
              "description": {
                "order": 3,
                "userSpecific": true,
              },
              "displayName": {
                "order": 4,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 5,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 7,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 8,
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "order": 2,
                "userSpecific": true,
              },
              "__NAME__": {
                "order": 1,
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "order": 3,
                "userSpecific": true,
              },
              "accountExpires": {
                "order": 36,
                "userSpecific": true,
              },
              "c": {
                "order": 32,
                "userSpecific": true,
              },
              "cn": {
                "order": 5,
                "userSpecific": true,
              },
              "co": {
                "order": 30,
                "userSpecific": true,
              },
              "company": {
                "order": 10,
                "userSpecific": true,
              },
              "countryCode": {
                "order": 31,
                "userSpecific": true,
              },
              "department": {
                "order": 23,
                "userSpecific": true,
              },
              "description": {
                "order": 13,
                "userSpecific": true,
              },
              "displayName": {
                "order": 12,
                "userSpecific": true,
              },
              "division": {
                "order": 11,
                "userSpecific": true,
              },
              "employeeID": {
                "order": 27,
                "userSpecific": true,
              },
              "employeeNumber": {
                "order": 28,
                "userSpecific": true,
              },
              "employeeType": {
                "order": 29,
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "order": 14,
                "userSpecific": true,
              },
              "givenName": {
                "order": 7,
                "userSpecific": true,
              },
              "homePhone": {
                "order": 15,
                "userSpecific": true,
              },
              "initials": {
                "order": 24,
                "userSpecific": true,
              },
              "l": {
                "order": 16,
                "userSpecific": true,
              },
              "lastLogon": {
                "order": 19,
                "userSpecific": true,
              },
              "ldapGroups": {
                "isEntitlement": false,
                "nonAccountObject": "Group",
                "order": 46,
              },
              "lockoutTime": {
                "order": 38,
                "userSpecific": true,
              },
              "mail": {
                "order": 8,
                "userSpecific": true,
              },
              "manager": {
                "order": 22,
                "userSpecific": true,
              },
              "memberOf": {
                "order": 43,
                "userSpecific": true,
              },
              "middleName": {
                "order": 9,
                "userSpecific": true,
              },
              "mobile": {
                "order": 26,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "otherHomePhone": {
                "order": 44,
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "order": 20,
                "userSpecific": true,
              },
              "postOfficeBox": {
                "order": 18,
                "userSpecific": true,
              },
              "postalCode": {
                "order": 17,
                "userSpecific": true,
              },
              "pwdLastSet": {
                "order": 37,
                "userSpecific": true,
              },
              "sAMAccountName": {
                "isDisplay": true,
                "order": 45,
                "userSpecific": true,
              },
              "sn": {
                "order": 4,
                "userSpecific": true,
              },
              "st": {
                "order": 21,
                "userSpecific": true,
              },
              "streetAddress": {
                "order": 25,
                "userSpecific": true,
              },
              "telephoneNumber": {
                "order": 33,
                "userSpecific": true,
              },
              "title": {
                "order": 34,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 39,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 40,
                "userSpecific": true,
              },
              "userAccountControl": {
                "order": 35,
                "userSpecific": true,
              },
              "userPrincipalName": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 41,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 42,
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "55bb522b-7348-4ab6-b0b3-5d3936359ce6": {
      "_id": "55bb522b-7348-4ab6-b0b3-5d3936359ce6",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-997",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "bc48b94e-83d0-4f3a-b37a-d6f19c608a33": {
      "_id": "bc48b94e-83d0-4f3a-b37a-d6f19c608a33",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-991",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "d1488dc0-11c0-49ab-bc4c-3f45876917dc": {
      "_id": "d1488dc0-11c0-49ab-bc4c-3f45876917dc",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-1002",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -a": should export all apps to a single file 1`] = `0`;

exports[`frodo app export "frodo app export -a": should export all apps to a single file 2`] = `""`;

exports[`frodo app export "frodo app export -a": should export all apps to a single file: allAlphaApplications.application.json 1`] = `
{
  "application": {},
  "connector": {
    "EncoreADv2": {
      "_id": "provisioner.openicf/EncoreADv2",
      "configurationProperties": {
        "accountObjectClasses": [
          "top",
          "person",
          "organizationalPerson",
          "user",
        ],
        "accountSearchFilter": "(objectClass=User)",
        "accountSynchronizationFilter": null,
        "accountUserNameAttributes": [
          "sAMAccountName",
        ],
        "allowTreeDelete": false,
        "alternateKeyStore": null,
        "alternateKeyStorePassword": null,
        "alternateKeyStoreType": null,
        "attributesToSynchronize": [],
        "authType": "simple",
        "baseContexts": [
          "OU=Encore,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        ],
        "baseContextsToSynchronize": [],
        "blockSize": 100,
        "changeLogBlockSize": 100,
        "changeNumberAttribute": "changeNumber",
        "checkAliveMinInterval": 60,
        "connectionTimeout": 30000,
        "convertADIntervalToISO8601": [
          "pwdLastSet",
          "accountExpires",
          "lockoutTime",
          "lastLogon",
        ],
        "convertGTToISO8601": [
          "whenCreated",
          "whenChanged",
        ],
        "credentials": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "CTj3bUp5X751CH2Rp+gNCQ==",
              "iv": "MLlGLkkY8lewkImEL5okww==",
              "keySize": 16,
              "mac": "/fmm6tTVDtoEIaaekXtZIQ==",
              "purpose": "idm.config.encryption",
              "salt": "DzyYuBYWadeSW8BlhX0Jqw==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "failover": [],
        "filterWithOrInsteadOfAnd": false,
        "getGroupMemberId": false,
        "groupMemberAttribute": "member",
        "groupObjectClasses": [
          "top",
          "groupOfUniqueNames",
        ],
        "groupSearchFilter": "(&(!(cn=Domain Users))(objectClass=group))",
        "groupSynchronizationFilter": null,
        "gssapiLoginContext": null,
        "host": "volker-demo.ad-volker-demo.encore.forgerock.org",
        "hostNameVerification": false,
        "hostNameVerifierPattern": null,
        "lastCheckAlive": 1690969088087,
        "ldapGroupsUseStaticGroups": false,
        "maintainLdapGroupMembership": false,
        "maintainPosixGroupMembership": false,
        "modifiersNamesToFilterOut": [],
        "objectClassesToSynchronize": [
          "user",
        ],
        "passwordAttribute": "unicodePwd",
        "passwordHashAlgorithm": "WIN-AD",
        "port": 636,
        "principal": "CN=root,CN=Users,DC=ad-volker-demo,DC=encore,DC=forgerock,DC=org",
        "privateKeyAlias": null,
        "readSchema": false,
        "referralsHandling": "follow",
        "removeLogEntryObjectClassFromFilter": true,
        "resetSyncToken": "never",
        "respectResourcePasswordPolicyChangeAfterReset": false,
        "sendCAUDTxId": false,
        "ssl": true,
        "startTLS": false,
        "uidAttribute": "objectGUID",
        "useBlocks": true,
        "useDNSSRVRecord": false,
        "useOldADGUIDFormat": false,
        "usePagedResultControl": true,
        "useTimestampsForSync": false,
        "vlvSortAttribute": "sAMAccountName",
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
        "bundleVersion": "[1.5.20.12, 1.5.21.0)",
        "connectorHostRef": "adrcs",
        "connectorName": "org.identityconnectors.ldap.LdapConnector",
        "displayName": "LDAP Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "Group": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__GROUP__",
          "nativeType": "__GROUP__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
        "User": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__ENABLE__": {
              "nativeName": "__ENABLE__",
              "nativeType": "JAVA_TYPE_PRIMITIVE_BOOLEAN",
              "type": "boolean",
            },
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "__PASSWORD__": {
              "flags": [
                "NOT_READABLE",
                "NOT_RETURNED_BY_DEFAULT",
              ],
              "nativeName": "__PASSWORD__",
              "nativeType": "JAVA_TYPE_GUARDEDSTRING",
              "type": "string",
            },
            "accountExpires": {
              "nativeName": "accountExpires",
              "nativeType": "string",
              "type": "string",
            },
            "c": {
              "nativeName": "c",
              "nativeType": "string",
              "type": "string",
            },
            "cn": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "cn",
              "nativeType": "string",
              "type": "string",
            },
            "co": {
              "nativeName": "co",
              "nativeType": "string",
              "type": "string",
            },
            "company": {
              "nativeName": "company",
              "nativeType": "string",
              "type": "string",
            },
            "countryCode": {
              "nativeName": "countryCode",
              "nativeType": "string",
              "type": "string",
            },
            "department": {
              "nativeName": "department",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "type": "string",
            },
            "displayName": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "displayName",
              "nativeType": "string",
              "type": "string",
            },
            "division": {
              "nativeName": "division",
              "nativeType": "string",
              "type": "string",
            },
            "employeeID": {
              "nativeName": "employeeID",
              "nativeType": "string",
              "type": "string",
            },
            "employeeNumber": {
              "nativeName": "employeeNumber",
              "nativeType": "string",
              "type": "string",
            },
            "employeeType": {
              "nativeName": "employeeType",
              "nativeType": "string",
              "type": "string",
            },
            "facsimileTelephoneNumber": {
              "nativeName": "facsimileTelephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "givenName": {
              "nativeName": "givenName",
              "nativeType": "string",
              "type": "string",
            },
            "homePhone": {
              "nativeName": "homePhone",
              "nativeType": "string",
              "type": "string",
            },
            "initials": {
              "nativeName": "initials",
              "nativeType": "string",
              "type": "string",
            },
            "l": {
              "nativeName": "l",
              "nativeType": "string",
              "type": "string",
            },
            "lastLogon": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lastLogon",
              "nativeType": "string",
              "type": "string",
            },
            "ldapGroups": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "ldapGroups",
              "nativeType": "string",
              "required": false,
              "type": "array",
            },
            "lockoutTime": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "lockoutTime",
              "nativeType": "string",
              "type": "string",
            },
            "mail": {
              "nativeName": "mail",
              "nativeType": "string",
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "type": "string",
            },
            "memberOf": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "memberOf",
              "nativeType": "string",
              "type": "array",
            },
            "middleName": {
              "nativeName": "middleName",
              "nativeType": "string",
              "type": "string",
            },
            "mobile": {
              "nativeName": "mobile",
              "nativeType": "string",
              "type": "string",
            },
            "objectGUID": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "objectGUID",
              "nativeType": "string",
              "type": "string",
            },
            "otherHomePhone": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "otherHomePhone",
              "nativeType": "string",
              "type": "array",
            },
            "physicalDeliveryOfficeName": {
              "nativeName": "physicalDeliveryOfficeName",
              "nativeType": "string",
              "type": "string",
            },
            "postOfficeBox": {
              "items": {
                "nativeType": "string",
                "type": "string",
              },
              "nativeName": "postOfficeBox",
              "nativeType": "string",
              "type": "array",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "type": "string",
            },
            "pwdLastSet": {
              "flags": [
                "NOT_CREATABLE",
                "NOT_UPDATEABLE",
              ],
              "nativeName": "pwdLastSet",
              "nativeType": "string",
              "type": "string",
            },
            "sAMAccountName": {
              "nativeName": "sAMAccountName",
              "nativeType": "string",
              "type": "string",
            },
            "sn": {
              "nativeName": "sn",
              "nativeType": "string",
              "type": "string",
            },
            "st": {
              "nativeName": "st",
              "nativeType": "string",
              "type": "string",
            },
            "streetAddress": {
              "nativeName": "streetAddress",
              "nativeType": "string",
              "type": "string",
            },
            "telephoneNumber": {
              "nativeName": "telephoneNumber",
              "nativeType": "string",
              "type": "string",
            },
            "title": {
              "nativeName": "title",
              "nativeType": "string",
              "type": "string",
            },
            "uSNChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNChanged",
              "nativeType": "string",
              "type": "string",
            },
            "uSNCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "uSNCreated",
              "nativeType": "string",
              "type": "string",
            },
            "userAccountControl": {
              "nativeName": "userAccountControl",
              "nativeType": "string",
              "type": "string",
            },
            "userPrincipalName": {
              "nativeName": "userPrincipalName",
              "nativeType": "string",
              "type": "string",
            },
            "whenChanged": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenChanged",
              "nativeType": "string",
              "type": "string",
            },
            "whenCreated": {
              "flags": [
                "NOT_UPDATEABLE",
                "NOT_CREATABLE",
              ],
              "nativeName": "whenCreated",
              "nativeType": "string",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "gpigd7hcpjldqu81aCo67bUfjxHldBGf6LAdsfXBJIc=",
              "iv": "I0rXA4v5KVb5Z2FgirVyVA==",
              "keySize": 16,
              "mac": "zXSltI9rpo9MEJKPuop/zQ==",
              "purpose": "idm.config.encryption",
              "salt": "sFzdBL01YZWyjilDZimG/A==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "234ae748-fcd5-459d-96a6-dd8d67f16080": {
      "_id": "234ae748-fcd5-459d-96a6-dd8d67f16080",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/eolic-energy.svg",
      "name": "company",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fcompany&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fcompany%2Fsaml",
        "idpPrivateId": "Y29tcGFueS1JRFA",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-982",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "26968c01-3c25-42c4-803c-3c9c0571cae6": {
      "_id": "26968c01-3c25-42c4-803c-3c9c0571cae6",
      "authoritative": false,
      "connectorId": "EncoreADv2",
      "description": "Encore Workforce AD",
      "icon": "",
      "mappingNames": [
        "systemEncoreadv2User_managedAlpha_user",
        "managedAlpha_user_systemEncoreadv2User",
        "systemEncoreadv2Group_managedAlpha_assignment",
      ],
      "name": "EncoreADv2",
      "templateName": "active.directory",
      "templateVersion": "2.0",
      "uiConfig": {
        "objectTypes": {
          "Group": {
            "properties": {
              "__NAME__": {
                "order": 2,
                "userSpecific": true,
              },
              "cn": {
                "isDisplay": true,
                "order": 1,
                "userSpecific": true,
              },
              "description": {
                "order": 3,
                "userSpecific": true,
              },
              "displayName": {
                "order": 4,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 5,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 7,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 8,
                "userSpecific": true,
              },
            },
          },
          "User": {
            "properties": {
              "__ENABLE__": {
                "order": 2,
                "userSpecific": true,
              },
              "__NAME__": {
                "order": 1,
                "userSpecific": true,
              },
              "__PASSWORD__": {
                "order": 3,
                "userSpecific": true,
              },
              "accountExpires": {
                "order": 36,
                "userSpecific": true,
              },
              "c": {
                "order": 32,
                "userSpecific": true,
              },
              "cn": {
                "order": 5,
                "userSpecific": true,
              },
              "co": {
                "order": 30,
                "userSpecific": true,
              },
              "company": {
                "order": 10,
                "userSpecific": true,
              },
              "countryCode": {
                "order": 31,
                "userSpecific": true,
              },
              "department": {
                "order": 23,
                "userSpecific": true,
              },
              "description": {
                "order": 13,
                "userSpecific": true,
              },
              "displayName": {
                "order": 12,
                "userSpecific": true,
              },
              "division": {
                "order": 11,
                "userSpecific": true,
              },
              "employeeID": {
                "order": 27,
                "userSpecific": true,
              },
              "employeeNumber": {
                "order": 28,
                "userSpecific": true,
              },
              "employeeType": {
                "order": 29,
                "userSpecific": true,
              },
              "facsimileTelephoneNumber": {
                "order": 14,
                "userSpecific": true,
              },
              "givenName": {
                "order": 7,
                "userSpecific": true,
              },
              "homePhone": {
                "order": 15,
                "userSpecific": true,
              },
              "initials": {
                "order": 24,
                "userSpecific": true,
              },
              "l": {
                "order": 16,
                "userSpecific": true,
              },
              "lastLogon": {
                "order": 19,
                "userSpecific": true,
              },
              "ldapGroups": {
                "isEntitlement": false,
                "nonAccountObject": "Group",
                "order": 46,
              },
              "lockoutTime": {
                "order": 38,
                "userSpecific": true,
              },
              "mail": {
                "order": 8,
                "userSpecific": true,
              },
              "manager": {
                "order": 22,
                "userSpecific": true,
              },
              "memberOf": {
                "order": 43,
                "userSpecific": true,
              },
              "middleName": {
                "order": 9,
                "userSpecific": true,
              },
              "mobile": {
                "order": 26,
                "userSpecific": true,
              },
              "objectGUID": {
                "order": 0,
                "userSpecific": true,
              },
              "otherHomePhone": {
                "order": 44,
                "userSpecific": true,
              },
              "physicalDeliveryOfficeName": {
                "order": 20,
                "userSpecific": true,
              },
              "postOfficeBox": {
                "order": 18,
                "userSpecific": true,
              },
              "postalCode": {
                "order": 17,
                "userSpecific": true,
              },
              "pwdLastSet": {
                "order": 37,
                "userSpecific": true,
              },
              "sAMAccountName": {
                "isDisplay": true,
                "order": 45,
                "userSpecific": true,
              },
              "sn": {
                "order": 4,
                "userSpecific": true,
              },
              "st": {
                "order": 21,
                "userSpecific": true,
              },
              "streetAddress": {
                "order": 25,
                "userSpecific": true,
              },
              "telephoneNumber": {
                "order": 33,
                "userSpecific": true,
              },
              "title": {
                "order": 34,
                "userSpecific": true,
              },
              "uSNChanged": {
                "order": 39,
                "userSpecific": true,
              },
              "uSNCreated": {
                "order": 40,
                "userSpecific": true,
              },
              "userAccountControl": {
                "order": 35,
                "userSpecific": true,
              },
              "userPrincipalName": {
                "order": 6,
                "userSpecific": true,
              },
              "whenChanged": {
                "order": 41,
                "userSpecific": true,
              },
              "whenCreated": {
                "order": 42,
                "userSpecific": true,
              },
            },
          },
        },
      },
    },
    "55bb522b-7348-4ab6-b0b3-5d3936359ce6": {
      "_id": "55bb522b-7348-4ab6-b0b3-5d3936359ce6",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/puzzle.svg",
      "name": "engineering",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fengineering&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Froles%2Fsaml",
        "idpPrivateId": "ZW5naW5lZXJpbmctSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-997",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "bc48b94e-83d0-4f3a-b37a-d6f19c608a33": {
      "_id": "bc48b94e-83d0-4f3a-b37a-d6f19c608a33",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/hot-air-balloon.svg",
      "name": "benefits",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fbenefits&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fbenefits%2Fsaml",
        "idpPrivateId": "YmVuZWZpdHMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-991",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
    "d1488dc0-11c0-49ab-bc4c-3f45876917dc": {
      "_id": "d1488dc0-11c0-49ab-bc4c-3f45876917dc",
      "authoritative": false,
      "description": "Deployed via Encore",
      "icon": "https://encore.forgerock.com/media/svg/misc/infography.svg",
      "name": "sales",
      "ssoEntities": {
        "domain": "openam-volker-demo.forgeblocks.com",
        "idpLocation": "hosted",
        "idpLoginUrl": "https://openam-volker-demo.forgeblocks.com/am/idpssoinit?metaAlias=%2Falpha%2Fsales&spEntityID=https%3A%2F%2Fvolker-demo.encore.forgerock.com%3A443%2Fapps%2Fweb%2Fsales%2Fsaml",
        "idpPrivateId": "c2FsZXMtSURQ",
        "key": "6f7f7140-16a0-47f8-9d9d-b519ed0530ca-1002",
        "spLocation": "remote",
        "spPrivateId": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
      },
      "templateName": "saml",
      "templateVersion": "1.0.0",
    },
  },
  "mapping": {
    "managedAlpha_user_systemEncoreadv2User": {
      "_id": "mapping/managedAlpha_user_systemEncoreadv2User",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'sAMAccountName eq "' + source.userName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "assignments",
      ],
      "defaultTargetFields": [
        "*",
        "ldapGroups",
      ],
      "displayName": "managedAlpha_user_systemEncoreadv2User",
      "icon": null,
      "name": "managedAlpha_user_systemEncoreadv2User",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = false;
target.__NAME__ = \`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
openidm.update('system/EncoreADv2/User/' + target._id, null, target); 'UNLINK';",
            "type": "text/javascript",
          },
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": {
            "source": "target.__ENABLE__ = true;
target.__NAME__ = \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`;
'UPDATE'; openidm.update('system/EncoreADv2/User/' + target._id, null, target);",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED",
        },
      ],
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "",
          "target": "cn",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source.userName;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "sn",
          "target": "sn",
        },
        {
          "source": "userName",
          "target": "sAMAccountName",
        },
        {
          "source": "",
          "target": "userPrincipalName",
          "transform": {
            "source": "\`\${source.userName}@ad-volker-demo.encore.forgerock.org\`;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__ENABLE__",
          "transform": {
            "source": "(source.accountStatus==='inactive') ? false : true;",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__NAME__",
          "transform": {
            "source": "(source.accountStatus=="active")? \`cn=\${source.userName},ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`:\`cn=\${source.userName},ou=Inactive,ou=Encore,dc=ad-volker-demo,dc=encore,dc=forgerock,dc=org\`",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "openidm.decrypt(source.custom_encryptedPassword)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName + ' ' + source.sn",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": false,
      "settings": {},
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq "26968c01-3c25-42c4-803c-3c9c0571cae6"] or lastSync/managedAlpha_user_systemEncoreadv2User pr or /source/effectiveAssignments[(mapping eq "managedAlpha_user_systemEncoreadv2User" and type eq "__ENTITLEMENT__")]",
      },
      "target": "system/EncoreADv2/User",
    },
    "systemEncoreadv2Group_managedAlpha_assignment": {
      "_id": "mapping/systemEncoreadv2Group_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemEncoreadv2Group_managedAlpha_assignment",
      "icon": null,
      "name": "systemEncoreadv2Group_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type",
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.description !== "undefined") && source.description !== null) {
  source.description;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "default": "managedAlpha_user_systemEncoreadv2User",
          "target": "mapping",
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "if ((typeof source.cn !== "undefined") && source.cn !== null) {
  source.cn;
} else {
  source._id;
}",
            "type": "text/javascript",
          },
        },
        {
          "source": "__NAME__",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[
  {
    'name': 'ldapGroups',
    'value': [source]
  }
]",
            "type": "text/javascript",
          },
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_EncoreADv2_Group_",
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/EncoreADv2/Group",
      "target": "managed/alpha_assignment",
    },
    "systemEncoreadv2User_managedAlpha_user": {
      "_id": "mapping/systemEncoreadv2User_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'userName eq "' + source.sAMAccountName + '"'}; qry",
          "type": "text/javascript",
        },
      ],
      "defaultSourceFields": [
        "*",
        "ldapGroups",
      ],
      "defaultTargetFields": [
        "*",
        "assignments",
      ],
      "displayName": "systemEncoreadv2User_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemEncoreadv2User",
      "name": "systemEncoreadv2User_managedAlpha_user",
      "onLink": {
        "globals": {
          "assignmentResCollection": "managed/alpha_assignment",
        },
        "source": "function compare(sourceVal, previewVal, strictEquality) {
    if (Array.isArray(sourceVal) && Array.isArray(previewVal)) {
        return arraysAreEqual(sourceVal, previewVal, strictEquality);
    } else if (elementIsObject(sourceVal) && elementIsObject(previewVal)) {
        return mapsAreEqual(sourceVal, previewVal, strictEquality);
    } else {
        return sourceVal === previewVal;
    }
}

function arraysAreEqual(sourceArray, previewArray, strictEquality) {
    if (!lengthCheck(sourceArray, previewArray, strictEquality)) {
        return false;
    }

    return sourceArray.every((sourceEle) => previewArray.some((previewEle) => compare(sourceEle, previewEle)));
}

function mapsAreEqual(sourceMap, previewMap, strictEquality) {
    var sourceKeys = Object.keys(sourceMap);
    var previewKeys = Object.keys(previewMap);

    if (!lengthCheck(sourceKeys, previewKeys, strictEquality)) {
        return false;
    }

    if (!sourceKeys.every((sourceKey) => previewKeys.includes(sourceKey))) {
        return false;
    }
    return sourceKeys.every((key) => compare(sourceMap[key], previewMap[key], strictEquality));
}

function lengthCheck(first, second, strictEquality) {
    return strictEquality ? (first.length === second.length)
        : (first.length <= second.length);
}

function elementIsObject(val) {
    return typeof val === "object" && val !== null;
}

if (situation === "FOUND") {
    var params = {
        "resourceId": targetId,
        "mapping": mappingConfig.links,
        "linkQualifier": linkQualifier
    };

    // get the preview of the target object from the outbound mapping
    var targetPreview = openidm.action("sync", "getTargetPreview", {}, params);
    var attributes = [];

    // find all values where target app user has different values from the correlated IDM user
    Object.keys(source).filter(function(key) {
        return (key in targetPreview) ? !compare(source[key], targetPreview[key], true) : false;
    }).forEach(function(key) {
        var attribute = {
            "name": key,
            "value": source[key]
        };
        attributes.push(attribute);
    })

    // create override assignment if any diff was found
    if (attributes.length > 0) {
        var assignment = {
            "name": targetId + "-overrideAssignment",
            "description": targetId + "override assignment",
            "mapping": mappingConfig.links,
            "attributes": attributes,
            "type": "__OVERRIDE__"
        };
        var assignmentResult = openidm.create(assignmentResCollection, null, assignment);
        openidm.create(mappingConfig.target + "/" + targetId + "/assignments", null, {"_ref": assignmentResCollection + "/" + assignmentResult["_id"]});
        var result = openidm.action("sync", "getTargetPreview", {}, params);
        Object.keys(source).forEach(function(key) {
            if (typeof result[key] === "undefined" || compare(source[key], result[key], false)) {
                return;
            }
            // unable to successfully recreate object being linked, delete assignment and throw exception
            openidm.delete(assignmentResCollection + "/" + assignmentResult._id, null);
            throw new org.forgerock.openidm.sync.SynchronizationException("onLink - Unable to successfully preserve differences for source: " + sourceId);
        })
    }
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "MISSING",
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED",
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY",
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "LINK",
          "postAction": {
            "globals": {
              "managedApplicationId": "26968c01-3c25-42c4-803c-3c9c0571cae6",
            },
            "source": "let idFound = false;
if (typeof target.effectiveApplications !== "undefined" && target.effectiveApplications !== null) {
  target.effectiveApplications.forEach((effectiveApplication) => {
    if (effectiveApplication._id === managedApplicationId) {
      idFound = true;
    }
  });
}
if (!idFound) {
  openidm.create("managed/alpha_user/"+target._id+"/applications",null,{_ref:"managed/alpha_application/"+managedApplicationId});
}
",
            "type": "text/javascript",
          },
          "situation": "FOUND",
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT",
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT",
        },
      ],
      "properties": [
        {
          "referencedObjectField": "__NAME__",
          "referencedObjectType": "Group",
          "source": "ldapGroups",
          "target": "assignments",
        },
      ],
      "runTargetPhase": false,
      "source": "system/EncoreADv2/User",
      "target": "managed/alpha_user",
    },
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail =  "volker.scheuber+" + checkuserName+ "-volker-demo"+ "@forgerock.com"; 
target.password = 'Frdp-2010';
var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {_queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "onUpdate": {
        "globals": {},
        "source": "var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {
    _queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "manager",
          "target": "frIndexedString3",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "syncAfter": [],
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
  "saml": {
    "cot": {
      "FR_COT": {
        "_id": "FR_COT",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml|saml2",
          "company-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml|saml2",
          "benefits-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml|saml2",
          "engineering-IDP|saml2",
          "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml|saml2",
          "sales-IDP|saml2",
        ],
      },
    },
    "hosted": {
      "Y29tcGFueS1JRFA": {
        "_id": "Y29tcGFueS1JRFA",
        "entityId": "company-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/company",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company",
              },
            ],
            "metaAlias": "/alpha/company",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company",
                },
              ],
            },
          },
        },
      },
      "YmVuZWZpdHMtSURQ": {
        "_id": "YmVuZWZpdHMtSURQ",
        "entityId": "benefits-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/benefits",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits",
              },
            ],
            "metaAlias": "/alpha/benefits",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits",
                },
              ],
            },
          },
        },
      },
      "ZW5naW5lZXJpbmctSURQ": {
        "_id": "ZW5naW5lZXJpbmctSURQ",
        "entityId": "engineering-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/engineering",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering",
              },
            ],
            "metaAlias": "/alpha/engineering",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering",
                },
              ],
            },
          },
        },
      },
      "c2FsZXMtSURQ": {
        "_id": "c2FsZXMtSURQ",
        "entityId": "sales-IDP",
        "identityProvider": {
          "advanced": {
            "ecpConfiguration": {
              "idpSessionMapper": "com.sun.identity.saml2.plugins.DefaultIDPECPSessionMapper",
            },
            "idpAdapter": {
              "idpAdapterScript": "[Empty]",
            },
            "idpFinderImplementation": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "idpUrl": "https://openam-volker-demo.forgeblocks.com/am/idpsaehandler/metaAlias/alpha/sales",
            },
            "sessionSynchronization": {},
          },
          "assertionContent": {
            "assertionCache": {},
            "assertionTime": {
              "effectiveTime": 600,
              "notBeforeTimeSkew": 600,
            },
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "level": 0,
                },
              ],
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultIDPAuthnContextMapper",
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
              "nameIdValueMap": [
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                  "value": "mail",
                },
                {
                  "binary": false,
                  "key": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified ",
                  "value": "mail",
                },
              ],
            },
            "signingAndEncryption": {
              "encryption": {
                "nameIdEncryption": false,
              },
              "requestResponseSigning": {
                "artifactResolve": true,
                "authenticationRequest": true,
                "logoutRequest": false,
                "logoutResponse": false,
                "manageNameIdRequest": false,
                "manageNameIdResponse": false,
              },
              "secretIdAndAlgorithms": {
                "digestAlgorithm": [
                  "http://www.w3.org/2001/04/xmlenc#sha256",
                ],
                "encryptionAlgorithm": [
                  "http://www.w3.org/2009/xmlenc11#rsa-oaep",
                ],
                "signingAlgorithm": [],
              },
            },
          },
          "assertionProcessing": {
            "accountMapper": {
              "accountMapper": "com.sun.identity.saml2.plugins.DefaultIDPAccountMapper",
            },
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "SSOID",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Email",
                },
                {
                  "binary": false,
                  "localAttribute": ""Standard User"",
                  "samlAttribute": "User.ProfileID",
                },
                {
                  "binary": false,
                  "localAttribute": "sn",
                  "samlAttribute": "User.LastName",
                },
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "User.Username",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultIDPAttributeMapper",
              "attributeMapperScript": "[Empty]",
            },
            "localConfiguration": {},
          },
          "services": {
            "assertionIdRequest": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales",
              },
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:URI",
                "location": "https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales",
              },
            ],
            "metaAlias": "/alpha/sales",
            "nameIdMapping": [
              {
                "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                "location": "https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales",
              },
            ],
            "serviceAttributes": {
              "artifactResolutionService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                  "responseLocation": "https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "Y29tcGFueS1JRFA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="company-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/company"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/company"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/company"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/company"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/company"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/company"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "YmVuZWZpdHMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="benefits-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/benefits"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/benefits"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/benefits"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/benefits"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/benefits"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "ZW5naW5lZXJpbmctSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="engineering-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/engineering"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/engineering"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/engineering"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/engineering"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/engineering"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/company/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml" validUntil="2025-12-09T09:13:31.006Z" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor AuthnRequestsSigned="false" WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "c2FsZXMtSURQ": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="sales-IDP" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor WantAuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <Extensions>",
        "            <alg:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "        </Extensions>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDYzCCAkugAwIBAgIIRflF2T7uhq8wDQYJKoZIhvcNAQELBQAwYDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazEZMBcG",
        "A1UEAxMQcnNhand0c2lnbmluZ2tleTAeFw0yMzExMTYxNzQ2NDdaFw0zMzExMTMxNzQ2NDdaMGAx",
        "CzAJBgNVBAYTAlVLMRAwDgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQK",
        "EwlGb3JnZVJvY2sxGTAXBgNVBAMTEHJzYWp3dHNpZ25pbmdrZXkwggEiMA0GCSqGSIb3DQEBAQUA",
        "A4IBDwAwggEKAoIBAQCgo6R9SvwjTRkstjuZP/SIDBHHZhrWvjdzX/VOOeKUbdzZF/CyobBZjSxf",
        "LS4m+WXsZBefnHPuLJHUefzJ+BmvRovdjvrvPtZ6VnGN44k/EvxHvrMNqpuOdwUA/FwAlpn+ch1t",
        "Pr+cY/6Bi1zjz+RSSVpi4rj0HmV9VzQukI2PIflZriRsi8lqryuVzOzxQLm04MtRjFOAGkqCb9AZ",
        "PfOLibiD3fw+IjSgjlMyUmb8pAyt48I/m+aCBWuiIn4jMVHHWfN4fHCpzj3HO5tiLYZ9+sWzz9/L",
        "Td97QmQU12SiZqsw3e0AiS1t7R/1iABJUTnK0p5iWmYOycu8F3F6PrtTAgMBAAGjITAfMB0GA1Ud",
        "DgQWBBStMEaiWexyED2GaISfG6o5tNw8vzANBgkqhkiG9w0BAQsFAAOCAQEAW09+TKMbF+iVj0iD",
        "ut1+JHCcKyoG1irjlovQBq1nqU2Y2lY3RhsXVRo4R/IjwCE4PgCsuWJIxKzEknRxoY+XjEkJuNem",
        "wBp/zh89oaDAIYBuTHhyYnBfQQb1+Hs/ncydCAMezwzRXwfeSXHytCMoAxWzzqJdrrmWBVCs4Ka5",
        "lJdJtywEjmCORMlx620LcSIgcURH3RJlcKNzgarAjb8+rZwwnFGPGFRWtngybTBdGX0Iv87xIU60",
        "kI+NvVasECMf9k1IvaGY5iFbt7gBsEqLdE8XUs2ZPlG1Ewtf+Kb9SowUfagSzkOANiBWag3W4XlZ",
        "GEw4yQOTaSzG0Eb3W3JxtQ==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDTDCCAjSgAwIBAgIJAKxBN+VPXiiSMA0GCSqGSIb3DQEBCwUAMFQxCzAJBgNVBAYTAlVLMRAw",
        "DgYDVQQIEwdCcmlzdG9sMRAwDgYDVQQHEwdCcmlzdG9sMRIwEAYDVQQKEwlGb3JnZVJvY2sxDTAL",
        "BgNVBAMTBHRlc3QwHhcNMjMxMTE2MTc0NjQ4WhcNMzMxMTEzMTc0NjQ4WjBUMQswCQYDVQQGEwJV",
        "SzEQMA4GA1UECBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2Nr",
        "MQ0wCwYDVQQDEwR0ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiKfSrIfNuDC0",
        "Jc30YcvaRW3a1QBkI9RbShwa+CFvHS5Jis14N0+6FZcuaKSH7zZurXhTI+tUcUyGTpcUylvqx5si",
        "B72guBLCKpKFUEHLSXaGTa0q7mMSeJIvwE75udoqSkMXmLnzYAnymAhIKTkQGwpj0dsgggralU7q",
        "53bDAjMlnFOqv/mEU7QqxKbnK/ULw8R6ILhuX4f2gbg9W2bSssfPO9YhWIE76ptJ8rkZJKDaQMcD",
        "/HW2PHc6fTlubRs+Jz9w2KthJKwr6cdGEh/Fx/s/D4lwBU2tdKF21i96S6qDCIIEGq+OUWANjkDY",
        "MeJPXjM0u3TDYkNt5nSTIcpXiwIDAQABoyEwHzAdBgNVHQ4EFgQUcFoaz1RfBWsU0MHqujMT4y/a",
        "b58wDQYJKoZIhvcNAQELBQADggEBAH14jSDqT2Uz2KO/ftsDvjjsw91kZAoPmTg3Nz82+p8cgdz8",
        "lhEClSkfHhwjege/pSVsILdmDcmEBnrWNGK+UTbvVEpJVy3Jxd1PtUEoxGJfVRYOXGwJSq+cWfIH",
        "5xLo7EMNOkvS1fkwhj1EtInU2GpafTvpbYerTC+PhaTWa1+oCULw5OCpvXeP0Fd25ItbwcFQu5/a",
        "KZo0XbTLrxSiFatTjK7ucbrc4bGsmdrOBmOyqTPk9Gr5nQ4BBH9jrgBLcLT81Q6FhlKO7I7yBnQ/",
        "two+2EYbeNMu1GjU61bNO8wj1KQ7qftGl3nj3Vnt0GkzdXuXAbDflZyA/CkiQcV3tq8=",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2009/xmlenc11#rsa-oaep">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "                <xenc11:MGF Algorithm="http://www.w3.org/2009/xmlenc11#mgf1sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <ArtifactResolutionService index="0" Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="openam-volker-demo.forgeblocks.com/am/ArtifactResolver/metaAlias/alpha/sales"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPSloPOST/metaAlias/alpha/sales"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales" ResponseLocation="https://openam-volker-demo.forgeblocks.com/am/IDPMniPOST/metaAlias/alpha/sales"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://openam-volker-demo.forgeblocks.com/am/SSOPOST/metaAlias/alpha/sales"/>",
        "        <NameIDMappingService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/NIMSoap/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqSoap/IDPRole/metaAlias/alpha/sales"/>",
        "        <AssertionIDRequestService Binding="urn:oasis:names:tc:SAML:2.0:bindings:URI" Location="https://openam-volker-demo.forgeblocks.com/am/AIDReqUri/IDPRole/metaAlias/alpha/sales"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvY29tcGFueS9zYW1s",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/company/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvYmVuZWZpdHMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/benefits/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvc2FsZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/sales/saml",
                },
              ],
            },
          },
        },
      },
      "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA": {
        "_id": "aHR0cHM6Ly92b2xrZXItZGVtby5lbmNvcmUuZm9yZ2Vyb2NrLmNvbTo0NDMvYXBwcy93ZWIvcm9sZXMvc2FtbA",
        "entityId": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
              ],
            },
            "secrets": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
                "authenticationRequest": false,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {},
            "responseArtifactMessageEncoding": {},
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://volker-demo.encore.forgerock.com:443/apps/web/roles/saml",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {},
}
`;

exports[`frodo app export "frodo app export -i HRLite --no-deps -f my-nodeps-HRLite.application.json": should export the app with app id "HRLite" with no dependencies into a file named my-nodeps-HRLite.application.json 1`] = `0`;

exports[`frodo app export "frodo app export -i HRLite --no-deps -f my-nodeps-HRLite.application.json": should export the app with app id "HRLite" with no dependencies into a file named my-nodeps-HRLite.application.json 2`] = `""`;

exports[`frodo app export "frodo app export -i HRLite --no-deps -f my-nodeps-HRLite.application.json": should export the app with app id "HRLite" with no dependencies into a file named my-nodeps-HRLite.application.json: my-nodeps-HRLite.application.json 1`] = `
{
  "application": {},
  "managedApplication": {
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite -f my-HRLite.application.json": should export the app with app id "HRLite" into file named my-HRLite.application.json 1`] = `0`;

exports[`frodo app export "frodo app export -i HRLite -f my-HRLite.application.json": should export the app with app id "HRLite" into file named my-HRLite.application.json 2`] = `""`;

exports[`frodo app export "frodo app export -i HRLite -f my-HRLite.application.json": should export the app with app id "HRLite" into file named my-HRLite.application.json: my-HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "gpigd7hcpjldqu81aCo67bUfjxHldBGf6LAdsfXBJIc=",
              "iv": "I0rXA4v5KVb5Z2FgirVyVA==",
              "keySize": 16,
              "mac": "zXSltI9rpo9MEJKPuop/zQ==",
              "purpose": "idm.config.encryption",
              "salt": "sFzdBL01YZWyjilDZimG/A==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail =  "volker.scheuber+" + checkuserName+ "-volker-demo"+ "@forgerock.com"; 
target.password = 'Frdp-2010';
var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {_queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "onUpdate": {
        "globals": {},
        "source": "var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {
    _queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "manager",
          "target": "frIndexedString3",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "syncAfter": [],
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;

exports[`frodo app export "frodo app export -i HRLite": should export the app with app id "HRLite" 1`] = `0`;

exports[`frodo app export "frodo app export -i HRLite": should export the app with app id "HRLite" 2`] = `""`;

exports[`frodo app export "frodo app export -i HRLite": should export the app with app id "HRLite": HRLite.application.json 1`] = `
{
  "application": {},
  "connector": {
    "HRLite": {
      "_id": "provisioner.openicf/HRLite",
      "configurationProperties": {
        "abandonWhenPercentageFull": 0,
        "accessToUnderlyingConnectionAllowed": true,
        "alternateUsernameAllowed": false,
        "authenticateScriptFileName": "HRliteAuthenticateScript.groovy",
        "autoCommit": true,
        "classpath": [],
        "commitOnReturn": false,
        "connectionProperties": null,
        "createScriptFileName": "HRliteCreateScript.groovy",
        "customConfiguration": null,
        "customSensitiveConfiguration": null,
        "customizerScriptFileName": null,
        "dataSourceJNDI": null,
        "debug": false,
        "defaultAutoCommit": null,
        "defaultCatalog": null,
        "defaultReadOnly": null,
        "defaultTransactionIsolation": -1,
        "deleteScriptFileName": "HRliteDeleteScript.groovy",
        "disabledGlobalASTTransformations": null,
        "driverClassName": "com.mysql.jdbc.Driver",
        "fairQueue": true,
        "ignoreExceptionOnPreLoad": false,
        "initSQL": null,
        "initialSize": 10,
        "jdbcInterceptors": null,
        "jmxEnabled": true,
        "logAbandoned": false,
        "logValidationErrors": false,
        "maxActive": 100,
        "maxAge": 0,
        "maxIdle": 100,
        "maxWait": 30000,
        "minEvictableIdleTimeMillis": 60000,
        "minIdle": 10,
        "minimumRecompilationInterval": 100,
        "name": "Tomcat Connection Pool[1-265824587]",
        "numTestsPerEvictionRun": 0,
        "password": {
          "$crypto": {
            "type": "x-simple-encryption",
            "value": {
              "cipher": "AES/CBC/PKCS5Padding",
              "data": "gpigd7hcpjldqu81aCo67bUfjxHldBGf6LAdsfXBJIc=",
              "iv": "I0rXA4v5KVb5Z2FgirVyVA==",
              "keySize": 16,
              "mac": "zXSltI9rpo9MEJKPuop/zQ==",
              "purpose": "idm.config.encryption",
              "salt": "sFzdBL01YZWyjilDZimG/A==",
              "stableId": "openidm-sym-default",
            },
          },
        },
        "propagateInterruptState": false,
        "recompileGroovySource": false,
        "removeAbandoned": false,
        "removeAbandonedTimeout": 60,
        "resolveUsernameScriptFileName": null,
        "rollbackOnReturn": false,
        "schemaScriptFileName": "HRliteSchemaScript.groovy",
        "scriptBaseClass": null,
        "scriptExtensions": [
          "groovy",
        ],
        "scriptOnResourceScriptFileName": null,
        "scriptRoots": "/opt/forgerock/openicf/scripts/hrlite",
        "searchScriptFileName": "HRliteSearchScript.groovy",
        "sourceEncoding": "UTF-8",
        "suspectTimeout": 0,
        "syncScriptFileName": "HRliteSyncScript.groovy",
        "targetDirectory": null,
        "testOnBorrow": false,
        "testOnConnect": false,
        "testOnReturn": false,
        "testScriptFileName": "HRliteTestScript.groovy",
        "testWhileIdle": false,
        "timeBetweenEvictionRunsMillis": 5000,
        "tolerance": 10,
        "updateScriptFileName": "HRliteUpdateScript.groovy",
        "url": "jdbc:mysql://mariadb:3306/hrdb?autoReconnect=true",
        "useDisposableConnectionFacade": true,
        "useEquals": true,
        "useLock": false,
        "useStatementFacade": true,
        "username": "hradmin",
        "validationInterval": 2000,
        "validationQuery": "SELECT 1 FROM DUAL",
        "validationQueryTimeout": -1,
        "validatorClassName": null,
        "verbose": false,
        "warningLevel": 1,
      },
      "connectorRef": {
        "bundleName": "org.forgerock.openicf.connectors.scriptedsql-connector",
        "bundleVersion": "1.5.20.9",
        "connectorHostRef": "encorebaseline",
        "connectorName": "org.forgerock.openicf.connectors.scriptedsql.ScriptedSQLConnector",
        "displayName": "Scripted SQL Connector",
        "systemType": "provisioner.openicf",
      },
      "enabled": true,
      "objectTypes": {
        "__ACCOUNT__": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "__ACCOUNT__",
          "nativeType": "__ACCOUNT__",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "address": {
              "nativeName": "address",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "city": {
              "nativeName": "city",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "country": {
              "nativeName": "country",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depId": {
              "nativeName": "depId",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "depName": {
              "nativeName": "depName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "email": {
              "nativeName": "email",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "empType": {
              "nativeName": "empType",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "externalMail": {
              "nativeName": "externalMail",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "firstName": {
              "nativeName": "firstName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "isManager": {
              "nativeName": "isManager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "jobCode": {
              "nativeName": "jobCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "lastName": {
              "nativeName": "lastName",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "manager": {
              "nativeName": "manager",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "phone": {
              "nativeName": "phone",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "postalCode": {
              "nativeName": "postalCode",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "state": {
              "nativeName": "state",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "status": {
              "nativeName": "status",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
        "department": {
          "$schema": "http://json-schema.org/draft-03/schema",
          "id": "department",
          "nativeType": "department",
          "properties": {
            "__NAME__": {
              "nativeName": "__NAME__",
              "nativeType": "string",
              "type": "string",
            },
            "description": {
              "nativeName": "description",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "name": {
              "nativeName": "name",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "parent": {
              "nativeName": "parent",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
            "uid": {
              "nativeName": "uid",
              "nativeType": "string",
              "required": true,
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "operationTimeout": {
        "AUTHENTICATE": -1,
        "CREATE": -1,
        "DELETE": -1,
        "GET": -1,
        "RESOLVEUSERNAME": -1,
        "SCHEMA": -1,
        "SCRIPT_ON_CONNECTOR": -1,
        "SCRIPT_ON_RESOURCE": -1,
        "SEARCH": -1,
        "SYNC": -1,
        "TEST": -1,
        "UPDATE": -1,
        "VALIDATE": -1,
      },
      "poolConfigOption": {
        "maxIdle": 10,
        "maxObjects": 10,
        "maxWait": 150000,
        "minEvictableIdleTimeMillis": 120000,
        "minIdle": 1,
      },
      "resultsHandlerConfig": {
        "enableAttributesToGetSearchResultsHandler": true,
        "enableCaseInsensitiveFilter": false,
        "enableFilteredResultsHandler": false,
        "enableNormalizingResultsHandler": false,
      },
    },
  },
  "managedApplication": {
    "c7932f33-a3ac-4192-8dee-11fb96df0874": {
      "_id": "c7932f33-a3ac-4192-8dee-11fb96df0874",
      "authoritative": true,
      "connectorId": "HRLite",
      "description": "Example",
      "icon": "",
      "mappingNames": [
        "systemHrlite__account___managedAlpha_user",
      ],
      "name": "HRLite",
      "templateName": "scripted.sql",
      "templateVersion": "1.0.0",
      "uiConfig": {
        "objectTypes": {
          "__ACCOUNT__": {
            "properties": {
              "__NAME__": {},
              "address": {},
              "city": {},
              "country": {},
              "depId": {},
              "depName": {},
              "email": {},
              "empType": {},
              "firstName": {},
              "isManager": {},
              "jobCode": {},
              "lastName": {},
              "phone": {},
              "postalCode": {},
              "state": {},
              "status": {},
              "uid": {},
            },
          },
          "department": {
            "properties": {
              "__NAME__": {},
              "description": {},
              "name": {},
              "parent": {},
              "uid": {},
            },
          },
        },
      },
    },
  },
  "mapping": {
    "systemHrlite__account___managedAlpha_user": {
      "_id": "sync/systemHrlite__account___managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "expressionTree": {
            "all": [
              "frIndexedInteger1",
            ],
          },
          "file": "ui/correlateTreeToQueryFilter.js",
          "linkQualifier": "default",
          "mapping": "systemHrlite__account___managedAlpha_user",
          "type": "text/javascript",
        },
      ],
      "displayName": "systemHrlite__account___managedAlpha_user",
      "icon": null,
      "name": "systemHrlite__account___managedAlpha_user",
      "onCreate": {
        "globals": {},
        "source": "// Script has access to the following variables:
// sourceObject
// targetObject
// existingTargetObject
// linkQualifier
var givenName = source.firstName;
logger.info ("this is the givenName " + givenName);
var sn = source.lastName;
logger.info ("this is the sn " + sn);

/* first choice of username */
var checkuserName = givenName.substring(0,1).concat(sn).toLowerCase();
logger.info ("calculated checkuserName " + checkuserName);
/* if the userName is not found no need to go further */
var queryUsername = {
    _queryFilter: "/userName eq '" + checkuserName + "'"
};

var queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
if (queryResult.resultCount > 0) {
    /* second choice of username */
    checkuserName = givenName.substring(0,2).concat(sn).toLowerCase();
    logger.info ("calculated checkuserName " + checkuserName);
    queryUsername = {
        _queryFilter: "/userName eq '" + checkuserName + "'"
    };
    queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    /* while the userName is found try above for second then add time to end until found */
    while (queryResult.resultCount > 0) {
         /* timeadded to choice of username */
         var millis = String(Date.now());
         logger.info ("calculated checkuserName " + checkuserName);
         checkuserName = givenName.substring(0,1).concat(sn).concat(millis.substring(millis.length - 4)).toLowerCase();
         logger.info ("calculated checkuserName " + checkuserName);
         queryUsername = {
            _queryFilter: "/userName eq '" + checkuserName + "'"
        };
        queryResult = openidm.query("/managed/alpha_user",queryUsername,["*"]);
    }  
}
target.userName = checkuserName;
target.cn = checkuserName + " " + givenName + " " + sn;
target.mail =  "volker.scheuber+" + checkuserName+ "-volker-demo"+ "@forgerock.com"; 
target.password = 'Frdp-2010';
var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {_queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
//Mail domain is dependent on your AD domain name….
logger.info ("Final userName " + checkuserName);
// Role assignment scripts must always return targetObject, otherwise
// other scripts and code that occur downstream of your script will
// not work as expected.
",
        "type": "text/javascript",
      },
      "onUpdate": {
        "globals": {},
        "source": "var managerEmployeeNumber = source.manager;
var queryManagerEmployeeNumber = {
    _queryFilter: "/frIndexedInteger1 eq '" + managerEmployeeNumber + "'"
};
var queryResult = openidm.query("/managed/alpha_user",queryManagerEmployeeNumber,["*"]);
if (queryResult.resultCount > 0) {
target.manager = {"_ref":"managed/alpha_user/"+queryResult.result[0]._id,"_refProperties":{}}
}
",
        "type": "text/javascript",
      },
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS",
        },
        {
          "action": "EXCEPTION",
          "situation": "SOURCE_MISSING",
        },
        {
          "action": "CREATE",
          "situation": "MISSING",
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED",
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED",
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED",
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY",
        },
        {
          "action": "EXCEPTION",
          "situation": "TARGET_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED",
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE",
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED",
        },
        {
          "action": "UPDATE",
          "situation": "FOUND",
        },
        {
          "action": "CREATE",
          "situation": "ABSENT",
        },
      ],
      "properties": [
        {
          "source": "",
          "target": "frIndexedInteger1",
          "transform": {
            "source": "parseInt(source.__NAME__)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger2",
          "transform": {
            "source": "parseInt(source.status)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger3",
          "transform": {
            "source": "parseInt(source.depId)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger4",
          "transform": {
            "source": "parseInt(source.jobCode)",
            "type": "text/javascript",
          },
        },
        {
          "source": "",
          "target": "frIndexedInteger5",
          "transform": {
            "source": "parseInt(source.empType)",
            "type": "text/javascript",
          },
        },
        {
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "city",
          "target": "city",
        },
        {
          "source": "state",
          "target": "stateProvince",
        },
        {
          "source": "address",
          "target": "postalAddress",
        },
        {
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "source": "country",
          "target": "country",
        },
        {
          "source": "firstName",
          "target": "givenName",
        },
        {
          "source": "lastName",
          "target": "sn",
        },
        {
          "source": "isManager",
          "target": "frIndexedString4",
        },
        {
          "source": "externalMail",
          "target": "frIndexedString5",
        },
        {
          "source": "manager",
          "target": "frIndexedString3",
        },
        {
          "source": "",
          "target": "accountStatus",
          "transform": {
            "source": "(parseInt(source.status)==5)?"inactive":"active";",
            "type": "text/javascript",
          },
        },
      ],
      "runTargetPhase": true,
      "source": "system/HRLite/__ACCOUNT__",
      "syncAfter": [],
      "target": "managed/alpha_user",
      "taskThreads": 1,
    },
  },
  "meta": Any<Object>,
}
`;
