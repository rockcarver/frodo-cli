// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`frodo config import "frodo config import --default -CAD test/e2e/exports/all-separate/cloud" Import everything from directory "test/e2e/exports/all-separate/cloud", including default scripts. Clean old services 1`] = `
"Connected to https://openam-frodo-dev.forgeblocks.com/am [alpha] as service account Frodo-SA-1720799681233 [b672336b-41ef-428d-ae4a-e0c082875377]
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing config entities
  Error updating config entity endpoint/Test
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error updating config entity endpoint/testEndpoint2
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error importing services
  Error putting global full service configs
  Error putting global full service config CorsService
  Error deleting service 'CorsService' before import
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: The singleton resource cannot be deleted
  Error putting global full service config dashboard
  Error deleting service 'dashboard' before import
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: The singleton resource cannot be deleted
  Error importing scripts
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
  Error updating script
  HTTP client error
    Code: ERR_BAD_RESPONSE
    Status: 502
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config email
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Data validation failed for the attribute, Transport Type
  Error importing scripts
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config TNTPPingOneService
  Error putting descendent 'JC' of service 'TNTPPingOneService'
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Invalid config: Unable to add subConfig PingOneService
"
`;

exports[`frodo config import "frodo config import --file test/e2e/exports/all-separate/cloud/realm/root-alpha/script/mode.script.json" Import mode.script.json long with extracted scripts and no errors 1`] = `""`;

exports[`frodo config import "frodo config import --global --file test/e2e/exports/all-separate/classic/global/authenticationModules/authPushReg.authenticationModules.json --type classic" Fail to import authentication module due to it being read only. 1`] = `
"Connected to http://openam-frodo-dev.classic.com:8080/am [/] as user amAdmin
No imports were made
"
`;

exports[`frodo config import "frodo config import -AD test/e2e/exports/all-separate/cloud --include-active-values" Import everything with secret values from directory "test/e2e/exports/all-separate/cloud" 1`] = `
"Connected to https://openam-frodo-dev.forgeblocks.com/am [alpha] as service account Frodo-SA-1720799681233 [b672336b-41ef-428d-ae4a-e0c082875377]
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing config entities
  Error updating config entity endpoint/Test
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error updating config entity endpoint/testEndpoint2
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config email
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Data validation failed for the attribute, Transport Type
"
`;

exports[`frodo config import "frodo config import -AD test/e2e/exports/all-separate/cloud" Import everything from directory "test/e2e/exports/all-separate/cloud" 1`] = `
"Connected to https://openam-frodo-dev.forgeblocks.com/am [alpha] as service account Frodo-SA-1720799681233 [b672336b-41ef-428d-ae4a-e0c082875377]
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing config entities
  Error updating config entity endpoint/Test
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config email
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Data validation failed for the attribute, Transport Type
"
`;

exports[`frodo config import "frodo config import -AD test/e2e/exports/idm": should export all IDM config to a single file. 1`] = `
"Usage: frodo config import [options] [host] [realm] [username] [password]

Import full cloud configuration.

Arguments:
  host                                 AM base URL, e.g.:
                                       https://cdk.iam.example.com/am. To use a
                                       connection profile, just specify a
                                       unique substring.
  realm                                Realm. Specify realm as '/' for the root
                                       realm or 'realm' or '/parent/child'
                                       otherwise. (default: "alpha" for
                                       Identity Cloud tenants, "/" otherwise.)
  username                             Username to login with. Must be an admin
                                       user with appropriate rights to manage
                                       authentication journeys/trees.
  password                             Password.

Options:
  -a, --all                            Import all configuration from the single
                                       file -f. Ignored with -i.
  -A, --all-separate                   Import all configuration from separate
                                       (.json) files in the (working) directory
                                       -D. Ignored with -i or -a.
  -C, --clean                          Remove existing service(s) before
                                       importing.
  --curlirize                          Output all network calls in curl format.
  -d, --default                        Import all scripts including the default
                                       scripts.
  -D, --directory <directory>          Set the working directory.
  --debug                              Debug output during command execution.
                                       If specified, may or may not produce
                                       additional output helpful for
                                       troubleshooting.
  -f, --file <file>                    Name of the file to import. Ignored with
                                       -A. If included without -a, it will
                                       import the single entity within the
                                       file.
  --flush-cache                        Flush token cache.
  -g, --global                         Import global entity. Ignored with -a
                                       and -A.
  -h, --help                           Help
  --idm-host <idm-host>                IDM base URL, e.g.:
                                       https://cdk.idm.example.com/myidm. Use
                                       only if your IDM installation resides in
                                       a different domain and/or if the base
                                       path differs from the default
                                       "/openidm".
  --include-active-values              Import any secret values contained in
                                       the import file. By default, secret
                                       values are encrypted server-side in the
                                       environment they are exported from. Use
                                       --source <host url> to import a file
                                       exported from another environment than
                                       the one you are importing to.
  -k, --insecure                       Allow insecure connections when using
                                       SSL/TLS. Has no effect when using a
                                       network proxy for https
                                       (HTTPS_PROXY=http://<host>:<port>), in
                                       that case the proxy must provide this
                                       capability. (default: Don't allow
                                       insecure connections)
  --login-client-id <client-id>        Specify a custom OAuth2 client id to use
                                       a your own oauth2 client for IDM API
                                       calls in deployments of type "cloud" or
                                       "forgeops". Your custom client must be
                                       configured as a public client and allow
                                       the authorization code grant using the
                                       "openid fr:idm:*" scope. Use the
                                       "--redirect-uri" parameter if you have
                                       configured a custom redirect uri
                                       (default:
                                       "<host>/platform/appAuthHelperRedirect.html").
  --login-redirect-uri <redirect-uri>  Specify a custom redirect URI to use
                                       with your custom OAuth2 client (efault:
                                       "<host>/platform/appAuthHelperRedirect.html").
  -m, --type <type>                    Override auto-detected deployment type.
                                       Valid values for type:
                                       classic:  A classic Access
                                       Management-only deployment with custom
                                       layout and configuration.
                                       cloud:    A ForgeRock Identity Cloud
                                       environment.
                                       forgeops: A ForgeOps CDK or CDM
                                       deployment.
                                       The detected or provided deployment type
                                       controls certain behavior like obtaining
                                       an Identity Management admin token or
                                       not and whether to export/import
                                       referenced email templates or how to
                                       walk through the tenant admin login flow
                                       of Identity Cloud and handle MFA
                                       (choices: "classic", "cloud",
                                       "forgeops", "idm")
  --no-cache                           Disable token cache for this operation.
  --re-uuid-journeys                   Generate new UUIDs for all journey nodes
                                       during import. (default: off)
  --re-uuid-scripts                    Create new UUIDs for the scripts upon
                                       import. Use this to duplicate scripts or
                                       create a new versions of the same
                                       scripts. (default: off)
  --sa-id <sa-id>                      Service account id.
  --sa-jwk-file <file>                 File containing the JSON Web Key (JWK)
                                       associated with the the service account.
  --source <host url>                  Host URL of the environment which
                                       performed secret value encryption. The
                                       URL must resolve to an existing
                                       connection profile. Use this option to
                                       import a file that was exported from a
                                       different source environment than the
                                       one you are importing to.
  --verbose                            Verbose output during command execution.
                                       If specified, may or may not produce
                                       additional output.

Environment Variables:
  FRODO_HOST: AM base URL. Overridden by 'host' argument.
  FRODO_IDM_HOST: IDM base URL. Overridden by '--idm-host' option.
  FRODO_REALM: Realm. Overridden by 'realm' argument.
  FRODO_USERNAME: Username. Overridden by 'username' argument.
  FRODO_PASSWORD: Password. Overridden by 'password' argument.
  FRODO_LOGIN_CLIENT_ID: OAuth2 client id for IDM API calls. Overridden by '--login-client-id' option.
  FRODO_LOGIN_REDIRECT_URI: Redirect Uri for custom OAuth2 client id. Overridden by '--login-redirect-uri' option.
  FRODO_SA_ID: Service account uuid. Overridden by '--sa-id' option.
  FRODO_SA_JWK: Service account JWK. Overridden by '--sa-jwk-file' option but takes the actual JWK as a value, not a file name.
  FRODO_NO_CACHE: Disable token cache. Same as '--no-cache' option.
  FRODO_TOKEN_CACHE_PATH: Use this token cache file instead of '~/.frodo/TokenCache.json'.
  FRODO_CONNECTION_PROFILES_PATH: Use this connection profiles file instead of '~/.frodo/Connections.json'.
  FRODO_AUTHENTICATION_SERVICE: Name of a login journey to use.
  FRODO_DEBUG: Set to any value to enable debug output. Same as '--debug'.
  FRODO_MASTER_KEY_PATH: Use this master key file instead of '~/.frodo/masterkey.key' file.
  FRODO_MASTER_KEY: Use this master key instead of what's in '~/.frodo/masterkey.key'. Takes precedence over FRODO_MASTER_KEY_PATH.

How Frodo handles secrets:
  Frodo supports exporting and importing of ESV secret values. To leave stuartship of secret values with the cloud environment where they belong, frodo always encrypts values using either encryption keys from the source environment (default) or the target environment (--target parameter). Frodo never exports secrets in the clear.

Usage Examples:
  Restore global and active realm configuration including active secret values from a single file (Note: config export must have been performed using the --include-active-values option):
  $ frodo config import -a -f Alpha.everything.json --include-active-values matrix
  Restore global and active realm configuration including active secret values from separate files in a directory structure (Note: config export must have been performed using the --include-active-values option):
  $ frodo config import -A -D matrix-backup --include-active-values matrix
  Import global and active realm configuration including active secret values, wich were exported from another environment using the --include-active-values option but without using the --target parameter, therefore requiring the --source parameter on import:
  The --source parameter instructs frodo to decrypt the secret values during import using the source environment, which was used to encrypt them.
  Using the --source parameter, the source environment must be available at the time of import and the person performing the import must have a connection profile for the source environment.
  $ frodo config import -a -f Alpha.everything.json --include-active-values --source matrix zion

"
`;

exports[`frodo config import "frodo config import -AD test/e2e/exports/idm/A": should export all IDM config to a single file. 1`] = `
"Usage: frodo config import [options] [host] [realm] [username] [password]

Import full cloud configuration.

Arguments:
  host                                 AM base URL, e.g.:
                                       https://cdk.iam.example.com/am. To use a
                                       connection profile, just specify a
                                       unique substring.
  realm                                Realm. Specify realm as '/' for the root
                                       realm or 'realm' or '/parent/child'
                                       otherwise. (default: "alpha" for
                                       Identity Cloud tenants, "/" otherwise.)
  username                             Username to login with. Must be an admin
                                       user with appropriate rights to manage
                                       authentication journeys/trees.
  password                             Password.

Options:
  -a, --all                            Import all configuration from the single
                                       file -f. Ignored with -i.
  -A, --all-separate                   Import all configuration from separate
                                       (.json) files in the (working) directory
                                       -D. Ignored with -i or -a.
  -C, --clean                          Remove existing service(s) before
                                       importing.
  --curlirize                          Output all network calls in curl format.
  -d, --default                        Import all scripts including the default
                                       scripts.
  -D, --directory <directory>          Set the working directory.
  --debug                              Debug output during command execution.
                                       If specified, may or may not produce
                                       additional output helpful for
                                       troubleshooting.
  -f, --file <file>                    Name of the file to import. Ignored with
                                       -A. If included without -a, it will
                                       import the single entity within the
                                       file.
  --flush-cache                        Flush token cache.
  -g, --global                         Import global entity. Ignored with -a
                                       and -A.
  -h, --help                           Help
  --idm-host <idm-host>                IDM base URL, e.g.:
                                       https://cdk.idm.example.com/myidm. Use
                                       only if your IDM installation resides in
                                       a different domain and/or if the base
                                       path differs from the default
                                       "/openidm".
  --include-active-values              Import any secret values contained in
                                       the import file. By default, secret
                                       values are encrypted server-side in the
                                       environment they are exported from. Use
                                       --source <host url> to import a file
                                       exported from another environment than
                                       the one you are importing to.
  -k, --insecure                       Allow insecure connections when using
                                       SSL/TLS. Has no effect when using a
                                       network proxy for https
                                       (HTTPS_PROXY=http://<host>:<port>), in
                                       that case the proxy must provide this
                                       capability. (default: Don't allow
                                       insecure connections)
  --login-client-id <client-id>        Specify a custom OAuth2 client id to use
                                       a your own oauth2 client for IDM API
                                       calls in deployments of type "cloud" or
                                       "forgeops". Your custom client must be
                                       configured as a public client and allow
                                       the authorization code grant using the
                                       "openid fr:idm:*" scope. Use the
                                       "--redirect-uri" parameter if you have
                                       configured a custom redirect uri
                                       (default:
                                       "<host>/platform/appAuthHelperRedirect.html").
  --login-redirect-uri <redirect-uri>  Specify a custom redirect URI to use
                                       with your custom OAuth2 client (efault:
                                       "<host>/platform/appAuthHelperRedirect.html").
  -m, --type <type>                    Override auto-detected deployment type.
                                       Valid values for type:
                                       classic:  A classic Access
                                       Management-only deployment with custom
                                       layout and configuration.
                                       cloud:    A ForgeRock Identity Cloud
                                       environment.
                                       forgeops: A ForgeOps CDK or CDM
                                       deployment.
                                       The detected or provided deployment type
                                       controls certain behavior like obtaining
                                       an Identity Management admin token or
                                       not and whether to export/import
                                       referenced email templates or how to
                                       walk through the tenant admin login flow
                                       of Identity Cloud and handle MFA
                                       (choices: "classic", "cloud",
                                       "forgeops", "idm")
  --no-cache                           Disable token cache for this operation.
  --re-uuid-journeys                   Generate new UUIDs for all journey nodes
                                       during import. (default: off)
  --re-uuid-scripts                    Create new UUIDs for the scripts upon
                                       import. Use this to duplicate scripts or
                                       create a new versions of the same
                                       scripts. (default: off)
  --sa-id <sa-id>                      Service account id.
  --sa-jwk-file <file>                 File containing the JSON Web Key (JWK)
                                       associated with the the service account.
  --source <host url>                  Host URL of the environment which
                                       performed secret value encryption. The
                                       URL must resolve to an existing
                                       connection profile. Use this option to
                                       import a file that was exported from a
                                       different source environment than the
                                       one you are importing to.
  --verbose                            Verbose output during command execution.
                                       If specified, may or may not produce
                                       additional output.

Environment Variables:
  FRODO_HOST: AM base URL. Overridden by 'host' argument.
  FRODO_IDM_HOST: IDM base URL. Overridden by '--idm-host' option.
  FRODO_REALM: Realm. Overridden by 'realm' argument.
  FRODO_USERNAME: Username. Overridden by 'username' argument.
  FRODO_PASSWORD: Password. Overridden by 'password' argument.
  FRODO_LOGIN_CLIENT_ID: OAuth2 client id for IDM API calls. Overridden by '--login-client-id' option.
  FRODO_LOGIN_REDIRECT_URI: Redirect Uri for custom OAuth2 client id. Overridden by '--login-redirect-uri' option.
  FRODO_SA_ID: Service account uuid. Overridden by '--sa-id' option.
  FRODO_SA_JWK: Service account JWK. Overridden by '--sa-jwk-file' option but takes the actual JWK as a value, not a file name.
  FRODO_NO_CACHE: Disable token cache. Same as '--no-cache' option.
  FRODO_TOKEN_CACHE_PATH: Use this token cache file instead of '~/.frodo/TokenCache.json'.
  FRODO_CONNECTION_PROFILES_PATH: Use this connection profiles file instead of '~/.frodo/Connections.json'.
  FRODO_AUTHENTICATION_SERVICE: Name of a login journey to use.
  FRODO_DEBUG: Set to any value to enable debug output. Same as '--debug'.
  FRODO_MASTER_KEY_PATH: Use this master key file instead of '~/.frodo/masterkey.key' file.
  FRODO_MASTER_KEY: Use this master key instead of what's in '~/.frodo/masterkey.key'. Takes precedence over FRODO_MASTER_KEY_PATH.

How Frodo handles secrets:
  Frodo supports exporting and importing of ESV secret values. To leave stuartship of secret values with the cloud environment where they belong, frodo always encrypts values using either encryption keys from the source environment (default) or the target environment (--target parameter). Frodo never exports secrets in the clear.

Usage Examples:
  Restore global and active realm configuration including active secret values from a single file (Note: config export must have been performed using the --include-active-values option):
  $ frodo config import -a -f Alpha.everything.json --include-active-values matrix
  Restore global and active realm configuration including active secret values from separate files in a directory structure (Note: config export must have been performed using the --include-active-values option):
  $ frodo config import -A -D matrix-backup --include-active-values matrix
  Import global and active realm configuration including active secret values, wich were exported from another environment using the --include-active-values option but without using the --target parameter, therefore requiring the --source parameter on import:
  The --source parameter instructs frodo to decrypt the secret values during import using the source environment, which was used to encrypt them.
  Using the --source parameter, the source environment must be available at the time of import and the person performing the import must have a connection profile for the source environment.
  $ frodo config import -a -f Alpha.everything.json --include-active-values --source matrix zion

"
`;

exports[`frodo config import "frodo config import -AdD test/e2e/exports/all-separate/classic -m classic" Import everything from directory "test/e2e/exports/all-separate/classic" 1`] = `
"Connected to http://openam-frodo-dev.classic.com:8080/am [/] as user amAdmin
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing authentication settings
  Error updating authentication settings
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 404
    Reason: Not Found
    Message: Resource '' not found
"
`;

exports[`frodo config import "frodo config import -CAD test/e2e/exports/all-separate/cloud" Import everything from directory "test/e2e/exports/all-separate/cloud". Clean old services 1`] = `
"Connected to https://openam-frodo-dev.forgeblocks.com/am [alpha] as service account Frodo-SA-1720799681233 [b672336b-41ef-428d-ae4a-e0c082875377]
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing config entities
  Error updating config entity endpoint/Test
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error importing services
  Error putting global full service configs
  Error putting global full service config CorsService
  Error deleting service 'CorsService' before import
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: The singleton resource cannot be deleted
  Error putting global full service config dashboard
  Error deleting service 'dashboard' before import
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: The singleton resource cannot be deleted
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config email
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Data validation failed for the attribute, Transport Type
"
`;

exports[`frodo config import "frodo config import -aCf test/e2e/exports/all/all.cloud.json" Import everything from "all.cloud.json". Clean old services 1`] = `
"Connected to https://openam-frodo-dev.forgeblocks.com/am [alpha] as service account Frodo-SA-1720799681233 [b672336b-41ef-428d-ae4a-e0c082875377]
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing config entities
  Error updating config entity endpoint/Test
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error updating config entity endpoint/testEndpoint2
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error importing services
  Error putting global full service configs
  Error putting global full service config CorsService
  Error deleting service 'CorsService' before import
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: The singleton resource cannot be deleted
  Error putting global full service config dashboard
  Error deleting service 'dashboard' before import
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: The singleton resource cannot be deleted
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config email
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Data validation failed for the attribute, Transport Type
"
`;

exports[`frodo config import "frodo config import -adf test/e2e/exports/all/all.classic.json -m classic" Import everything from "all.classic.json", including default scripts. 1`] = `
"Connected to http://openam-frodo-dev.classic.com:8080/am [/] as user amAdmin
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing authentication settings
  Error updating authentication settings
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 404
    Reason: Not Found
    Message: Resource '' not found
"
`;

exports[`frodo config import "frodo config import -adf test/e2e/exports/all/all.cloud.json" Import everything from "all.cloud.json", including default scripts. 1`] = `
"Connected to https://openam-frodo-dev.forgeblocks.com/am [alpha] as service account Frodo-SA-1720799681233 [b672336b-41ef-428d-ae4a-e0c082875377]
- Resolving dependencies
✔ Resolved all dependencies.
- Resolving dependencies
✔ Resolved all dependencies.
Errors occurred during full config import
  Error importing config entities
  Error updating config entity endpoint/Test
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error updating config entity endpoint/testEndpoint2
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 401
    Reason: Unauthorized
    Message: Access Denied
  Error importing scripts
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
  Error importing services
  Error putting realm full service configs
  Error putting realm full service config email
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 400
    Reason: Bad Request
    Message: Data validation failed for the attribute, Transport Type
  Error importing scripts
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
  Error updating script
  HTTP client error
    Code: ERR_BAD_REQUEST
    Status: 403
    Reason: Forbidden
    Message: This operation is not available in PingOne Advanced Identity Cloud.
"
`;

exports[`frodo config import "frodo config import -af test/e2e/exports/idm/all.config.json": should import all IDM config to on-prem idm 1`] = `
"Usage: frodo config import [options] [host] [realm] [username] [password]

Import full cloud configuration.

Arguments:
  host                                 AM base URL, e.g.:
                                       https://cdk.iam.example.com/am. To use a
                                       connection profile, just specify a
                                       unique substring.
  realm                                Realm. Specify realm as '/' for the root
                                       realm or 'realm' or '/parent/child'
                                       otherwise. (default: "alpha" for
                                       Identity Cloud tenants, "/" otherwise.)
  username                             Username to login with. Must be an admin
                                       user with appropriate rights to manage
                                       authentication journeys/trees.
  password                             Password.

Options:
  -a, --all                            Import all configuration from the single
                                       file -f. Ignored with -i.
  -A, --all-separate                   Import all configuration from separate
                                       (.json) files in the (working) directory
                                       -D. Ignored with -i or -a.
  -C, --clean                          Remove existing service(s) before
                                       importing.
  --curlirize                          Output all network calls in curl format.
  -d, --default                        Import all scripts including the default
                                       scripts.
  -D, --directory <directory>          Set the working directory.
  --debug                              Debug output during command execution.
                                       If specified, may or may not produce
                                       additional output helpful for
                                       troubleshooting.
  -f, --file <file>                    Name of the file to import. Ignored with
                                       -A. If included without -a, it will
                                       import the single entity within the
                                       file.
  --flush-cache                        Flush token cache.
  -g, --global                         Import global entity. Ignored with -a
                                       and -A.
  -h, --help                           Help
  --idm-host <idm-host>                IDM base URL, e.g.:
                                       https://cdk.idm.example.com/myidm. Use
                                       only if your IDM installation resides in
                                       a different domain and/or if the base
                                       path differs from the default
                                       "/openidm".
  --include-active-values              Import any secret values contained in
                                       the import file. By default, secret
                                       values are encrypted server-side in the
                                       environment they are exported from. Use
                                       --source <host url> to import a file
                                       exported from another environment than
                                       the one you are importing to.
  -k, --insecure                       Allow insecure connections when using
                                       SSL/TLS. Has no effect when using a
                                       network proxy for https
                                       (HTTPS_PROXY=http://<host>:<port>), in
                                       that case the proxy must provide this
                                       capability. (default: Don't allow
                                       insecure connections)
  --login-client-id <client-id>        Specify a custom OAuth2 client id to use
                                       a your own oauth2 client for IDM API
                                       calls in deployments of type "cloud" or
                                       "forgeops". Your custom client must be
                                       configured as a public client and allow
                                       the authorization code grant using the
                                       "openid fr:idm:*" scope. Use the
                                       "--redirect-uri" parameter if you have
                                       configured a custom redirect uri
                                       (default:
                                       "<host>/platform/appAuthHelperRedirect.html").
  --login-redirect-uri <redirect-uri>  Specify a custom redirect URI to use
                                       with your custom OAuth2 client (efault:
                                       "<host>/platform/appAuthHelperRedirect.html").
  -m, --type <type>                    Override auto-detected deployment type.
                                       Valid values for type:
                                       classic:  A classic Access
                                       Management-only deployment with custom
                                       layout and configuration.
                                       cloud:    A ForgeRock Identity Cloud
                                       environment.
                                       forgeops: A ForgeOps CDK or CDM
                                       deployment.
                                       The detected or provided deployment type
                                       controls certain behavior like obtaining
                                       an Identity Management admin token or
                                       not and whether to export/import
                                       referenced email templates or how to
                                       walk through the tenant admin login flow
                                       of Identity Cloud and handle MFA
                                       (choices: "classic", "cloud",
                                       "forgeops", "idm")
  --no-cache                           Disable token cache for this operation.
  --re-uuid-journeys                   Generate new UUIDs for all journey nodes
                                       during import. (default: off)
  --re-uuid-scripts                    Create new UUIDs for the scripts upon
                                       import. Use this to duplicate scripts or
                                       create a new versions of the same
                                       scripts. (default: off)
  --sa-id <sa-id>                      Service account id.
  --sa-jwk-file <file>                 File containing the JSON Web Key (JWK)
                                       associated with the the service account.
  --source <host url>                  Host URL of the environment which
                                       performed secret value encryption. The
                                       URL must resolve to an existing
                                       connection profile. Use this option to
                                       import a file that was exported from a
                                       different source environment than the
                                       one you are importing to.
  --verbose                            Verbose output during command execution.
                                       If specified, may or may not produce
                                       additional output.

Environment Variables:
  FRODO_HOST: AM base URL. Overridden by 'host' argument.
  FRODO_IDM_HOST: IDM base URL. Overridden by '--idm-host' option.
  FRODO_REALM: Realm. Overridden by 'realm' argument.
  FRODO_USERNAME: Username. Overridden by 'username' argument.
  FRODO_PASSWORD: Password. Overridden by 'password' argument.
  FRODO_LOGIN_CLIENT_ID: OAuth2 client id for IDM API calls. Overridden by '--login-client-id' option.
  FRODO_LOGIN_REDIRECT_URI: Redirect Uri for custom OAuth2 client id. Overridden by '--login-redirect-uri' option.
  FRODO_SA_ID: Service account uuid. Overridden by '--sa-id' option.
  FRODO_SA_JWK: Service account JWK. Overridden by '--sa-jwk-file' option but takes the actual JWK as a value, not a file name.
  FRODO_NO_CACHE: Disable token cache. Same as '--no-cache' option.
  FRODO_TOKEN_CACHE_PATH: Use this token cache file instead of '~/.frodo/TokenCache.json'.
  FRODO_CONNECTION_PROFILES_PATH: Use this connection profiles file instead of '~/.frodo/Connections.json'.
  FRODO_AUTHENTICATION_SERVICE: Name of a login journey to use.
  FRODO_DEBUG: Set to any value to enable debug output. Same as '--debug'.
  FRODO_MASTER_KEY_PATH: Use this master key file instead of '~/.frodo/masterkey.key' file.
  FRODO_MASTER_KEY: Use this master key instead of what's in '~/.frodo/masterkey.key'. Takes precedence over FRODO_MASTER_KEY_PATH.

How Frodo handles secrets:
  Frodo supports exporting and importing of ESV secret values. To leave stuartship of secret values with the cloud environment where they belong, frodo always encrypts values using either encryption keys from the source environment (default) or the target environment (--target parameter). Frodo never exports secrets in the clear.

Usage Examples:
  Restore global and active realm configuration including active secret values from a single file (Note: config export must have been performed using the --include-active-values option):
  $ frodo config import -a -f Alpha.everything.json --include-active-values matrix
  Restore global and active realm configuration including active secret values from separate files in a directory structure (Note: config export must have been performed using the --include-active-values option):
  $ frodo config import -A -D matrix-backup --include-active-values matrix
  Import global and active realm configuration including active secret values, wich were exported from another environment using the --include-active-values option but without using the --target parameter, therefore requiring the --source parameter on import:
  The --source parameter instructs frodo to decrypt the secret values during import using the source environment, which was used to encrypt them.
  Using the --source parameter, the source environment must be available at the time of import and the person performing the import must have a connection profile for the source environment.
  $ frodo config import -a -f Alpha.everything.json --include-active-values --source matrix zion

"
`;

exports[`frodo config import "frodo config import -f test/e2e/exports/all-separate/classic/realm/root/webhookService/Cool-Webhook.webhookService.json -m classic" Import the webhook service with no errors 1`] = `""`;

exports[`frodo config import "frodo config import -gf test/e2e/exports/all-separate/classic/global/server/01.server.json -m classic" Import server 01 along with extracted properties and no errors 1`] = `""`;

exports[`frodo config import "frodo config import -gf test/e2e/exports/all-separate/cloud/global/sync/sync.idm.json" Import sync.idm.json along with extracted mappings and no errors 1`] = `""`;
