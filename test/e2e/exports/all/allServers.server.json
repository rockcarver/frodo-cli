{
  "defaultProperties": {
    "advanced": {
      "_id": "null/properties/advanced",
      "com.iplanet.am.buildDate": "2024-March-28 16:00",
      "com.iplanet.am.buildRevision": "89116d59a1ebe73ed1931dd3649adb7f217cd06b",
      "com.iplanet.am.buildVersion": "ForgeRock Access Management 7.5.0",
      "com.iplanet.am.cookie.c66Encode": true,
      "com.iplanet.am.daemons": "securid",
      "com.iplanet.am.directory.ssl.enabled": false,
      "com.iplanet.am.installdir": "%BASE_DIR%",
      "com.iplanet.am.jssproxy.SSLTrustHostList": "",
      "com.iplanet.am.jssproxy.checkSubjectAltName": false,
      "com.iplanet.am.jssproxy.resolveIPAddress": false,
      "com.iplanet.am.jssproxy.trustAllServerCerts": false,
      "com.iplanet.am.lbcookie.name": "amlbcookie",
      "com.iplanet.am.lbcookie.value": "00",
      "com.iplanet.am.logstatus": "ACTIVE",
      "com.iplanet.am.pcookie.name": "DProPCookie",
      "com.iplanet.am.profile.host": "%SERVER_HOST%",
      "com.iplanet.am.profile.port": "%SERVER_PORT%",
      "com.iplanet.am.serverMode": true,
      "com.iplanet.am.session.agentSessionIdleTime": "1440",
      "com.iplanet.am.session.client.polling.enable": false,
      "com.iplanet.am.session.client.polling.period": "180",
      "com.iplanet.am.session.httpSession.enabled": "true",
      "com.iplanet.am.version": "ForgeRock Access Management 7.5.0 Build 89116d59a1ebe73ed1931dd3649adb7f217cd06b (2024-March-28 16:00)",
      "com.iplanet.security.SSLSocketFactoryImpl": "com.sun.identity.shared.ldap.factory.JSSESocketFactory",
      "com.sun.am.event.notification.expire.time": "5",
      "com.sun.embedded.sync.servers": "on",
      "com.sun.identity.am.cookie.check": false,
      "com.sun.identity.auth.cookieName": "AMAuthCookie",
      "com.sun.identity.authentication.multiple.tabs.used": false,
      "com.sun.identity.authentication.setCookieToAllDomains": true,
      "com.sun.identity.authentication.special.users": "cn=dsameuser,ou=DSAME Users,%ROOT_SUFFIX%|cn=amService-UrlAccessAgent,ou=DSAME Users,%ROOT_SUFFIX%",
      "com.sun.identity.authentication.super.user": "uid=amAdmin,ou=People,%ROOT_SUFFIX%",
      "com.sun.identity.authentication.uniqueCookieName": "sunIdentityServerAuthNServer",
      "com.sun.identity.cookie.httponly": true,
      "com.sun.identity.cookie.samesite": "off",
      "com.sun.identity.enableUniqueSSOTokenCookie": false,
      "com.sun.identity.jss.donotInstallAtHighestPriority": true,
      "com.sun.identity.monitoring": "off",
      "com.sun.identity.monitoring.local.conn.server.url": "service:jmx:rmi://",
      "com.sun.identity.password.deploymentDescriptor": "%SERVER_URI%",
      "com.sun.identity.plugin.configuration.class": "@CONFIGURATION_PROVIDER_CLASS@",
      "com.sun.identity.plugin.datastore.class.default": "@DATASTORE_PROVIDER_CLASS@",
      "com.sun.identity.plugin.log.class": "@LOG_PROVIDER_CLASS@",
      "com.sun.identity.plugin.monitoring.agent.class": "@MONAGENT_PROVIDER_CLASS@",
      "com.sun.identity.plugin.monitoring.saml2.class": "@MONSAML2_PROVIDER_CLASS@",
      "com.sun.identity.plugin.session.class": "@SESSION_PROVIDER_CLASS@",
      "com.sun.identity.policy.Policy.policy_evaluation_weights": "10:10:10",
      "com.sun.identity.policy.resultsCacheMaxSize": "10000",
      "com.sun.identity.policy.resultsCacheResourceCap": "20",
      "com.sun.identity.saml.xmlsig.keyprovider.class": "@XMLSIG_KEY_PROVIDER@",
      "com.sun.identity.saml.xmlsig.passwordDecoder": "@PASSWORD_DECODER_CLASS@",
      "com.sun.identity.saml.xmlsig.signatureprovider.class": "@XML_SIGNATURE_PROVIDER@",
      "com.sun.identity.security.checkcaller": false,
      "com.sun.identity.server.fqdnMap[dnsfirst]": "dnsfirst",
      "com.sun.identity.server.fqdnMap[hello]": "hello",
      "com.sun.identity.server.fqdnMap[localhost]": "localhost",
      "com.sun.identity.server.fqdnMap[openam-frodo-dev.classic.com]": "openam-frodo-dev.classic.com",
      "com.sun.identity.server.fqdnMap[openam]": "openam",
      "com.sun.identity.server.fqdnMap[secondDNS]": "secondDNS",
      "com.sun.identity.session.repository.enableAttributeCompression": false,
      "com.sun.identity.session.repository.enableCompression": false,
      "com.sun.identity.session.repository.enableEncryption": false,
      "com.sun.identity.sm.cache.ttl": "30",
      "com.sun.identity.sm.cache.ttl.enable": false,
      "com.sun.identity.url.readTimeout": "30000",
      "com.sun.identity.webcontainer": "WEB_CONTAINER",
      "dynamic.datastore.creation.enabled": false,
      "openam.auth.destroy_session_after_upgrade": true,
      "openam.auth.distAuthCookieName": "AMDistAuthCookie",
      "openam.auth.session_property_upgrader": "org.forgerock.openam.authentication.service.DefaultSessionPropertyUpgrader",
      "openam.auth.version.header.enabled": false,
      "openam.authentication.ignore_goto_during_logout": false,
      "openam.cdm.default.charset": "UTF-8",
      "openam.forbidden.to.copy.headers": "connection",
      "openam.forbidden.to.copy.request.headers": "connection",
      "openam.oauth2.client.jwt.encryption.algorithm.allow.list": "RSA-OAEP,RSA-OAEP-256,ECDH-ES",
      "openam.oauth2.client.jwt.unreasonable.lifetime.limit.minutes": "30",
      "openam.retained.http.headers": "X-DSAMEVersion",
      "openam.retained.http.request.headers": "X-DSAMEVersion",
      "openam.serviceattributevalidator.classes.whitelist": "org.forgerock.openam.auth.nodes.validators.GreaterThanZeroValidator,org.forgerock.openam.auth.nodes.validators.HMACKeyLengthValidator,org.forgerock.openam.auth.nodes.validators.HmacSigningKeyValidator,org.forgerock.openam.auth.nodes.validators.PercentageValidator,org.forgerock.openam.auth.nodes.validators.QueryFilterValidator,org.forgerock.openam.auth.nodes.validators.SessionPropertyNameValidator,org.forgerock.openam.auth.nodes.validators.SessionPropertyValidator,org.forgerock.openam.auth.nodes.framework.validators.NodeValueValidator,org.forgerock.openam.audit.validation.PositiveIntegerValidator,org.forgerock.openam.authentication.modules.fr.oath.validators.AlphaNumericValidator,org.forgerock.openam.authentication.modules.fr.oath.validators.CodeLengthValidator,org.forgerock.openam.authentication.modules.persistentcookie.validation.SigningKeyValidator,com.sun.identity.common.configuration.DuplicateKeyMapValueValidator,com.sun.identity.common.configuration.AgentClientIpModeValueValidator,com.sun.identity.common.configuration.FilterModeValueValidator,com.sun.identity.common.configuration.GlobalMapValueValidator,com.sun.identity.common.configuration.ListValueValidator,com.sun.identity.common.configuration.MapValueValidator,com.sun.identity.common.configuration.ServerPropertyValidator,com.sun.identity.policy.ResourceComparatorValidator,com.sun.identity.sm.EmailValidator,com.sun.identity.sm.IPAddressValidator,com.sun.identity.sm.RequiredValueValidator,com.sun.identity.sm.ServerIDValidator,com.sun.identity.sm.SiteIDValidator,org.forgerock.openam.sm.validation.Base64EncodedBinaryValidator,org.forgerock.openam.sm.validation.BlankValueValidator,org.forgerock.openam.sm.validation.DurationValidator,org.forgerock.openam.sm.validation.EndpointValidator,org.forgerock.openam.sm.validation.HostnameValidator,org.forgerock.openam.sm.validation.PortValidator,org.forgerock.openam.sm.validation.SecretIdValidator,org.forgerock.openam.sm.validation.StatelessSessionSigningAlgorithmValidator,org.forgerock.openam.sm.validation.StringMapValidator,org.forgerock.openam.sm.validation.URLValidator,org.forgerock.openam.selfservice.config.KeyAliasValidator,org.forgerock.openam.sm.validation.UniqueIndexedValuesValidator,org.forgerock.openam.webhook.HttpHeaderValidator,org.forgerock.oauth2.core.ClientRedirectUriValidator",
      "openam.session.case.sensitive.uuid": false,
      "org.forgerock.allow.http.client.debug": false,
      "org.forgerock.am.auth.chains.authindexuser.strict": true,
      "org.forgerock.am.auth.node.otp.inSharedState": false,
      "org.forgerock.am.auth.trees.authenticate.identified.identity": true,
      "org.forgerock.openam.audit.additionalSuccessStatusCodesEnabled": true,
      "org.forgerock.openam.audit.identity.activity.events.blacklist": "AM-ACCESS-ATTEMPT,AM-IDENTITY-CHANGE,AM-GROUP-CHANGE",
      "org.forgerock.openam.auth.transactionauth.returnErrorOnAuthFailure": false,
      "org.forgerock.openam.authLevel.excludeRequiredOrRequisite": false,
      "org.forgerock.openam.authentication.forceAuth.enabled": false,
      "org.forgerock.openam.console.autocomplete.enabled": true,
      "org.forgerock.openam.core.resource.lookup.cache.enabled": true,
      "org.forgerock.openam.core.sms.placeholder_api_enabled": "OFF",
      "org.forgerock.openam.devices.recovery.use_insecure_storage": false,
      "org.forgerock.openam.encryption.key.digest": "SHA1",
      "org.forgerock.openam.encryption.key.iterations": "10000",
      "org.forgerock.openam.encryption.key.size": "128",
      "org.forgerock.openam.httpclienthandler.system.clients.connection.timeout": "10 seconds",
      "org.forgerock.openam.httpclienthandler.system.clients.max.connections": "64",
      "org.forgerock.openam.httpclienthandler.system.clients.pool.ttl": "-1",
      "org.forgerock.openam.httpclienthandler.system.clients.response.timeout": "10 seconds",
      "org.forgerock.openam.httpclienthandler.system.clients.retry.failed.requests.enabled": true,
      "org.forgerock.openam.httpclienthandler.system.clients.reuse.connections.enabled": true,
      "org.forgerock.openam.httpclienthandler.system.nonProxyHosts": "localhost,127.*,[::1],0.0.0.0,[::0]",
      "org.forgerock.openam.httpclienthandler.system.proxy.enabled": false,
      "org.forgerock.openam.httpclienthandler.system.proxy.password": null,
      "org.forgerock.openam.httpclienthandler.system.proxy.uri": "",
      "org.forgerock.openam.httpclienthandler.system.proxy.username": "",
      "org.forgerock.openam.idm.attribute.names.lower.case": false,
      "org.forgerock.openam.idrepo.ldapv3.passwordpolicy.allowDiagnosticMessage": false,
      "org.forgerock.openam.idrepo.ldapv3.proxyauth.passwordreset.adminRequest": "isAdminPasswordChangeRequest",
      "org.forgerock.openam.introspect.token.query.param.allowed": false,
      "org.forgerock.openam.ldap.dncache.expire.time": "0",
      "org.forgerock.openam.ldap.heartbeat.timeout": "10",
      "org.forgerock.openam.ldap.keepalive.search.base": "",
      "org.forgerock.openam.ldap.keepalive.search.filter": "(objectClass=*)",
      "org.forgerock.openam.ldap.secure.protocol.version": "TLSv1.3,TLSv1.2",
      "org.forgerock.openam.notifications.agents.enabled": true,
      "org.forgerock.openam.oauth2.checkIssuerForIdTokenInfo": true,
      "org.forgerock.openam.radius.server.context.cache.size": "5000",
      "org.forgerock.openam.redirecturlvalidator.maxUrlLength": "2000",
      "org.forgerock.openam.request.max.bytes.entity.size": "1048576",
      "org.forgerock.openam.saml2.authenticatorlookup.skewAllowance": "60",
      "org.forgerock.openam.scripting.maxinterpreterstackdepth": "10000",
      "org.forgerock.openam.secrets.special.user.passwords.format": "ENCRYPTED_PLAIN",
      "org.forgerock.openam.secrets.special.user.secret.refresh.seconds": "900",
      "org.forgerock.openam.session.service.persistence.deleteAsynchronously": true,
      "org.forgerock.openam.session.stateless.encryption.method": "A128CBC-HS256",
      "org.forgerock.openam.session.stateless.rsa.padding": "RSA-OAEP-256",
      "org.forgerock.openam.session.stateless.signing.allownone": false,
      "org.forgerock.openam.showServletTraceInBrowser": false,
      "org.forgerock.openam.slf4j.enableTraceInMessage": false,
      "org.forgerock.openam.smtp.system.connect.timeout": "10000",
      "org.forgerock.openam.smtp.system.socket.read.timeout": "10000",
      "org.forgerock.openam.smtp.system.socket.write.timeout": "10000",
      "org.forgerock.openam.sso.providers.list": "org.forgerock.openidconnect.ssoprovider.OpenIdConnectSSOProvider",
      "org.forgerock.openam.timerpool.shutdown.retry.interval": "15000",
      "org.forgerock.openam.timerpool.shutdown.retry.limit": "3",
      "org.forgerock.openam.timerpool.shutdown.retry.multiplier": "1.5",
      "org.forgerock.openam.trees.consumedstatedata.cache.size": "15",
      "org.forgerock.openam.trees.ids.cache.size": "50",
      "org.forgerock.openam.url.connectTimeout": "1000",
      "org.forgerock.openam.xui.user.session.validation.enabled": true,
      "org.forgerock.openidconnect.ssoprovider.maxcachesize": "5000",
      "org.forgerock.security.entitlement.enforce.realm": true,
      "org.forgerock.security.oauth2.enforce.sub.claim.uniqueness": true,
      "org.forgerock.services.cts.store.reaper.enabled": true,
      "org.forgerock.services.cts.store.ttlsupport.enabled": false,
      "org.forgerock.services.cts.store.ttlsupport.exclusionlist": "",
      "org.forgerock.services.default.store.max.connections": "",
      "org.forgerock.services.default.store.min.connections": "",
      "org.forgerock.services.openid.request.object.lifespan": "120000",
      "securidHelper.ports": "58943"
    },
    "cts": {
      "_id": "null/properties/cts",
      "amconfig.org.forgerock.services.cts.store.common.section": {
        "org.forgerock.services.cts.store.location": "default",
        "org.forgerock.services.cts.store.max.connections": "100",
        "org.forgerock.services.cts.store.page.size": "0",
        "org.forgerock.services.cts.store.root.suffix": "",
        "org.forgerock.services.cts.store.vlv.page.size": "1000"
      },
      "amconfig.org.forgerock.services.cts.store.external.section": {
        "org.forgerock.services.cts.store.directory.name": "",
        "org.forgerock.services.cts.store.heartbeat": "10",
        "org.forgerock.services.cts.store.loginid": "",
        "org.forgerock.services.cts.store.mtls.enabled": "",
        "org.forgerock.services.cts.store.password": null,
        "org.forgerock.services.cts.store.ssl.enabled": "",
        "org.forgerock.services.cts.store.starttls.enabled": ""
      }
    },
    "general": {
      "_id": "null/properties/general",
      "amconfig.header.debug": {
        "com.iplanet.services.debug.directory": "%BASE_DIR%/var/debug",
        "com.iplanet.services.debug.level": "off",
        "com.sun.services.debug.mergeall": "on"
      },
      "amconfig.header.installdir": {
        "com.iplanet.am.locale": "en_US",
        "com.iplanet.am.util.xml.validating": "off",
        "com.iplanet.services.configpath": "%BASE_DIR%",
        "com.sun.identity.client.notification.url": "%SERVER_PROTO%://%SERVER_HOST%:%SERVER_PORT%/%SERVER_URI%/notificationservice"
      },
      "amconfig.header.mailserver": {
        "com.iplanet.am.smtphost": "localhost",
        "com.iplanet.am.smtpport": "25"
      }
    },
    "sdk": {
      "_id": "null/properties/sdk",
      "amconfig.header.cachingreplica": {
        "com.iplanet.am.sdk.cache.maxSize": "10000"
      },
      "amconfig.header.datastore": {
        "com.sun.identity.sm.enableDataStoreNotification": false,
        "com.sun.identity.sm.notification.threadpool.size": "1"
      },
      "amconfig.header.eventservice": {
        "com.iplanet.am.event.connection.delay.between.retries": "3000",
        "com.iplanet.am.event.connection.ldap.error.codes.retries": "80,81,91",
        "com.iplanet.am.event.connection.num.retries": "3",
        "com.sun.am.event.connection.disable.list": "aci,um,sm"
      },
      "amconfig.header.ldapconnection": {
        "com.iplanet.am.ldap.connection.delay.between.retries": "1000",
        "com.iplanet.am.ldap.connection.ldap.error.codes.retries": "80,81,91",
        "com.iplanet.am.ldap.connection.num.retries": "3"
      },
      "amconfig.header.sdktimetoliveconfig": {
        "com.iplanet.am.sdk.cache.entry.default.expire.time": "30",
        "com.iplanet.am.sdk.cache.entry.expire.enabled": false,
        "com.iplanet.am.sdk.cache.entry.user.expire.time": "15"
      }
    },
    "security": {
      "_id": "null/properties/security",
      "amconfig.header.cookie": {
        "com.iplanet.am.cookie.encode": false,
        "com.iplanet.am.cookie.name": "iPlanetDirectoryPro",
        "com.iplanet.am.cookie.secure": false
      },
      "amconfig.header.crlcache": {
        "com.sun.identity.crl.cache.directory.host": "",
        "com.sun.identity.crl.cache.directory.mtlsenabled": false,
        "com.sun.identity.crl.cache.directory.password": null,
        "com.sun.identity.crl.cache.directory.port": "",
        "com.sun.identity.crl.cache.directory.searchattr": "",
        "com.sun.identity.crl.cache.directory.searchlocs": "",
        "com.sun.identity.crl.cache.directory.ssl": false,
        "com.sun.identity.crl.cache.directory.user": ""
      },
      "amconfig.header.deserialisationwhitelist": {
        "openam.deserialisation.classes.whitelist": "com.iplanet.dpro.session.DNOrIPAddressListTokenRestriction,com.sun.identity.common.CaseInsensitiveHashMap,com.sun.identity.common.CaseInsensitiveHashSet,com.sun.identity.common.CaseInsensitiveKey,com.sun.identity.console.base.model.SMSubConfig,com.sun.identity.console.session.model.SMSessionData,com.sun.identity.console.user.model.UMUserPasswordResetOptionsData,com.sun.identity.shared.datastruct.OrderedSet,com.sun.xml.bind.util.ListImpl,com.sun.xml.bind.util.ProxyListImpl,java.lang.Boolean,java.lang.Integer,java.lang.Number,java.lang.StringBuffer,java.net.InetAddress,java.security.cert.Certificate,java.security.cert.Certificate$CertificateRep,java.util.ArrayList,java.util.Collections$EmptyMap,java.util.Collections$EmptySet,java.util.Collections$SingletonList,java.util.HashMap,java.util.HashSet,java.util.LinkedHashSet,java.util.Locale,org.forgerock.openam.authentication.service.protocol.RemoteCookie,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteSession,org.forgerock.openam.dpro.session.NoOpTokenRestriction,org.forgerock.openam.dpro.session.ProofOfPossessionTokenRestriction"
      },
      "amconfig.header.encryption": {
        "am.encryption.pwd": "@AM_ENC_PWD@",
        "am.encryption.secret.enabled": false,
        "am.encryption.secret.keystoreType": "JCEKS",
        "com.iplanet.security.SecureRandomFactoryImpl": "com.iplanet.am.util.SecureRandomFactoryImpl",
        "com.iplanet.security.encryptor": "com.iplanet.services.util.JCEEncryption"
      },
      "amconfig.header.ocsp.check": {
        "com.sun.identity.authentication.ocsp.responder.nickname": "",
        "com.sun.identity.authentication.ocsp.responder.url": "",
        "com.sun.identity.authentication.ocspCheck": false
      },
      "amconfig.header.securitykey": {
        "com.sun.identity.saml.xmlsig.certalias": "test",
        "com.sun.identity.saml.xmlsig.keypass": "%BASE_DIR%/security/secrets/default/.keypass",
        "com.sun.identity.saml.xmlsig.keystore": "%BASE_DIR%/security/keystores/keystore.jceks",
        "com.sun.identity.saml.xmlsig.storepass": "%BASE_DIR%/security/secrets/default/.storepass",
        "com.sun.identity.saml.xmlsig.storetype": "JCEKS"
      },
      "amconfig.header.validation": {
        "com.iplanet.am.clientIPCheckEnabled": false,
        "com.iplanet.services.comm.server.pllrequest.maxContentLength": "16384"
      }
    },
    "session": {
      "_id": "null/properties/session",
      "amconfig.header.sessionlogging": {
        "com.iplanet.am.stats.interval": "60",
        "com.iplanet.services.stats.directory": "%BASE_DIR%/var/stats",
        "com.iplanet.services.stats.state": "file",
        "com.sun.am.session.enableHostLookUp": false
      },
      "amconfig.header.sessionnotification": {
        "com.iplanet.am.notification.threadpool.size": "10",
        "com.iplanet.am.notification.threadpool.threshold": "5000"
      },
      "amconfig.header.sessionthresholds": {
        "com.iplanet.am.session.invalidsessionmaxtime": "3",
        "org.forgerock.openam.session.service.access.persistence.caching.maxsize": "5000"
      },
      "amconfig.header.sessionvalidation": {
        "com.sun.am.session.caseInsensitiveDN": true
      }
    },
    "uma": {
      "_id": "null/properties/uma",
      "amconfig.org.forgerock.services.resourcesets.store.common.section": {
        "org.forgerock.services.resourcesets.store.location": "default",
        "org.forgerock.services.resourcesets.store.max.connections": "10",
        "org.forgerock.services.resourcesets.store.root.suffix": ""
      },
      "amconfig.org.forgerock.services.resourcesets.store.external.section": {
        "org.forgerock.services.resourcesets.store.directory.name": "",
        "org.forgerock.services.resourcesets.store.heartbeat": "10",
        "org.forgerock.services.resourcesets.store.loginid": "",
        "org.forgerock.services.resourcesets.store.mtls.enabled": "",
        "org.forgerock.services.resourcesets.store.password": null,
        "org.forgerock.services.resourcesets.store.ssl.enabled": "",
        "org.forgerock.services.resourcesets.store.starttls.enabled": ""
      },
      "amconfig.org.forgerock.services.uma.labels.store.common.section": {
        "org.forgerock.services.uma.labels.store.location": "default",
        "org.forgerock.services.uma.labels.store.max.connections": "2",
        "org.forgerock.services.uma.labels.store.root.suffix": ""
      },
      "amconfig.org.forgerock.services.uma.labels.store.external.section": {
        "org.forgerock.services.uma.labels.store.directory.name": "",
        "org.forgerock.services.uma.labels.store.heartbeat": "10",
        "org.forgerock.services.uma.labels.store.loginid": "",
        "org.forgerock.services.uma.labels.store.mtls.enabled": "",
        "org.forgerock.services.uma.labels.store.password": null,
        "org.forgerock.services.uma.labels.store.ssl.enabled": "",
        "org.forgerock.services.uma.labels.store.starttls.enabled": ""
      },
      "amconfig.org.forgerock.services.uma.pendingrequests.store.common.section": {
        "org.forgerock.services.uma.pendingrequests.store.location": "default",
        "org.forgerock.services.uma.pendingrequests.store.max.connections": "10",
        "org.forgerock.services.uma.pendingrequests.store.root.suffix": ""
      },
      "amconfig.org.forgerock.services.uma.pendingrequests.store.external.section": {
        "org.forgerock.services.uma.pendingrequests.store.directory.name": "",
        "org.forgerock.services.uma.pendingrequests.store.heartbeat": "10",
        "org.forgerock.services.uma.pendingrequests.store.loginid": "",
        "org.forgerock.services.uma.pendingrequests.store.mtls.enabled": "",
        "org.forgerock.services.uma.pendingrequests.store.password": null,
        "org.forgerock.services.uma.pendingrequests.store.ssl.enabled": "",
        "org.forgerock.services.uma.pendingrequests.store.starttls.enabled": ""
      },
      "amconfig.org.forgerock.services.umaaudit.store.common.section": {
        "org.forgerock.services.umaaudit.store.location": "default",
        "org.forgerock.services.umaaudit.store.max.connections": "10",
        "org.forgerock.services.umaaudit.store.root.suffix": ""
      },
      "amconfig.org.forgerock.services.umaaudit.store.external.section": {
        "org.forgerock.services.umaaudit.store.directory.name": "",
        "org.forgerock.services.umaaudit.store.heartbeat": "10",
        "org.forgerock.services.umaaudit.store.loginid": "",
        "org.forgerock.services.umaaudit.store.mtls.enabled": "",
        "org.forgerock.services.umaaudit.store.password": null,
        "org.forgerock.services.umaaudit.store.ssl.enabled": "",
        "org.forgerock.services.umaaudit.store.starttls.enabled": ""
      }
    }
  },
  "server": {
    "01": {
      "_id": "01",
      "properties": {
        "advanced": {
          "_id": "01/properties/advanced",
          "bootstrap.file": "/home/prestonhales/.openamcfg/AMConfig_usr_local_tomcat_webapps_am_",
          "com.iplanet.am.lbcookie.value": "01",
          "com.iplanet.am.serverMode": true,
          "com.iplanet.security.SSLSocketFactoryImpl": "com.sun.identity.shared.ldap.factory.JSSESocketFactory",
          "com.sun.embedded.replicationport": "",
          "com.sun.embedded.sync.servers": "on",
          "com.sun.identity.common.systemtimerpool.size": "3",
          "com.sun.identity.sm.sms_object_class_name": "com.sun.identity.sm.SmsWrapperObject",
          "com.sun.identity.urlconnection.useCache": false,
          "opensso.protocol.handler.pkgs": "",
          "org.forgerock.embedded.dsadminport": "4444"
        },
        "cts": {
          "_id": "01/properties/cts",
          "amconfig.org.forgerock.services.cts.store.common.section": {
            "org.forgerock.services.cts.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.cts.store.max.connections": {
              "inherited": true,
              "value": "100"
            },
            "org.forgerock.services.cts.store.page.size": {
              "inherited": true,
              "value": "0"
            },
            "org.forgerock.services.cts.store.root.suffix": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.vlv.page.size": {
              "inherited": true,
              "value": "1000"
            }
          },
          "amconfig.org.forgerock.services.cts.store.external.section": {
            "org.forgerock.services.cts.store.affinity.enabled": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.cts.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.cts.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.cts.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          }
        },
        "directoryConfiguration": {
          "_id": "01/properties/directoryConfiguration",
          "directoryConfiguration": {
            "bindDn": "cn=Directory Manager",
            "bindPassword": null,
            "maxConnectionPool": 10,
            "minConnectionPool": 1,
            "mtlsAlias": "",
            "mtlsEnabled": false,
            "mtlsKeyPasswordFile": "",
            "mtlsKeyStoreFile": "",
            "mtlsKeyStorePasswordFile": "",
            "mtlsKeyStoreType": null
          },
          "directoryServers": [
            {
              "connectionType": "SSL",
              "hostName": "localhost",
              "portNumber": "50636",
              "serverName": "Server1"
            }
          ]
        },
        "general": {
          "_id": "01/properties/general",
          "amconfig.header.debug": {
            "com.iplanet.services.debug.directory": {
              "inherited": true,
              "value": "%BASE_DIR%/var/debug"
            },
            "com.iplanet.services.debug.level": {
              "inherited": true,
              "value": "off"
            },
            "com.sun.services.debug.mergeall": {
              "inherited": true,
              "value": "on"
            }
          },
          "amconfig.header.installdir": {
            "com.iplanet.am.locale": {
              "inherited": false,
              "value": "en_US"
            },
            "com.iplanet.am.util.xml.validating": {
              "inherited": true,
              "value": "off"
            },
            "com.iplanet.services.configpath": {
              "inherited": false,
              "value": "/home/prestonhales/am"
            },
            "com.sun.identity.client.notification.url": {
              "inherited": true,
              "value": "%SERVER_PROTO%://%SERVER_HOST%:%SERVER_PORT%/%SERVER_URI%/notificationservice"
            }
          },
          "amconfig.header.mailserver": {
            "com.iplanet.am.smtphost": {
              "inherited": true,
              "value": "localhost"
            },
            "com.iplanet.am.smtpport": {
              "inherited": true,
              "value": "25"
            }
          },
          "amconfig.header.site": {
            "singleChoiceSite": "[Empty]"
          }
        },
        "sdk": {
          "_id": "01/properties/sdk",
          "amconfig.header.cachingreplica": {
            "com.iplanet.am.sdk.cache.maxSize": {
              "inherited": true,
              "value": "10000"
            }
          },
          "amconfig.header.datastore": {
            "com.sun.identity.sm.enableDataStoreNotification": {
              "inherited": false,
              "value": true
            },
            "com.sun.identity.sm.notification.threadpool.size": {
              "inherited": true,
              "value": "1"
            }
          },
          "amconfig.header.eventservice": {
            "com.iplanet.am.event.connection.delay.between.retries": {
              "inherited": true,
              "value": "3000"
            },
            "com.iplanet.am.event.connection.ldap.error.codes.retries": {
              "inherited": true,
              "value": "80,81,91"
            },
            "com.iplanet.am.event.connection.num.retries": {
              "inherited": true,
              "value": "3"
            },
            "com.sun.am.event.connection.disable.list": {
              "inherited": false,
              "value": "aci,um"
            }
          },
          "amconfig.header.ldapconnection": {
            "com.iplanet.am.ldap.connection.delay.between.retries": {
              "inherited": true,
              "value": "1000"
            },
            "com.iplanet.am.ldap.connection.ldap.error.codes.retries": {
              "inherited": false,
              "value": "80,81,91"
            },
            "com.iplanet.am.ldap.connection.num.retries": {
              "inherited": true,
              "value": "3"
            }
          },
          "amconfig.header.sdktimetoliveconfig": {
            "com.iplanet.am.sdk.cache.entry.default.expire.time": {
              "inherited": true,
              "value": "30"
            },
            "com.iplanet.am.sdk.cache.entry.expire.enabled": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.am.sdk.cache.entry.user.expire.time": {
              "inherited": true,
              "value": "15"
            }
          }
        },
        "security": {
          "_id": "01/properties/security",
          "amconfig.header.cookie": {
            "com.iplanet.am.cookie.encode": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.am.cookie.name": {
              "inherited": true,
              "value": "iPlanetDirectoryPro"
            },
            "com.iplanet.am.cookie.secure": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.crlcache": {
            "com.sun.identity.crl.cache.directory.host": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.mtlsenabled": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.crl.cache.directory.password": {
              "inherited": true,
              "value": null
            },
            "com.sun.identity.crl.cache.directory.port": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.searchattr": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.searchlocs": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.ssl": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.crl.cache.directory.user": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.header.deserialisationwhitelist": {
            "openam.deserialisation.classes.whitelist": {
              "inherited": true,
              "value": "com.iplanet.dpro.session.DNOrIPAddressListTokenRestriction,com.sun.identity.common.CaseInsensitiveHashMap,com.sun.identity.common.CaseInsensitiveHashSet,com.sun.identity.common.CaseInsensitiveKey,com.sun.identity.console.base.model.SMSubConfig,com.sun.identity.console.session.model.SMSessionData,com.sun.identity.console.user.model.UMUserPasswordResetOptionsData,com.sun.identity.shared.datastruct.OrderedSet,com.sun.xml.bind.util.ListImpl,com.sun.xml.bind.util.ProxyListImpl,java.lang.Boolean,java.lang.Integer,java.lang.Number,java.lang.StringBuffer,java.net.InetAddress,java.security.cert.Certificate,java.security.cert.Certificate$CertificateRep,java.util.ArrayList,java.util.Collections$EmptyMap,java.util.Collections$EmptySet,java.util.Collections$SingletonList,java.util.HashMap,java.util.HashSet,java.util.LinkedHashSet,java.util.Locale,org.forgerock.openam.authentication.service.protocol.RemoteCookie,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteSession,org.forgerock.openam.dpro.session.NoOpTokenRestriction,org.forgerock.openam.dpro.session.ProofOfPossessionTokenRestriction"
            }
          },
          "amconfig.header.encryption": {
            "am.encryption.pwd": {
              "inherited": false,
              "value": "efSYcwIhr7uKH30rgciGTVTFzb63LhYu"
            },
            "am.encryption.secret.alias": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.enabled": {
              "inherited": true,
              "value": false
            },
            "am.encryption.secret.keyPass": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystoreFile": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystorePass": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystoreType": {
              "inherited": true,
              "value": "JCEKS"
            },
            "com.iplanet.security.SecureRandomFactoryImpl": {
              "inherited": true,
              "value": "com.iplanet.am.util.SecureRandomFactoryImpl"
            },
            "com.iplanet.security.encryptor": {
              "inherited": true,
              "value": "com.iplanet.services.util.JCEEncryption"
            }
          },
          "amconfig.header.ocsp.check": {
            "com.sun.identity.authentication.ocsp.responder.nickname": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.authentication.ocsp.responder.url": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.authentication.ocspCheck": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.securitykey": {
            "com.sun.identity.saml.xmlsig.certalias": {
              "inherited": true,
              "value": "test"
            },
            "com.sun.identity.saml.xmlsig.keypass": {
              "inherited": true,
              "value": "%BASE_DIR%/security/secrets/default/.keypass"
            },
            "com.sun.identity.saml.xmlsig.keystore": {
              "inherited": true,
              "value": "%BASE_DIR%/security/keystores/keystore.jceks"
            },
            "com.sun.identity.saml.xmlsig.storepass": {
              "inherited": true,
              "value": "%BASE_DIR%/security/secrets/default/.storepass"
            },
            "com.sun.identity.saml.xmlsig.storetype": {
              "inherited": true,
              "value": "JCEKS"
            }
          },
          "amconfig.header.validation": {
            "com.iplanet.am.clientIPCheckEnabled": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.services.comm.server.pllrequest.maxContentLength": {
              "inherited": true,
              "value": "16384"
            }
          }
        },
        "session": {
          "_id": "01/properties/session",
          "amconfig.header.sessionlogging": {
            "com.iplanet.am.stats.interval": {
              "inherited": true,
              "value": "60"
            },
            "com.iplanet.services.stats.directory": {
              "inherited": true,
              "value": "%BASE_DIR%/var/stats"
            },
            "com.iplanet.services.stats.state": {
              "inherited": true,
              "value": "file"
            },
            "com.sun.am.session.enableHostLookUp": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.sessionnotification": {
            "com.iplanet.am.notification.threadpool.size": {
              "inherited": true,
              "value": "10"
            },
            "com.iplanet.am.notification.threadpool.threshold": {
              "inherited": true,
              "value": "5000"
            }
          },
          "amconfig.header.sessionthresholds": {
            "com.iplanet.am.session.invalidsessionmaxtime": {
              "inherited": true,
              "value": "3"
            },
            "org.forgerock.openam.session.service.access.persistence.caching.maxsize": {
              "inherited": true,
              "value": "5000"
            }
          },
          "amconfig.header.sessionvalidation": {
            "com.sun.am.session.caseInsensitiveDN": {
              "inherited": true,
              "value": true
            }
          }
        },
        "uma": {
          "_id": "01/properties/uma",
          "amconfig.org.forgerock.services.resourcesets.store.common.section": {
            "org.forgerock.services.resourcesets.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.resourcesets.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.resourcesets.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.resourcesets.store.external.section": {
            "org.forgerock.services.resourcesets.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.resourcesets.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.resourcesets.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.labels.store.common.section": {
            "org.forgerock.services.uma.labels.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.uma.labels.store.max.connections": {
              "inherited": true,
              "value": "2"
            },
            "org.forgerock.services.uma.labels.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.labels.store.external.section": {
            "org.forgerock.services.uma.labels.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.labels.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.uma.labels.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.pendingrequests.store.common.section": {
            "org.forgerock.services.uma.pendingrequests.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.uma.pendingrequests.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.pendingrequests.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.pendingrequests.store.external.section": {
            "org.forgerock.services.uma.pendingrequests.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.pendingrequests.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.uma.pendingrequests.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.umaaudit.store.common.section": {
            "org.forgerock.services.umaaudit.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.umaaudit.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.umaaudit.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.umaaudit.store.external.section": {
            "org.forgerock.services.umaaudit.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.umaaudit.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.umaaudit.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          }
        }
      },
      "siteName": null,
      "url": "http://localhost:8080/am"
    },
    "03": {
      "_id": "03",
      "properties": {
        "advanced": {
          "_id": "03/properties/advanced",
          "com.iplanet.am.lbcookie.value": "03"
        },
        "cts": {
          "_id": "03/properties/cts",
          "amconfig.org.forgerock.services.cts.store.common.section": {
            "org.forgerock.services.cts.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.cts.store.max.connections": {
              "inherited": true,
              "value": "100"
            },
            "org.forgerock.services.cts.store.page.size": {
              "inherited": true,
              "value": "0"
            },
            "org.forgerock.services.cts.store.root.suffix": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.vlv.page.size": {
              "inherited": true,
              "value": "1000"
            }
          },
          "amconfig.org.forgerock.services.cts.store.external.section": {
            "org.forgerock.services.cts.store.affinity.enabled": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.cts.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.cts.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.cts.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          }
        },
        "directoryConfiguration": {
          "_id": "03/properties/directoryConfiguration",
          "directoryConfiguration": {
            "bindDn": "cn=Directory Manager",
            "bindPassword": null,
            "maxConnectionPool": 10,
            "minConnectionPool": 1,
            "mtlsAlias": "",
            "mtlsEnabled": false,
            "mtlsKeyPasswordFile": "",
            "mtlsKeyStoreFile": "",
            "mtlsKeyStorePasswordFile": "",
            "mtlsKeyStoreType": null
          },
          "directoryServers": [
            {
              "connectionType": "SSL",
              "hostName": "localhost",
              "portNumber": "50636",
              "serverName": "Server1"
            }
          ]
        },
        "general": {
          "_id": "03/properties/general",
          "amconfig.header.debug": {
            "com.iplanet.services.debug.directory": {
              "inherited": true,
              "value": "%BASE_DIR%/var/debug"
            },
            "com.iplanet.services.debug.level": {
              "inherited": true,
              "value": "off"
            },
            "com.sun.services.debug.mergeall": {
              "inherited": true,
              "value": "on"
            }
          },
          "amconfig.header.installdir": {
            "com.iplanet.am.locale": {
              "inherited": true,
              "value": "en_US"
            },
            "com.iplanet.am.util.xml.validating": {
              "inherited": true,
              "value": "off"
            },
            "com.iplanet.services.configpath": {
              "inherited": true,
              "value": "%BASE_DIR%"
            },
            "com.sun.identity.client.notification.url": {
              "inherited": true,
              "value": "%SERVER_PROTO%://%SERVER_HOST%:%SERVER_PORT%/%SERVER_URI%/notificationservice"
            }
          },
          "amconfig.header.mailserver": {
            "com.iplanet.am.smtphost": {
              "inherited": true,
              "value": "localhost"
            },
            "com.iplanet.am.smtpport": {
              "inherited": true,
              "value": "25"
            }
          },
          "amconfig.header.site": {
            "singleChoiceSite": "testsite"
          }
        },
        "sdk": {
          "_id": "03/properties/sdk",
          "amconfig.header.cachingreplica": {
            "com.iplanet.am.sdk.cache.maxSize": {
              "inherited": true,
              "value": "10000"
            }
          },
          "amconfig.header.datastore": {
            "com.sun.identity.sm.enableDataStoreNotification": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.sm.notification.threadpool.size": {
              "inherited": true,
              "value": "1"
            }
          },
          "amconfig.header.eventservice": {
            "com.iplanet.am.event.connection.delay.between.retries": {
              "inherited": true,
              "value": "3000"
            },
            "com.iplanet.am.event.connection.ldap.error.codes.retries": {
              "inherited": true,
              "value": "80,81,91"
            },
            "com.iplanet.am.event.connection.num.retries": {
              "inherited": true,
              "value": "3"
            },
            "com.sun.am.event.connection.disable.list": {
              "inherited": true,
              "value": "aci,um,sm"
            }
          },
          "amconfig.header.ldapconnection": {
            "com.iplanet.am.ldap.connection.delay.between.retries": {
              "inherited": true,
              "value": "1000"
            },
            "com.iplanet.am.ldap.connection.ldap.error.codes.retries": {
              "inherited": true,
              "value": "80,81,91"
            },
            "com.iplanet.am.ldap.connection.num.retries": {
              "inherited": true,
              "value": "3"
            }
          },
          "amconfig.header.sdktimetoliveconfig": {
            "com.iplanet.am.sdk.cache.entry.default.expire.time": {
              "inherited": true,
              "value": "30"
            },
            "com.iplanet.am.sdk.cache.entry.expire.enabled": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.am.sdk.cache.entry.user.expire.time": {
              "inherited": true,
              "value": "15"
            }
          }
        },
        "security": {
          "_id": "03/properties/security",
          "amconfig.header.cookie": {
            "com.iplanet.am.cookie.encode": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.am.cookie.name": {
              "inherited": true,
              "value": "iPlanetDirectoryPro"
            },
            "com.iplanet.am.cookie.secure": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.crlcache": {
            "com.sun.identity.crl.cache.directory.host": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.mtlsenabled": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.crl.cache.directory.password": {
              "inherited": true,
              "value": null
            },
            "com.sun.identity.crl.cache.directory.port": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.searchattr": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.searchlocs": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.ssl": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.crl.cache.directory.user": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.header.deserialisationwhitelist": {
            "openam.deserialisation.classes.whitelist": {
              "inherited": true,
              "value": "com.iplanet.dpro.session.DNOrIPAddressListTokenRestriction,com.sun.identity.common.CaseInsensitiveHashMap,com.sun.identity.common.CaseInsensitiveHashSet,com.sun.identity.common.CaseInsensitiveKey,com.sun.identity.console.base.model.SMSubConfig,com.sun.identity.console.session.model.SMSessionData,com.sun.identity.console.user.model.UMUserPasswordResetOptionsData,com.sun.identity.shared.datastruct.OrderedSet,com.sun.xml.bind.util.ListImpl,com.sun.xml.bind.util.ProxyListImpl,java.lang.Boolean,java.lang.Integer,java.lang.Number,java.lang.StringBuffer,java.net.InetAddress,java.security.cert.Certificate,java.security.cert.Certificate$CertificateRep,java.util.ArrayList,java.util.Collections$EmptyMap,java.util.Collections$EmptySet,java.util.Collections$SingletonList,java.util.HashMap,java.util.HashSet,java.util.LinkedHashSet,java.util.Locale,org.forgerock.openam.authentication.service.protocol.RemoteCookie,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteSession,org.forgerock.openam.dpro.session.NoOpTokenRestriction,org.forgerock.openam.dpro.session.ProofOfPossessionTokenRestriction"
            }
          },
          "amconfig.header.encryption": {
            "am.encryption.pwd": {
              "inherited": true,
              "value": "@AM_ENC_PWD@"
            },
            "am.encryption.secret.alias": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.enabled": {
              "inherited": true,
              "value": false
            },
            "am.encryption.secret.keyPass": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystoreFile": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystorePass": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystoreType": {
              "inherited": true,
              "value": "JCEKS"
            },
            "com.iplanet.security.SecureRandomFactoryImpl": {
              "inherited": true,
              "value": "com.iplanet.am.util.SecureRandomFactoryImpl"
            },
            "com.iplanet.security.encryptor": {
              "inherited": true,
              "value": "com.iplanet.services.util.JCEEncryption"
            }
          },
          "amconfig.header.ocsp.check": {
            "com.sun.identity.authentication.ocsp.responder.nickname": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.authentication.ocsp.responder.url": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.authentication.ocspCheck": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.securitykey": {
            "com.sun.identity.saml.xmlsig.certalias": {
              "inherited": true,
              "value": "test"
            },
            "com.sun.identity.saml.xmlsig.keypass": {
              "inherited": true,
              "value": "%BASE_DIR%/security/secrets/default/.keypass"
            },
            "com.sun.identity.saml.xmlsig.keystore": {
              "inherited": true,
              "value": "%BASE_DIR%/security/keystores/keystore.jceks"
            },
            "com.sun.identity.saml.xmlsig.storepass": {
              "inherited": true,
              "value": "%BASE_DIR%/security/secrets/default/.storepass"
            },
            "com.sun.identity.saml.xmlsig.storetype": {
              "inherited": true,
              "value": "JCEKS"
            }
          },
          "amconfig.header.validation": {
            "com.iplanet.am.clientIPCheckEnabled": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.services.comm.server.pllrequest.maxContentLength": {
              "inherited": true,
              "value": "16384"
            }
          }
        },
        "session": {
          "_id": "03/properties/session",
          "amconfig.header.sessionlogging": {
            "com.iplanet.am.stats.interval": {
              "inherited": true,
              "value": "60"
            },
            "com.iplanet.services.stats.directory": {
              "inherited": true,
              "value": "%BASE_DIR%/var/stats"
            },
            "com.iplanet.services.stats.state": {
              "inherited": true,
              "value": "file"
            },
            "com.sun.am.session.enableHostLookUp": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.sessionnotification": {
            "com.iplanet.am.notification.threadpool.size": {
              "inherited": true,
              "value": "10"
            },
            "com.iplanet.am.notification.threadpool.threshold": {
              "inherited": true,
              "value": "5000"
            }
          },
          "amconfig.header.sessionthresholds": {
            "com.iplanet.am.session.invalidsessionmaxtime": {
              "inherited": true,
              "value": "3"
            },
            "org.forgerock.openam.session.service.access.persistence.caching.maxsize": {
              "inherited": true,
              "value": "5000"
            }
          },
          "amconfig.header.sessionvalidation": {
            "com.sun.am.session.caseInsensitiveDN": {
              "inherited": true,
              "value": true
            }
          }
        },
        "uma": {
          "_id": "03/properties/uma",
          "amconfig.org.forgerock.services.resourcesets.store.common.section": {
            "org.forgerock.services.resourcesets.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.resourcesets.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.resourcesets.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.resourcesets.store.external.section": {
            "org.forgerock.services.resourcesets.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.resourcesets.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.resourcesets.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.labels.store.common.section": {
            "org.forgerock.services.uma.labels.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.uma.labels.store.max.connections": {
              "inherited": true,
              "value": "2"
            },
            "org.forgerock.services.uma.labels.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.labels.store.external.section": {
            "org.forgerock.services.uma.labels.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.labels.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.uma.labels.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.pendingrequests.store.common.section": {
            "org.forgerock.services.uma.pendingrequests.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.uma.pendingrequests.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.pendingrequests.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.pendingrequests.store.external.section": {
            "org.forgerock.services.uma.pendingrequests.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.pendingrequests.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.uma.pendingrequests.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.umaaudit.store.common.section": {
            "org.forgerock.services.umaaudit.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.umaaudit.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.umaaudit.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.umaaudit.store.external.section": {
            "org.forgerock.services.umaaudit.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.umaaudit.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.umaaudit.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          }
        }
      },
      "siteName": "testsite",
      "url": "http://localhost:8081/am"
    },
    "04": {
      "_id": "04",
      "properties": {
        "advanced": {
          "_id": "04/properties/advanced",
          "com.iplanet.am.lbcookie.value": "04"
        },
        "cts": {
          "_id": "04/properties/cts",
          "amconfig.org.forgerock.services.cts.store.common.section": {
            "org.forgerock.services.cts.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.cts.store.max.connections": {
              "inherited": true,
              "value": "100"
            },
            "org.forgerock.services.cts.store.page.size": {
              "inherited": true,
              "value": "0"
            },
            "org.forgerock.services.cts.store.root.suffix": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.vlv.page.size": {
              "inherited": true,
              "value": "1000"
            }
          },
          "amconfig.org.forgerock.services.cts.store.external.section": {
            "org.forgerock.services.cts.store.affinity.enabled": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.cts.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.cts.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.cts.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.cts.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          }
        },
        "directoryConfiguration": {
          "_id": "04/properties/directoryConfiguration",
          "directoryConfiguration": {
            "bindDn": "cn=Directory Manager",
            "bindPassword": null,
            "maxConnectionPool": 10,
            "minConnectionPool": 1,
            "mtlsAlias": "",
            "mtlsEnabled": false,
            "mtlsKeyPasswordFile": "",
            "mtlsKeyStoreFile": "",
            "mtlsKeyStorePasswordFile": "",
            "mtlsKeyStoreType": null
          },
          "directoryServers": [
            {
              "connectionType": "SSL",
              "hostName": "localhost",
              "portNumber": "50636",
              "serverName": "Server1"
            }
          ]
        },
        "general": {
          "_id": "04/properties/general",
          "amconfig.header.debug": {
            "com.iplanet.services.debug.directory": {
              "inherited": true,
              "value": "%BASE_DIR%/var/debug"
            },
            "com.iplanet.services.debug.level": {
              "inherited": true,
              "value": "off"
            },
            "com.sun.services.debug.mergeall": {
              "inherited": true,
              "value": "on"
            }
          },
          "amconfig.header.installdir": {
            "com.iplanet.am.locale": {
              "inherited": true,
              "value": "en_US"
            },
            "com.iplanet.am.util.xml.validating": {
              "inherited": true,
              "value": "off"
            },
            "com.iplanet.services.configpath": {
              "inherited": true,
              "value": "%BASE_DIR%"
            },
            "com.sun.identity.client.notification.url": {
              "inherited": true,
              "value": "%SERVER_PROTO%://%SERVER_HOST%:%SERVER_PORT%/%SERVER_URI%/notificationservice"
            }
          },
          "amconfig.header.mailserver": {
            "com.iplanet.am.smtphost": {
              "inherited": true,
              "value": "localhost"
            },
            "com.iplanet.am.smtpport": {
              "inherited": true,
              "value": "25"
            }
          },
          "amconfig.header.site": {
            "singleChoiceSite": "[Empty]"
          }
        },
        "sdk": {
          "_id": "04/properties/sdk",
          "amconfig.header.cachingreplica": {
            "com.iplanet.am.sdk.cache.maxSize": {
              "inherited": true,
              "value": "10000"
            }
          },
          "amconfig.header.datastore": {
            "com.sun.identity.sm.enableDataStoreNotification": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.sm.notification.threadpool.size": {
              "inherited": true,
              "value": "1"
            }
          },
          "amconfig.header.eventservice": {
            "com.iplanet.am.event.connection.delay.between.retries": {
              "inherited": true,
              "value": "3000"
            },
            "com.iplanet.am.event.connection.ldap.error.codes.retries": {
              "inherited": true,
              "value": "80,81,91"
            },
            "com.iplanet.am.event.connection.num.retries": {
              "inherited": true,
              "value": "3"
            },
            "com.sun.am.event.connection.disable.list": {
              "inherited": true,
              "value": "aci,um,sm"
            }
          },
          "amconfig.header.ldapconnection": {
            "com.iplanet.am.ldap.connection.delay.between.retries": {
              "inherited": true,
              "value": "1000"
            },
            "com.iplanet.am.ldap.connection.ldap.error.codes.retries": {
              "inherited": true,
              "value": "80,81,91"
            },
            "com.iplanet.am.ldap.connection.num.retries": {
              "inherited": true,
              "value": "3"
            }
          },
          "amconfig.header.sdktimetoliveconfig": {
            "com.iplanet.am.sdk.cache.entry.default.expire.time": {
              "inherited": true,
              "value": "30"
            },
            "com.iplanet.am.sdk.cache.entry.expire.enabled": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.am.sdk.cache.entry.user.expire.time": {
              "inherited": true,
              "value": "15"
            }
          }
        },
        "security": {
          "_id": "04/properties/security",
          "amconfig.header.cookie": {
            "com.iplanet.am.cookie.encode": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.am.cookie.name": {
              "inherited": true,
              "value": "iPlanetDirectoryPro"
            },
            "com.iplanet.am.cookie.secure": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.crlcache": {
            "com.sun.identity.crl.cache.directory.host": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.mtlsenabled": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.crl.cache.directory.password": {
              "inherited": true,
              "value": null
            },
            "com.sun.identity.crl.cache.directory.port": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.searchattr": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.searchlocs": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.crl.cache.directory.ssl": {
              "inherited": true,
              "value": false
            },
            "com.sun.identity.crl.cache.directory.user": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.header.deserialisationwhitelist": {
            "openam.deserialisation.classes.whitelist": {
              "inherited": true,
              "value": "com.iplanet.dpro.session.DNOrIPAddressListTokenRestriction,com.sun.identity.common.CaseInsensitiveHashMap,com.sun.identity.common.CaseInsensitiveHashSet,com.sun.identity.common.CaseInsensitiveKey,com.sun.identity.console.base.model.SMSubConfig,com.sun.identity.console.session.model.SMSessionData,com.sun.identity.console.user.model.UMUserPasswordResetOptionsData,com.sun.identity.shared.datastruct.OrderedSet,com.sun.xml.bind.util.ListImpl,com.sun.xml.bind.util.ProxyListImpl,java.lang.Boolean,java.lang.Integer,java.lang.Number,java.lang.StringBuffer,java.net.InetAddress,java.security.cert.Certificate,java.security.cert.Certificate$CertificateRep,java.util.ArrayList,java.util.Collections$EmptyMap,java.util.Collections$EmptySet,java.util.Collections$SingletonList,java.util.HashMap,java.util.HashSet,java.util.LinkedHashSet,java.util.Locale,org.forgerock.openam.authentication.service.protocol.RemoteCookie,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteHttpServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteServletRequest,org.forgerock.openam.authentication.service.protocol.RemoteServletResponse,org.forgerock.openam.authentication.service.protocol.RemoteSession,org.forgerock.openam.dpro.session.NoOpTokenRestriction,org.forgerock.openam.dpro.session.ProofOfPossessionTokenRestriction"
            }
          },
          "amconfig.header.encryption": {
            "am.encryption.pwd": {
              "inherited": true,
              "value": "@AM_ENC_PWD@"
            },
            "am.encryption.secret.alias": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.enabled": {
              "inherited": true,
              "value": false
            },
            "am.encryption.secret.keyPass": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystoreFile": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystorePass": {
              "inherited": true,
              "value": null
            },
            "am.encryption.secret.keystoreType": {
              "inherited": true,
              "value": "JCEKS"
            },
            "com.iplanet.security.SecureRandomFactoryImpl": {
              "inherited": true,
              "value": "com.iplanet.am.util.SecureRandomFactoryImpl"
            },
            "com.iplanet.security.encryptor": {
              "inherited": true,
              "value": "com.iplanet.services.util.JCEEncryption"
            }
          },
          "amconfig.header.ocsp.check": {
            "com.sun.identity.authentication.ocsp.responder.nickname": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.authentication.ocsp.responder.url": {
              "inherited": true,
              "value": ""
            },
            "com.sun.identity.authentication.ocspCheck": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.securitykey": {
            "com.sun.identity.saml.xmlsig.certalias": {
              "inherited": true,
              "value": "test"
            },
            "com.sun.identity.saml.xmlsig.keypass": {
              "inherited": true,
              "value": "%BASE_DIR%/security/secrets/default/.keypass"
            },
            "com.sun.identity.saml.xmlsig.keystore": {
              "inherited": true,
              "value": "%BASE_DIR%/security/keystores/keystore.jceks"
            },
            "com.sun.identity.saml.xmlsig.storepass": {
              "inherited": true,
              "value": "%BASE_DIR%/security/secrets/default/.storepass"
            },
            "com.sun.identity.saml.xmlsig.storetype": {
              "inherited": true,
              "value": "JCEKS"
            }
          },
          "amconfig.header.validation": {
            "com.iplanet.am.clientIPCheckEnabled": {
              "inherited": true,
              "value": false
            },
            "com.iplanet.services.comm.server.pllrequest.maxContentLength": {
              "inherited": true,
              "value": "16384"
            }
          }
        },
        "session": {
          "_id": "04/properties/session",
          "amconfig.header.sessionlogging": {
            "com.iplanet.am.stats.interval": {
              "inherited": true,
              "value": "60"
            },
            "com.iplanet.services.stats.directory": {
              "inherited": true,
              "value": "%BASE_DIR%/var/stats"
            },
            "com.iplanet.services.stats.state": {
              "inherited": true,
              "value": "file"
            },
            "com.sun.am.session.enableHostLookUp": {
              "inherited": true,
              "value": false
            }
          },
          "amconfig.header.sessionnotification": {
            "com.iplanet.am.notification.threadpool.size": {
              "inherited": true,
              "value": "10"
            },
            "com.iplanet.am.notification.threadpool.threshold": {
              "inherited": true,
              "value": "5000"
            }
          },
          "amconfig.header.sessionthresholds": {
            "com.iplanet.am.session.invalidsessionmaxtime": {
              "inherited": true,
              "value": "3"
            },
            "org.forgerock.openam.session.service.access.persistence.caching.maxsize": {
              "inherited": true,
              "value": "5000"
            }
          },
          "amconfig.header.sessionvalidation": {
            "com.sun.am.session.caseInsensitiveDN": {
              "inherited": true,
              "value": true
            }
          }
        },
        "uma": {
          "_id": "04/properties/uma",
          "amconfig.org.forgerock.services.resourcesets.store.common.section": {
            "org.forgerock.services.resourcesets.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.resourcesets.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.resourcesets.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.resourcesets.store.external.section": {
            "org.forgerock.services.resourcesets.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.resourcesets.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.resourcesets.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.resourcesets.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.labels.store.common.section": {
            "org.forgerock.services.uma.labels.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.uma.labels.store.max.connections": {
              "inherited": true,
              "value": "2"
            },
            "org.forgerock.services.uma.labels.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.labels.store.external.section": {
            "org.forgerock.services.uma.labels.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.labels.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.uma.labels.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.labels.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.pendingrequests.store.common.section": {
            "org.forgerock.services.uma.pendingrequests.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.uma.pendingrequests.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.pendingrequests.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.uma.pendingrequests.store.external.section": {
            "org.forgerock.services.uma.pendingrequests.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.uma.pendingrequests.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.uma.pendingrequests.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.uma.pendingrequests.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.umaaudit.store.common.section": {
            "org.forgerock.services.umaaudit.store.location": {
              "inherited": true,
              "value": "default"
            },
            "org.forgerock.services.umaaudit.store.max.connections": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.umaaudit.store.root.suffix": {
              "inherited": true,
              "value": ""
            }
          },
          "amconfig.org.forgerock.services.umaaudit.store.external.section": {
            "org.forgerock.services.umaaudit.store.directory.name": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.heartbeat": {
              "inherited": true,
              "value": "10"
            },
            "org.forgerock.services.umaaudit.store.loginid": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.mtls.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.password": {
              "inherited": true,
              "value": null
            },
            "org.forgerock.services.umaaudit.store.ssl.enabled": {
              "inherited": true,
              "value": ""
            },
            "org.forgerock.services.umaaudit.store.starttls.enabled": {
              "inherited": true,
              "value": ""
            }
          }
        }
      },
      "siteName": null,
      "url": "http://localhost:8082/am"
    }
  }
}
