{
  "mapping": {
    "mapping/managedAlpha_assignment_managedBravo_assignment": {
      "_id": "mapping/managedAlpha_assignment_managedBravo_assignment",
      "consentRequired": false,
      "displayName": "managedAlpha_assignment_managedBravo_assignment",
      "icon": null,
      "name": "managedAlpha_assignment_managedBravo_assignment",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT"
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE"
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY"
        },
        {
          "action": "ASYNC",
          "situation": "MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED"
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED"
        }
      ],
      "properties": [],
      "source": "managed/alpha_assignment",
      "target": "managed/bravo_assignment"
    },
    "mapping/managedAlpha_user_systemAzureUser": {
      "_id": "mapping/managedAlpha_user_systemAzureUser",
      "consentRequired": false,
      "defaultSourceFields": [
        "*",
        "assignments"
      ],
      "defaultTargetFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__"
      ],
      "displayName": "managedAlpha_user_systemAzureUser",
      "icon": null,
      "name": "managedAlpha_user_systemAzureUser",
      "optimizeAssignmentSync": true,
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED"
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED"
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY"
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE"
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND"
        },
        {
          "action": "CREATE",
          "situation": "ABSENT"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT"
        },
        {
          "action": "INCORPORATE_CHANGES",
          "situation": "TARGET_CHANGED"
        }
      ],
      "properties": [
        {
          "source": "mail",
          "target": "mail"
        },
        {
          "source": "givenName",
          "target": "givenName"
        },
        {
          "source": "sn",
          "target": "surname"
        },
        {
          "source": "",
          "target": "displayName",
          "transform": {
            "source": "source.givenName+\" \"+source.sn",
            "type": "text/javascript"
          }
        },
        {
          "source": "",
          "target": "mailNickname",
          "transform": {
            "source": "source.givenName[0].toLowerCase()+source.sn.toLowerCase()",
            "type": "text/javascript"
          }
        },
        {
          "source": "",
          "target": "accountEnabled",
          "transform": {
            "source": "true",
            "type": "text/javascript"
          }
        },
        {
          "condition": {
            "globals": {},
            "source": "(typeof oldTarget === 'undefined' || oldTarget === null)",
            "type": "text/javascript"
          },
          "source": "",
          "target": "__PASSWORD__",
          "transform": {
            "source": "\"!@#$%\"[Math.floor(Math.random()*5)] + Math.random().toString(36).slice(2, 13).toUpperCase()+Math.random().toString(36).slice(2,13)",
            "type": "text/javascript"
          }
        }
      ],
      "queuedSync": {
        "enabled": true,
        "maxRetries": 0,
        "pollingInterval": 10000
      },
      "runTargetPhase": false,
      "source": "managed/alpha_user",
      "sourceCondition": "/source/effectiveApplications[_id eq \"0f357b7e-6c54-4351-a094-43916877d7e5\"] or /source/effectiveAssignments[(mapping eq \"managedAlpha_user_systemAzureUser\" and type eq \"__ENTITLEMENT__\")]",
      "sourceQuery": {
        "_queryFilter": "effectiveApplications[_id eq \"0f357b7e-6c54-4351-a094-43916877d7e5\"] or lastSync/managedAlpha_user_systemAzureUser pr or /source/effectiveAssignments[(mapping eq \"managedAlpha_user_systemAzureUser\" and type eq \"__ENTITLEMENT__\")]"
      },
      "target": "system/Azure/User"
    },
    "mapping/managedBravo_group_managedBravo_group": {
      "_id": "mapping/managedBravo_group_managedBravo_group",
      "consentRequired": false,
      "displayName": "managedBravo_group_managedBravo_group",
      "icon": null,
      "name": "managedBravo_group_managedBravo_group",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT"
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE"
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY"
        },
        {
          "action": "ASYNC",
          "situation": "MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED"
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED"
        }
      ],
      "properties": [],
      "source": "managed/bravo_group",
      "target": "managed/bravo_group"
    },
    "mapping/managedBravo_user_managedBravo_user0": {
      "_id": "mapping/managedBravo_user_managedBravo_user0",
      "consentRequired": false,
      "displayName": "managedBravo_user_managedBravo_user0",
      "icon": null,
      "name": "managedBravo_user_managedBravo_user0",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "ABSENT"
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE"
        },
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "ASYNC",
          "situation": "CONFIRMED"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY"
        },
        {
          "action": "ASYNC",
          "situation": "MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED"
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED"
        }
      ],
      "properties": [],
      "source": "managed/bravo_user",
      "target": "managed/bravo_user"
    },
    "mapping/mapping12": {
      "_id": "mapping/mapping12",
      "consentRequired": false,
      "displayName": "mapping12",
      "linkQualifiers": [],
      "name": "mapping12",
      "policies": [],
      "properties": [],
      "source": "managed/bravo_user",
      "syncAfter": [],
      "target": "managed/bravo_user"
    },
    "mapping/systemAzureDirectoryrole_managedAlpha_assignment": {
      "_id": "mapping/systemAzureDirectoryrole_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureDirectoryrole_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureDirectoryrole_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "CREATE",
          "situation": "MISSING"
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED"
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED"
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY"
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE"
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED"
        },
        {
          "action": "LINK",
          "situation": "FOUND"
        },
        {
          "action": "CREATE",
          "situation": "ABSENT"
        }
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type"
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== \"undefined\" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript"
          }
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping"
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== \"undefined\" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript"
          }
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[\n  {\n    'name': '__roles__',\n    'value': [source]\n  }\n]",
            "type": "text/javascript"
          }
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_directoryRole_"
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript"
          }
        }
      ],
      "source": "system/Azure/directoryRole",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq \"managedAlpha_user_systemAzureUser\" and attributes[name eq \"__roles__\"]"
      }
    },
    "mapping/systemAzureServiceplan_managedAlpha_assignment": {
      "_id": "mapping/systemAzureServiceplan_managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzureServiceplan_managedAlpha_assignment",
      "icon": null,
      "name": "systemAzureServiceplan_managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "CREATE",
          "situation": "MISSING"
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED"
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED"
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY"
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE"
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED"
        },
        {
          "action": "LINK",
          "situation": "FOUND"
        },
        {
          "action": "CREATE",
          "situation": "ABSENT"
        }
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type"
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== \"undefined\" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript"
          }
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping"
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.servicePlanName !== \"undefined\" && source.servicePlanName !== null) ? source.servicePlanName : source._id",
            "type": "text/javascript"
          }
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[\n  {\n    'name': '__servicePlanIds__',\n    'value': [source]\n  }\n]",
            "type": "text/javascript"
          }
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure_servicePlan_"
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript"
          }
        }
      ],
      "source": "system/Azure/servicePlan",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq \"managedAlpha_user_systemAzureUser\" and attributes[name eq \"__servicePlanIds__\"]"
      }
    },
    "mapping/systemAzureUser_managedAlpha_user": {
      "_id": "mapping/systemAzureUser_managedAlpha_user",
      "consentRequired": false,
      "correlationQuery": [
        {
          "linkQualifier": "default",
          "source": "var qry = {'_queryFilter': 'mail eq \"' + source.mail + '\"'}; qry",
          "type": "text/javascript"
        }
      ],
      "defaultSourceFields": [
        "*",
        "memberOf",
        "__roles__",
        "__servicePlanIds__"
      ],
      "defaultTargetFields": [
        "*",
        "assignments"
      ],
      "displayName": "systemAzureUser_managedAlpha_user",
      "icon": null,
      "links": "managedAlpha_user_systemAzureUser",
      "name": "systemAzureUser_managedAlpha_user",
      "policies": [
        {
          "action": "ASYNC",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "MISSING"
        },
        {
          "action": "ASYNC",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "ASYNC",
          "situation": "UNQUALIFIED"
        },
        {
          "action": "ASYNC",
          "situation": "UNASSIGNED"
        },
        {
          "action": "ASYNC",
          "situation": "LINK_ONLY"
        },
        {
          "action": "ASYNC",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "ASYNC",
          "situation": "ALL_GONE"
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED"
        },
        {
          "action": "ONBOARD",
          "situation": "FOUND"
        },
        {
          "action": "ASYNC",
          "situation": "ABSENT"
        },
        {
          "action": "ASYNC",
          "situation": "SOURCE_TARGET_CONFLICT"
        }
      ],
      "properties": [
        {
          "referencedObjectType": "__GROUP__",
          "source": "memberOf",
          "target": "assignments"
        },
        {
          "referencedObjectType": "directoryRole",
          "source": "__roles__",
          "target": "assignments"
        },
        {
          "referencedObjectType": "servicePlan",
          "source": "__servicePlanIds__",
          "target": "assignments"
        }
      ],
      "reconSourceQueryPageSize": 999,
      "reconSourceQueryPaging": true,
      "runTargetPhase": false,
      "source": "system/Azure/User",
      "sourceQueryFullEntry": true,
      "target": "managed/alpha_user"
    },
    "mapping/systemAzure__group___managedAlpha_assignment": {
      "_id": "mapping/systemAzure__group___managedAlpha_assignment",
      "consentRequired": false,
      "displayName": "systemAzure__group___managedAlpha_assignment",
      "icon": null,
      "name": "systemAzure__group___managedAlpha_assignment",
      "policies": [
        {
          "action": "EXCEPTION",
          "situation": "AMBIGUOUS"
        },
        {
          "action": "DELETE",
          "situation": "SOURCE_MISSING"
        },
        {
          "action": "CREATE",
          "situation": "MISSING"
        },
        {
          "action": "EXCEPTION",
          "situation": "FOUND_ALREADY_LINKED"
        },
        {
          "action": "DELETE",
          "situation": "UNQUALIFIED"
        },
        {
          "action": "EXCEPTION",
          "situation": "UNASSIGNED"
        },
        {
          "action": "EXCEPTION",
          "situation": "LINK_ONLY"
        },
        {
          "action": "IGNORE",
          "situation": "TARGET_IGNORED"
        },
        {
          "action": "IGNORE",
          "situation": "SOURCE_IGNORED"
        },
        {
          "action": "IGNORE",
          "situation": "ALL_GONE"
        },
        {
          "action": "UPDATE",
          "situation": "CONFIRMED"
        },
        {
          "action": "LINK",
          "situation": "FOUND"
        },
        {
          "action": "CREATE",
          "situation": "ABSENT"
        }
      ],
      "properties": [
        {
          "default": "__RESOURCE__",
          "target": "type"
        },
        {
          "source": "",
          "target": "description",
          "transform": {
            "globals": {},
            "source": "(typeof source.description !== \"undefined\" && source.description !== null) ? source.description : source._id",
            "type": "text/javascript"
          }
        },
        {
          "default": "managedAlpha_user_systemAzureUser",
          "target": "mapping"
        },
        {
          "source": "",
          "target": "name",
          "transform": {
            "globals": {},
            "source": "(typeof source.displayName !== \"undefined\" && source.displayName !== null) ? source.displayName : source._id",
            "type": "text/javascript"
          }
        },
        {
          "source": "_id",
          "target": "attributes",
          "transform": {
            "globals": {},
            "source": "[\n  {\n    'name': 'memberOf',\n    'value': [source]\n  }\n]",
            "type": "text/javascript"
          }
        },
        {
          "source": "_id",
          "target": "_id",
          "transform": {
            "globals": {
              "sourceObjectSet": "system_Azure___GROUP___"
            },
            "source": "sourceObjectSet.concat(source)",
            "type": "text/javascript"
          }
        }
      ],
      "source": "system/Azure/__GROUP__",
      "target": "managed/alpha_assignment",
      "targetQuery": {
        "_queryFilter": "mapping eq \"managedAlpha_user_systemAzureUser\" and attributes[name eq \"memberOf\"]"
      }
    }
  },
  "meta": {
    "exportDate": "2024-10-09T23:13:43.301Z",
    "exportTool": "frodo",
    "exportToolVersion": "v2.1.2-0 [v20.11.1]",
    "exportedBy": "phales@trivir.com",
    "origin": "https://openam-frodo-dev.forgeblocks.com/am",
    "originAmVersion": "7.6.0"
  },
  "sync": {
    "_id": "sync",
    "mappings": [
      {
        "_id": "sync/managedBravo_user_managedBravo_user",
        "consentRequired": false,
        "displayName": "managedBravo_user_managedBravo_user",
        "icon": null,
        "name": "managedBravo_user_managedBravo_user",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT"
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE"
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS"
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED"
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY"
          },
          {
            "action": "ASYNC",
            "situation": "MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED"
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED"
          }
        ],
        "properties": [],
        "source": "managed/bravo_user",
        "syncAfter": [],
        "target": "managed/bravo_user"
      },
      {
        "_id": "sync/managedAlpha_application_managedBravo_application",
        "consentRequired": true,
        "displayName": "Test Application Mapping",
        "icon": null,
        "name": "managedAlpha_application_managedBravo_application",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT"
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE"
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS"
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED"
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY"
          },
          {
            "action": "ASYNC",
            "situation": "MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED"
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED"
          }
        ],
        "properties": [
          {
            "source": "authoritative",
            "target": "_id"
          }
        ],
        "source": "managed/alpha_application",
        "sourceQuery": {
          "_queryFilter": "(eq \"\" or eq \"\")"
        },
        "syncAfter": [
          "managedBravo_user_managedBravo_user"
        ],
        "target": "managed/bravo_application",
        "targetQuery": {
          "_queryFilter": "!(eq \"\")"
        }
      },
      {
        "_id": "sync/managedAlpha_user_managedBravo_user",
        "consentRequired": true,
        "displayName": "Test Mapping for Frodo",
        "icon": null,
        "name": "managedAlpha_user_managedBravo_user",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT"
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE"
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS"
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED"
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY"
          },
          {
            "action": "ASYNC",
            "situation": "MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED"
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED"
          }
        ],
        "properties": [
          {
            "condition": {
              "globals": {},
              "source": "console.log(\"Hello World!\");",
              "type": "text/javascript"
            },
            "default": [
              "Default value string"
            ],
            "source": "accountStatus",
            "target": "applications",
            "transform": {
              "globals": {},
              "source": "console.log(\"hello\");",
              "type": "text/javascript"
            }
          }
        ],
        "source": "managed/alpha_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application"
        ],
        "target": "managed/bravo_user"
      },
      {
        "_id": "sync/managedBravo_user_managedAlpha_user",
        "consentRequired": false,
        "displayName": "Frodo test mapping",
        "icon": null,
        "name": "managedBravo_user_managedAlpha_user",
        "policies": [
          {
            "action": "ASYNC",
            "situation": "ABSENT"
          },
          {
            "action": "ASYNC",
            "situation": "ALL_GONE"
          },
          {
            "action": "ASYNC",
            "situation": "AMBIGUOUS"
          },
          {
            "action": "ASYNC",
            "situation": "CONFIRMED"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND"
          },
          {
            "action": "ASYNC",
            "situation": "FOUND_ALREADY_LINKED"
          },
          {
            "action": "ASYNC",
            "situation": "LINK_ONLY"
          },
          {
            "action": "ASYNC",
            "situation": "MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "SOURCE_MISSING"
          },
          {
            "action": "ASYNC",
            "situation": "TARGET_IGNORED"
          },
          {
            "action": "ASYNC",
            "situation": "UNASSIGNED"
          },
          {
            "action": "ASYNC",
            "situation": "UNQUALIFIED"
          }
        ],
        "properties": [],
        "source": "managed/bravo_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user"
        ],
        "target": "managed/alpha_user"
      },
      {
        "_id": "sync/AlphaUser2GoogleApps",
        "consentRequired": false,
        "correlationQuery": [
          {
            "expressionTree": {
              "all": [
                "__NAME__"
              ]
            },
            "file": "ui/correlateTreeToQueryFilter.js",
            "linkQualifier": "default",
            "mapping": "AlphaUser2GoogleApps",
            "type": "text/javascript"
          }
        ],
        "displayName": "AlphaUser2GoogleApps",
        "enableSync": {
          "$bool": "&{esv.gac.enable.mapping}"
        },
        "icon": null,
        "name": "AlphaUser2GoogleApps",
        "onCreate": {
          "globals": {},
          "source": "target.orgUnitPath = \"/NewAccounts\";",
          "type": "text/javascript"
        },
        "onUpdate": {
          "globals": {},
          "source": "//testing1234\ntarget.givenName = oldTarget.givenName;\ntarget.familyName = oldTarget.familyName;\ntarget.__NAME__ = oldTarget.__NAME__;",
          "type": "text/javascript"
        },
        "policies": [
          {
            "action": "EXCEPTION",
            "situation": "AMBIGUOUS"
          },
          {
            "action": "UNLINK",
            "situation": "SOURCE_MISSING"
          },
          {
            "action": {
              "globals": {},
              "source": "// Timing Constants\nvar ATTEMPT = 6; // Number of attempts to find the Google user.\nvar SLEEP_TIME = 500; // Milliseconds between retries.\nvar SYSTEM_ENDPOINT = \"system/GoogleApps/__ACCOUNT__\";\nvar MAPPING_NAME = \"AlphaUser2GoogleApps\";\nvar GOOGLE_DOMAIN = identityServer.getProperty(\"esv.gac.domain\");\nvar googleEmail = source.userName + \"@\" + GOOGLE_DOMAIN;\nvar frUserGUID = source._id;\nvar resultingAction = \"ASYNC\";\n\n// Get the Google GUID\nvar linkQueryParams = {'_queryFilter': 'firstId eq \"' + frUserGUID + '\" and linkType eq \"' + MAPPING_NAME + '\"'};\nvar linkResults = openidm.query(\"repo/link/\", linkQueryParams, null);\nvar googleGUID;\n\nif (linkResults.resultCount === 1) {\n  googleGUID = linkResults.result[0].secondId;\n}\n\nvar queryResults; // Resulting query from looking for the Google user.\nvar params = {'_queryFilter': '__UID__ eq \"' + googleGUID + '\"'};\n\nfor (var i = 1; i <= ATTEMPT; i++) {\n    queryResults = openidm.query(SYSTEM_ENDPOINT, params);\n    if (queryResults.result && queryResults.result.length > 0) {\n        logger.info(\"idmlog: ---AlphaUser2GoogleApps - Missing->UPDATE - Result found in \" + i + \" attempts. Query result: \" + JSON.stringify(queryResults));\n        resultingAction = \"UPDATE\";\n        break;\n    }\n    java.lang.Thread.sleep(SLEEP_TIME); // Wait before trying again.\n}\n\nif (!queryResults.result || queryResults.resultCount === 0) {\n    logger.warn(\"idmlog: ---AlphaUser2GoogleApps - Missing->UNLINK - \" + googleEmail + \" not found after \" + ATTEMPT + \" attempts.\");\n    resultingAction = \"UNLINK\";\n}\nresultingAction;\n",
              "type": "text/javascript"
            },
            "situation": "MISSING"
          },
          {
            "action": "EXCEPTION",
            "situation": "FOUND_ALREADY_LINKED"
          },
          {
            "action": "IGNORE",
            "situation": "UNQUALIFIED"
          },
          {
            "action": "IGNORE",
            "situation": "UNASSIGNED"
          },
          {
            "action": "UNLINK",
            "situation": "LINK_ONLY"
          },
          {
            "action": "IGNORE",
            "situation": "TARGET_IGNORED"
          },
          {
            "action": "IGNORE",
            "situation": "SOURCE_IGNORED"
          },
          {
            "action": "IGNORE",
            "situation": "ALL_GONE"
          },
          {
            "action": "UPDATE",
            "situation": "CONFIRMED"
          },
          {
            "action": "LINK",
            "situation": "FOUND"
          },
          {
            "action": "CREATE",
            "situation": "ABSENT"
          }
        ],
        "properties": [
          {
            "condition": {
              "globals": {},
              "source": "object.custom_password_encrypted != null",
              "type": "text/javascript"
            },
            "source": "custom_password_encrypted",
            "target": "__PASSWORD__",
            "transform": {
              "globals": {},
              "source": "openidm.decrypt(source);",
              "type": "text/javascript"
            }
          },
          {
            "source": "cn",
            "target": "__NAME__",
            "transform": {
              "globals": {},
              "source": "source + \"@\" + identityServer.getProperty(\"esv.gac.domain\");",
              "type": "text/javascript"
            }
          },
          {
            "source": "givenName",
            "target": "givenName"
          },
          {
            "source": "",
            "target": "familyName",
            "transform": {
              "globals": {},
              "source": "if (source.frIndexedInteger1 > 2 && source.frIndexedInteger1 < 6) {\n  source.sn + \" (Student)\"\n} else {\n  source.sn\n}",
              "type": "text/javascript"
            }
          }
        ],
        "queuedSync": {
          "enabled": true,
          "maxQueueSize": 20000,
          "maxRetries": 5,
          "pageSize": 100,
          "pollingInterval": 1000,
          "postRetryAction": "logged-ignore",
          "retryDelay": 1000
        },
        "source": "managed/alpha_user",
        "syncAfter": [
          "managedBravo_user_managedBravo_user",
          "managedAlpha_application_managedBravo_application",
          "managedAlpha_user_managedBravo_user",
          "managedBravo_user_managedAlpha_user"
        ],
        "target": "system/GoogleApps/__ACCOUNT__",
        "validSource": {
          "globals": {},
          "source": "var isGoogleEligible = true;\n//var logMsg = \"idmlog: ---AplhaUser2GAC (username: \" + source.userName + \" - userType: \" + source.frIndexedInteger1 + \" cn: \" + source.cn + \") -\";\nvar logMsg = \"idmlog: ---AplhaUser2GAC (username: \" + source.userName + \" - userType: \" + source.frIndexedInteger1 + \") -\";\n\n//Get Applicable userTypes (no Parent accounts)\nif (source.frIndexedInteger1 !== 0 && source.frIndexedInteger1 !== 1 && source.frIndexedInteger1 !== 3 && source.frIndexedInteger1 !== 4 && source.frIndexedInteger1 !== 5) {\n\tisGoogleEligible = false;\n\tlogMsg = logMsg + \" Account type not eligible.\";\n}\n\n//Make sure the account has a valid encrypted password.\nif (source.custom_password_encrypted == undefined || source.custom_password_encrypted == null) {\n\tisGoogleEligible = false;\n\tlogMsg = logMsg + \" No encrypted password yet.\";\n}\n\n//Check that CN exists and has no space.\nif (source.cn && source.cn.includes(' ')) {\n\tisGoogleEligible = false;\n\tlogMsg = logMsg + \" CN with a space is not allowed.\";\n}\n\nif (!isGoogleEligible) {\n\tlogMsg = logMsg + \" Not sent to Google.\"\n\tlogger.info(logMsg);\n} \n\nif (isGoogleEligible) {\n\tlogMsg = logMsg + \" Sent to Google.\"\n\tlogger.info(logMsg);\n}\n\nisGoogleEligible;\n",
          "type": "text/javascript"
        }
      }
    ]
  }
}
