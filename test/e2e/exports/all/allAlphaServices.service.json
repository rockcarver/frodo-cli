{
  "meta": {
    "exportDate": "2024-10-10T14:20:59.457Z",
    "exportTool": "frodo",
    "exportToolVersion": "v2.1.2-0 [v20.11.1]",
    "exportedBy": "phales@trivir.com",
    "origin": "https://openam-frodo-dev.forgeblocks.com/am",
    "originAmVersion": "7.6.0"
  },
  "service": {
    "SocialIdentityProviders": {
      "_id": "",
      "_type": {
        "_id": "SocialIdentityProviders",
        "collection": false,
        "name": "Social Identity Provider Service"
      },
      "enabled": true,
      "location": "alpha",
      "nextDescendents": [
        {
          "_id": "google",
          "_type": {
            "_id": "googleConfig",
            "collection": true,
            "name": "Client configuration for Google."
          },
          "acrValues": [],
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "297338177925-mho17cgnm540s2gre8h27feb6sbs1msd.apps.googleusercontent.com",
          "enableNativeNonce": true,
          "enabled": true,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://accounts.google.com",
          "issuerComparisonCheckType": "EXACT",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "openid",
            "profile",
            "email"
          ],
          "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
          "transform": "58d29080-4563-480b-89bb-1e7719776a21",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
            "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
            "buttonDisplayName": "Google",
            "buttonImage": "images/g-logo.png",
            "iconBackground": "#4184f3",
            "iconClass": "fa-google",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration"
        },
        {
          "_id": "github",
          "_type": {
            "_id": "oauth2Config",
            "collection": true,
            "name": "Client configuration for providers that implement the OAuth2 specification."
          },
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://github.com/login/oauth/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "bdae6d141d4dcf95a630",
          "enabled": true,
          "issuerComparisonCheckType": "EXACT",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "user"
          ],
          "tokenEndpoint": "https://ig.mytestrun.com/login/oauth/access_token",
          "transform": "23143919-6b78-40c3-b25e-beca19b229e0",
          "uiConfig": {
            "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
            "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
            "buttonDisplayName": "GitHub",
            "buttonImage": "https://cdn-icons-png.flaticon.com/512/25/25231.png",
            "iconBackground": "#4184f3",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoEndpoint": "https://ig.mytestrun.com/user"
        },
        {
          "_id": "apple-stoyan",
          "_type": {
            "_id": "appleConfig",
            "collection": true,
            "name": "Client configuration for Apple."
          },
          "acrValues": [],
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://appleid.apple.com/auth/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "CHANGE ME",
          "enableNativeNonce": true,
          "enabled": false,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://appleid.apple.com",
          "issuerComparisonCheckType": "EXACT",
          "jwksUriEndpoint": "https://appleid.apple.com/auth/keys",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectAfterFormPostURI": "https://openam-volker-dev.forgeblocks.com/login",
          "redirectURI": "https://openam-volker-dev.forgeblocks.com/am/oauth2/alpha/client/form_post/apple-stoyan",
          "requestNativeAppForUserInfo": false,
          "responseMode": "FORM_POST",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "name",
            "email"
          ],
          "tokenEndpoint": "https://appleid.apple.com/auth/token",
          "transform": "484e6246-dbc6-4288-97e6-54e55431402e",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #000000; color: #ffffff; border-color: #000000;",
            "buttonCustomStyleHover": "background-color: #000000; color: #ffffff; border-color: #000000;",
            "buttonDisplayName": "Apple",
            "buttonImage": "/login/images/apple-logo.png",
            "iconBackground": "#000000",
            "iconClass": "fa-apple",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://appleid.apple.com/.well-known/openid-configuration"
        },
        {
          "_id": "apple_web",
          "_type": {
            "_id": "appleConfig",
            "collection": true,
            "name": "Client configuration for Apple."
          },
          "acrValues": [],
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://appleid.apple.com/auth/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "io.scheuber.idc.signinWithApple.service",
          "enableNativeNonce": true,
          "enabled": true,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://appleid.apple.com",
          "issuerComparisonCheckType": "EXACT",
          "jwksUriEndpoint": "https://appleid.apple.com/auth/keys",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectAfterFormPostURI": "https://idc.scheuber.io/login",
          "redirectURI": "https://idc.scheuber.io/am/oauth2/client/form_post/apple_web",
          "requestNativeAppForUserInfo": false,
          "responseMode": "FORM_POST",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "name",
            "email"
          ],
          "tokenEndpoint": "https://appleid.apple.com/auth/token",
          "transform": "484e6246-dbc6-4288-97e6-54e55431402e",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #000000; color: #ffffff; border-color: #000000;",
            "buttonCustomStyleHover": "background-color: #000000; color: #ffffff; border-color: #000000;",
            "buttonDisplayName": "Apple",
            "buttonImage": "/login/images/apple-logo.png",
            "iconBackground": "#000000",
            "iconClass": "fa-apple",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://appleid.apple.com/.well-known/openid-configuration"
        },
        {
          "_id": "okta-trial-5735851",
          "_type": {
            "_id": "oidcConfig",
            "collection": true,
            "name": "Client configuration for providers that implement the OpenID Connect specification."
          },
          "acrValues": [],
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://trial-5735851.okta.com/oauth2/v1/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "0oa13r2cp29Rynmyw697",
          "enableNativeNonce": true,
          "enabled": true,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://trial-5735851.okta.com",
          "issuerComparisonCheckType": "EXACT",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "openid",
            "profile",
            "email"
          ],
          "tokenEndpoint": "https://trial-5735851.okta.com/oauth2/v1/token",
          "transform": "6325cf19-a49b-471e-8d26-7e4df76df0e2",
          "uiConfig": {
            "buttonDisplayName": "Okta"
          },
          "useCustomTrustStore": false,
          "userInfoEndpoint": "https://trial-5735851.okta.com/oauth2/v1/userinfo",
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://trial-5735851.okta.com/.well-known/openid-configuration"
        },
        {
          "_id": "adfs",
          "_type": {
            "_id": "oidcConfig",
            "collection": true,
            "name": "Client configuration for providers that implement the OpenID Connect specification."
          },
          "acrValues": [],
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "aa9a179e-cdba-4db8-8477-3d1069d5ec04",
          "enableNativeNonce": true,
          "enabled": true,
          "encryptJwtRequestParameter": false,
          "encryptedIdTokens": false,
          "issuer": "https://adfs.mytestrun.com/adfs",
          "issuerComparisonCheckType": "EXACT",
          "jwksUriEndpoint": "https://adfs.mytestrun.com/adfs/discovery/keys",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtRequestParameterOption": "NONE",
          "jwtSigningAlgorithm": "RS256",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "openid",
            "profile",
            "email"
          ],
          "tokenEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/token",
          "transform": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonDisplayName": "Microsoft ADFS",
            "buttonImage": "/login/images/microsoft-logo.png",
            "iconBackground": "#0078d7",
            "iconClass": "fa-windows",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoResponseType": "JSON",
          "wellKnownEndpoint": "https://adfs.mytestrun.com/adfs/.well-known/openid-configuration"
        },
        {
          "_id": "azure",
          "_type": {
            "_id": "microsoftConfig",
            "collection": true,
            "name": "Client configuration for Microsoft."
          },
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/oauth2/v2.0/authorize",
          "clientAuthenticationMethod": "CLIENT_SECRET_POST",
          "clientId": "c42a3dc8-f276-496b-a722-269f131cc21c",
          "enabled": true,
          "issuerComparisonCheckType": "EXACT",
          "jwtEncryptionAlgorithm": "NONE",
          "jwtEncryptionMethod": "NONE",
          "jwtSigningAlgorithm": "NONE",
          "pkceMethod": "S256",
          "privateKeyJwtExpTime": 600,
          "redirectURI": "https://idc.scheuber.io/login",
          "responseMode": "DEFAULT",
          "revocationCheckOptions": [],
          "scopeDelimiter": " ",
          "scopes": [
            "User.Read",
            "openid"
          ],
          "tokenEndpoint": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/oauth2/v2.0/token",
          "transform": "73cecbfc-dad0-4395-be6a-6858ee3a80e5",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonDisplayName": "Microsoft Azure",
            "buttonImage": "/login/images/microsoft-logo.png",
            "iconBackground": "#0078d7",
            "iconClass": "fa-windows",
            "iconFontColor": "white"
          },
          "useCustomTrustStore": false,
          "userInfoEndpoint": "https://graph.microsoft.com/v1.0/me"
        }
      ]
    },
    "baseurl": {
      "_id": "",
      "_type": {
        "_id": "baseurl",
        "collection": false,
        "name": "Base URL Source"
      },
      "contextPath": "/am",
      "fixedValue": "https://&{fqdn}",
      "location": "alpha",
      "nextDescendents": [],
      "source": "REQUEST_VALUES"
    },
    "dashboard": {
      "_id": "",
      "_type": {
        "_id": "dashboard",
        "collection": false,
        "name": "Dashboard"
      },
      "assignedDashboard": [],
      "location": "alpha",
      "nextDescendents": []
    },
    "email": {
      "_id": "",
      "_type": {
        "_id": "email",
        "collection": false,
        "name": "Email Service"
      },
      "emailAddressAttribute": "mail",
      "emailImplClassName": "org.forgerock.openam.services.email.MailServerImpl",
      "emailRateLimitSeconds": 1,
      "from": "vscheuber@gmail.com",
      "location": "alpha",
      "message": "Test Message",
      "nextDescendents": [
        {
          "_id": "gmail",
          "_type": {
            "_id": "smtpTransports",
            "collection": true,
            "name": "SMTP"
          },
          "emailImplClassName": "org.forgerock.openam.services.email.MailServerImpl",
          "hostname": "smtp.gmail.com",
          "port": 465,
          "sslState": "SSL",
          "username": "vscheuber@gmail.com"
        }
      ],
      "port": 465,
      "sslState": "SSL",
      "subject": "Test Subject"
    },
    "oauth-oidc": {
      "_id": "",
      "_type": {
        "_id": "oauth-oidc",
        "collection": false,
        "name": "OAuth2 Provider"
      },
      "advancedOAuth2Config": {
        "allowClientCredentialsInTokenRequestQueryParameters": true,
        "allowedAudienceValues": [],
        "authenticationAttributes": [
          "uid"
        ],
        "codeVerifierEnforced": "false",
        "defaultScopes": [
          "address",
          "phone",
          "openid",
          "profile",
          "email"
        ],
        "displayNameAttribute": "cn",
        "expClaimRequiredInRequestObject": false,
        "grantTypes": [
          "implicit",
          "urn:ietf:params:oauth:grant-type:saml2-bearer",
          "refresh_token",
          "password",
          "client_credentials",
          "urn:ietf:params:oauth:grant-type:device_code",
          "authorization_code",
          "urn:openid:params:grant-type:ciba",
          "urn:ietf:params:oauth:grant-type:uma-ticket",
          "urn:ietf:params:oauth:grant-type:jwt-bearer"
        ],
        "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
        "includeClientIdClaimInStatelessTokens": true,
        "includeSubnameInTokenClaims": true,
        "macaroonTokenFormat": "V2",
        "maxAgeOfRequestObjectNbfClaim": 0,
        "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
        "moduleMessageEnabledInPasswordGrant": false,
        "nbfClaimRequiredInRequestObject": false,
        "parRequestUriLifetime": 90,
        "passwordGrantAuthService": "Login",
        "persistentClaims": [],
        "refreshTokenGracePeriod": 0,
        "requestObjectProcessing": "OIDC",
        "requirePushedAuthorizationRequests": false,
        "responseTypeClasses": [
          "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
          "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
          "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
          "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler"
        ],
        "supportedScopes": [
          "email|Your email address",
          "openid|",
          "address|Your postal address",
          "phone|Your telephone number(s)",
          "profile|Your personal information",
          "fr:idm:*",
          "am-introspect-all-tokens"
        ],
        "supportedSubjectTypes": [
          "public",
          "pairwise"
        ],
        "tlsCertificateBoundAccessTokensEnabled": true,
        "tlsCertificateRevocationCheckingEnabled": false,
        "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
        "tokenCompressionEnabled": false,
        "tokenEncryptionEnabled": false,
        "tokenExchangeClasses": [
          "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
          "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
          "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
          "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger"
        ],
        "tokenSigningAlgorithm": "HS256",
        "tokenValidatorClasses": [
          "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
          "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator"
        ]
      },
      "advancedOIDCConfig": {
        "alwaysAddClaimsToToken": true,
        "amrMappings": {},
        "authorisedIdmDelegationClients": [],
        "authorisedOpenIdConnectSSOClients": [],
        "claimsParameterSupported": false,
        "defaultACR": [],
        "idTokenInfoClientAuthenticationEnabled": true,
        "includeAllKtyAlgCombinationsInJwksUri": false,
        "loaMapping": {},
        "storeOpsTokens": true,
        "supportedAuthorizationResponseEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedAuthorizationResponseEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedAuthorizationResponseSigningAlgorithms": [
          "PS384",
          "RS384",
          "EdDSA",
          "ES384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedRequestParameterEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "ECDH-ES+A128KW",
          "RSA-OAEP",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedRequestParameterEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedRequestParameterSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedTokenEndpointAuthenticationSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedTokenIntrospectionResponseEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedTokenIntrospectionResponseSigningAlgorithms": [
          "PS384",
          "RS384",
          "EdDSA",
          "ES384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedUserInfoEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedUserInfoEncryptionEnc": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedUserInfoSigningAlgorithms": [
          "ES384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512"
        ],
        "useForceAuthnForMaxAge": false,
        "useForceAuthnForPromptLogin": false
      },
      "cibaConfig": {
        "cibaAuthReqIdLifetime": 600,
        "cibaMinimumPollingInterval": 2,
        "supportedCibaSigningAlgorithms": [
          "ES256",
          "PS256"
        ]
      },
      "clientDynamicRegistrationConfig": {
        "allowDynamicRegistration": false,
        "dynamicClientRegistrationScope": "dynamic_client_registration",
        "dynamicClientRegistrationSoftwareStatementRequired": false,
        "generateRegistrationAccessTokens": true,
        "requiredSoftwareStatementAttestedAttributes": [
          "redirect_uris"
        ]
      },
      "consent": {
        "clientsCanSkipConsent": true,
        "enableRemoteConsent": false,
        "supportedRcsRequestEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedRcsRequestEncryptionMethods": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedRcsRequestSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ],
        "supportedRcsResponseEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "ECDH-ES+A128KW",
          "RSA-OAEP",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedRcsResponseEncryptionMethods": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedRcsResponseSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ]
      },
      "coreOAuth2Config": {
        "accessTokenLifetime": 3600,
        "accessTokenMayActScript": "[Empty]",
        "codeLifetime": 120,
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "macaroonTokensEnabled": false,
        "oidcMayActScript": "[Empty]",
        "refreshTokenLifetime": 604800,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": true,
        "usePolicyEngineForScope": false
      },
      "coreOIDCConfig": {
        "jwtTokenLifetime": 3600,
        "oidcDiscoveryEndpointEnabled": true,
        "overrideableOIDCClaims": [],
        "supportedClaims": [],
        "supportedIDTokenEncryptionAlgorithms": [
          "ECDH-ES+A256KW",
          "ECDH-ES+A192KW",
          "RSA-OAEP",
          "ECDH-ES+A128KW",
          "RSA-OAEP-256",
          "A128KW",
          "A256KW",
          "ECDH-ES",
          "dir",
          "A192KW"
        ],
        "supportedIDTokenEncryptionMethods": [
          "A256GCM",
          "A192GCM",
          "A128GCM",
          "A128CBC-HS256",
          "A192CBC-HS384",
          "A256CBC-HS512"
        ],
        "supportedIDTokenSigningAlgorithms": [
          "PS384",
          "ES384",
          "RS384",
          "HS256",
          "HS512",
          "ES256",
          "RS256",
          "HS384",
          "ES512",
          "PS256",
          "PS512",
          "RS512"
        ]
      },
      "deviceCodeConfig": {
        "deviceCodeLifetime": 300,
        "devicePollInterval": 5,
        "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
        "deviceUserCodeLength": 8
      },
      "location": "alpha",
      "nextDescendents": [],
      "pluginsConfig": {
        "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
        "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "authorizeEndpointDataProviderPluginType": "JAVA",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "evaluateScopePluginType": "JAVA",
        "evaluateScopeScript": "[Empty]",
        "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "oidcClaimsPluginType": "SCRIPTED",
        "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
        "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
        "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
        "validateScopePluginType": "JAVA",
        "validateScopeScript": "[Empty]"
      }
    },
    "pingOneWorkerService": {
      "_id": "",
      "_type": {
        "_id": "pingOneWorkerService",
        "collection": false,
        "name": "PingOne Worker Service"
      },
      "enabled": true,
      "location": "alpha",
      "nextDescendents": []
    },
    "policyconfiguration": {
      "_id": "",
      "_type": {
        "_id": "policyconfiguration",
        "collection": false,
        "name": "Policy Configuration"
      },
      "bindDn": "&{am.stores.user.username}",
      "bindPassword": {
        "$string": "&{am.stores.user.password}"
      },
      "checkIfResourceTypeExists": true,
      "connectionPoolMaximumSize": 10,
      "connectionPoolMinimumSize": 1,
      "ldapServer": [
        "userstore-1.userstore:1389",
        "userstore-0.userstore:1389",
        "userstore-2.userstore:1389"
      ],
      "location": "alpha",
      "maximumSearchResults": 100,
      "mtlsEnabled": false,
      "nextDescendents": [],
      "policyHeartbeatInterval": 10,
      "policyHeartbeatTimeUnit": "SECONDS",
      "realmSearchFilter": "(objectclass=sunismanagedorganization)",
      "searchTimeout": 5,
      "sslEnabled": {
        "$bool": "&{am.stores.ssl.enabled}"
      },
      "subjectsResultTTL": 10,
      "userAliasEnabled": false,
      "usersBaseDn": "ou=identities",
      "usersSearchAttribute": "uid",
      "usersSearchFilter": "(objectclass=inetorgperson)",
      "usersSearchScope": "SCOPE_SUB"
    },
    "selfServiceTrees": {
      "_id": "",
      "_type": {
        "_id": "selfServiceTrees",
        "collection": false,
        "name": "Self Service Trees"
      },
      "enabled": true,
      "location": "alpha",
      "nextDescendents": [],
      "treeMapping": {
        "forgottenUsername": "ForgottenUsername",
        "registration": "Registration",
        "resetPassword": "ResetPassword",
        "updatePassword": "UpdatePassword"
      }
    },
    "session": {
      "_id": "",
      "_type": {
        "_id": "session",
        "collection": false,
        "name": "Session"
      },
      "dynamic": {
        "maxCachingTime": 3,
        "maxIdleTime": 30,
        "maxSessionTime": 120,
        "quotaLimit": 2
      },
      "location": "alpha",
      "nextDescendents": []
    },
    "validation": {
      "_id": "",
      "_type": {
        "_id": "validation",
        "collection": false,
        "name": "Validation Service"
      },
      "location": "alpha",
      "nextDescendents": [],
      "validGotoDestinations": [
        "&{am.server.protocol|https}://&{fqdn}/*?*"
      ]
    }
  }
}
