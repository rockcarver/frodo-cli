{
  "global": {
    "emailTemplate": {
      "forgottenUsername": {
        "_id": "emailTemplate/forgottenUsername",
        "defaultLocale": "en",
        "enabled": true,
        "from": "",
        "message": {
          "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<h4><a href=\"{{object.resumeURI}}\">Click here to login</a></h4></body></html>",
          "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<h4><a href=\"{{object.resumeURI}}\">Cliquez ici pour vous connecter</a></h4></body></html>"
        },
        "mimeType": "text/html",
        "subject": {
          "en": "Account Information - username",
          "fr": "Informations sur le compte - nom d'utilisateur"
        }
      },
      "registration": {
        "_id": "emailTemplate/registration",
        "defaultLocale": "en",
        "enabled": true,
        "from": "",
        "message": {
          "en": "<h3>This is your registration email.</h3><h4><a href=\"{{object.resumeURI}}\">Email verification link</a></h4>",
          "fr": "<h3>Ceci est votre mail d'inscription.</h3><h4><a href=\"{{object.resumeURI}}\">Lien de vérification email</a></h4>"
        },
        "mimeType": "text/html",
        "subject": {
          "en": "Register new account",
          "fr": "Créer un nouveau compte"
        }
      },
      "resetPassword": {
        "_id": "emailTemplate/resetPassword",
        "defaultLocale": "en",
        "enabled": true,
        "from": "",
        "message": {
          "en": "<h3>Click to reset your password</h3><h4><a href=\"{{object.resumeURI}}\">Password reset link</a></h4>",
          "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href=\"{{object.resumeURI}}\">Mot de passe lien de réinitialisation</a></h4>"
        },
        "mimeType": "text/html",
        "subject": {
          "en": "Reset your password",
          "fr": "Réinitialisez votre mot de passe"
        }
      },
      "updatePassword": {
        "_id": "emailTemplate/updatePassword",
        "defaultLocale": "en",
        "enabled": true,
        "from": "",
        "message": {
          "en": "<h3>Verify email to update password</h3><h4><a href=\"{{object.resumeURI}}\">Update password link</a></h4>"
        },
        "mimeType": "text/html",
        "subject": {
          "en": "Update your password"
        }
      },
      "welcome": {
        "_id": "emailTemplate/welcome",
        "defaultLocale": "en",
        "enabled": true,
        "from": "",
        "message": {
          "en": "<html><body><p>Welcome to OpenIDM. Your username is '{{object.userName}}'.</p></body></html>",
          "fr": "<html><body><p>Bienvenue sur OpenIDM. Votre nom d'utilisateur est '{{object.userName}}'.</p></body></html>"
        },
        "mimeType": "text/html",
        "subject": {
          "en": "Your account has been created",
          "fr": "Votre compte vient d’être créé !"
        }
      }
    },
    "idm": {
      "access": {
        "_id": "access",
        "configs": [
          {
            "actions": "",
            "methods": "read",
            "pattern": "health",
            "roles": "*"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "info/*",
            "roles": "*"
          },
          {
            "actions": "login,logout",
            "methods": "read,action",
            "pattern": "authentication",
            "roles": "*"
          },
          {
            "actions": "validate",
            "methods": "action",
            "pattern": "util/validateQueryFilter",
            "roles": "*"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "config/ui/themeconfig",
            "roles": "*"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "config/ui/theme-*",
            "roles": "*"
          },
          {
            "actions": "*",
            "customAuthz": "checkIfAnyFeatureEnabled(['registration', 'passwordReset'])",
            "methods": "read",
            "pattern": "config/selfservice/kbaConfig",
            "roles": "*"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "config/ui/dashboard",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "methods": "query",
            "pattern": "info/features",
            "roles": "*"
          },
          {
            "actions": "listPrivileges",
            "methods": "action",
            "pattern": "privilege",
            "roles": "*"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "privilege/*",
            "roles": "*"
          },
          {
            "actions": "submitRequirements",
            "methods": "read,action",
            "pattern": "selfservice/termsAndConditions",
            "roles": "*"
          },
          {
            "actions": "submitRequirements",
            "methods": "read,action",
            "pattern": "selfservice/kbaUpdate",
            "roles": "*"
          },
          {
            "actions": "",
            "customAuthz": "isMyProfile()",
            "methods": "read,query",
            "pattern": "profile/*",
            "roles": "*"
          },
          {
            "actions": "*",
            "customAuthz": "checkIfAnyFeatureEnabled('kba')",
            "methods": "read",
            "pattern": "selfservice/kba",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "schema/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "methods": "action,query",
            "pattern": "consent",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "customAuthz": "checkIfApiRequest()",
            "methods": "read",
            "pattern": "*",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "*",
            "excludePatterns": "repo,repo/*",
            "methods": "*",
            "pattern": "*",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "",
            "methods": "create,read,update,delete,patch,query",
            "pattern": "system/*",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "*",
            "methods": "script",
            "pattern": "system/*",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
            "methods": "action",
            "pattern": "system/*",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "*",
            "customAuthz": "disallowCommandAction()",
            "methods": "*",
            "pattern": "repo",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "*",
            "customAuthz": "disallowCommandAction()",
            "methods": "*",
            "pattern": "repo/*",
            "roles": "internal/role/openidm-admin"
          },
          {
            "actions": "command",
            "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
            "methods": "action",
            "pattern": "repo/link",
            "roles": "internal/role/openidm-admin"
          },
          {
            "methods": "create,read,query,patch",
            "pattern": "managed/*",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "methods": "read,query",
            "pattern": "internal/role/*",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "actions": "*",
            "methods": "create,read,action,update",
            "pattern": "profile/*",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "actions": "*",
            "methods": "read,action",
            "pattern": "policy/*",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "methods": "read",
            "pattern": "schema/*",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "actions": "*",
            "methods": "action,query",
            "pattern": "consent",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "methods": "read",
            "pattern": "selfservice/kba",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "methods": "read",
            "pattern": "selfservice/terms",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "actions": "sendTemplate",
            "methods": "action",
            "pattern": "external/email",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "actions": "authenticate",
            "methods": "action",
            "pattern": "system/*",
            "roles": "internal/role/platform-provisioning"
          },
          {
            "actions": "*",
            "methods": "read,action",
            "pattern": "policy/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "config/ui/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "reauthenticate",
            "methods": "action",
            "pattern": "authentication",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "bind,unbind",
            "customAuthz": "ownDataOnly()",
            "methods": "read,action,delete",
            "pattern": "*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "patch",
            "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', []) && reauthIfProtectedAttributeChange()",
            "methods": "update,patch,action",
            "pattern": "*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "methods": "read",
            "pattern": "endpoint/getprocessesforuser",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "methods": "query",
            "pattern": "endpoint/gettasksview",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "complete",
            "customAuthz": "isMyTask()",
            "methods": "action",
            "pattern": "workflow/taskinstance/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "customAuthz": "canUpdateTask()",
            "methods": "read,update",
            "pattern": "workflow/taskinstance/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "customAuthz": "isAllowedToStartProcess()",
            "methods": "create",
            "pattern": "workflow/processinstance",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "read",
            "methods": "*",
            "pattern": "workflow/processdefinition/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "customAuthz": "restrictPatchToFields(['password'])",
            "methods": "patch",
            "pattern": "managed/user/*",
            "roles": "internal/role/openidm-cert"
          },
          {
            "actions": "*",
            "customAuthz": "ownRelationshipProperty('_meta', false)",
            "methods": "read",
            "pattern": "internal/usermeta/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "customAuthz": "ownRelationshipProperty('_notifications', true)",
            "methods": "read,delete",
            "pattern": "internal/notification/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "*",
            "customAuthz": "ownRelationshipCollection(['idps','_meta','_notifications'])",
            "methods": "read,query",
            "pattern": "managed/user/*",
            "roles": "internal/role/openidm-authorized"
          },
          {
            "actions": "deleteNotificationsForTarget",
            "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
            "methods": "action",
            "pattern": "notification",
            "roles": "internal/role/openidm-authorized"
          }
        ]
      },
      "apiVersion": {
        "_id": "apiVersion",
        "warning": {
          "enabled": {
            "$bool": "&{openidm.apiVersion.warning.enabled|false}"
          },
          "includeScripts": {
            "$bool": "&{openidm.apiVersion.warning.includeScripts|false}"
          },
          "logFilterResourcePaths": [
            "audit",
            "authentication",
            "cluster",
            "config",
            "consent",
            "csv",
            "external/rest",
            "identityProviders",
            "info",
            "internal",
            "internal/role",
            "internal/user",
            "internal/usermeta",
            "managed",
            "managed/assignment",
            "managed/organization",
            "managed/role",
            "managed/user",
            "notification",
            "policy",
            "privilege",
            "profile",
            "recon",
            "recon/assoc",
            "repo",
            "selfservice/kba",
            "selfservice/terms",
            "scheduler/job",
            "scheduler/trigger",
            "schema",
            "sync",
            "sync/mappings",
            "system",
            "taskscanner"
          ]
        }
      },
      "audit": {
        "_id": "audit",
        "auditServiceConfig": {
          "availableAuditEventHandlers": [
            "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
            "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
            "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
            "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
            "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
            "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler"
          ],
          "caseInsensitiveFields": [
            "/access/http/request/headers",
            "/access/http/response/headers"
          ],
          "filterPolicies": {
            "field": {
              "excludeIf": [],
              "includeIf": []
            }
          },
          "handlerForQueries": "json"
        },
        "eventHandlers": [
          {
            "class": "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
            "config": {
              "buffering": {
                "maxSize": 100000,
                "writeInterval": "100 millis"
              },
              "enabled": {
                "$bool": "&{openidm.audit.handler.json.enabled|true}"
              },
              "logDirectory": "&{idm.data.dir}/audit",
              "name": "json",
              "topics": [
                "access",
                "activity",
                "sync",
                "authentication",
                "config"
              ]
            }
          },
          {
            "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
            "config": {
              "enabled": {
                "$bool": "&{openidm.audit.handler.stdout.enabled|false}"
              },
              "name": "stdout",
              "topics": [
                "access",
                "activity",
                "sync",
                "authentication",
                "config"
              ]
            }
          },
          {
            "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
            "config": {
              "enabled": {
                "$bool": "&{openidm.audit.handler.repo.enabled|false}"
              },
              "name": "repo",
              "topics": [
                "access",
                "activity",
                "sync",
                "authentication",
                "config"
              ]
            }
          }
        ],
        "eventTopics": {
          "access": {
            "defaultEvents": true,
            "filter": {
              "script": {
                "globals": {},
                "source": "//seantest",
                "type": "groovy"
              }
            },
            "name": "access"
          },
          "activity": {
            "defaultEvents": true,
            "filter": {
              "actions": [
                "create",
                "update",
                "delete",
                "patch",
                "action"
              ]
            },
            "name": "activity",
            "passwordFields": [
              "password"
            ],
            "watchedFields": []
          },
          "authentication": {
            "defaultEvents": true,
            "filter": {
              "script": {
                "globals": {},
                "source": "//seantest",
                "type": "text/javascript"
              }
            },
            "name": "authentication"
          },
          "config": {
            "defaultEvents": true,
            "filter": {
              "actions": [
                "create",
                "update",
                "delete",
                "patch",
                "action"
              ]
            },
            "name": "config"
          },
          "recon": {
            "defaultEvents": true,
            "name": "recon"
          },
          "sync": {
            "defaultEvents": true,
            "name": "sync"
          }
        },
        "exceptionFormatter": {
          "globals": {},
          "source": "//seantest",
          "type": "text/javascript"
        }
      },
      "authentication": {
        "_id": "authentication",
        "serverAuthContext": {
          "authModules": [
            {
              "enabled": true,
              "name": "STATIC_USER",
              "properties": {
                "augmentSecurityContext": {
                  "globals": {},
                  "source": "//seantest",
                  "type": "text/javascript"
                },
                "defaultUserRoles": [
                  "internal/role/openidm-reg"
                ],
                "password": {
                  "$crypto": {
                    "type": "x-simple-encryption",
                    "value": {
                      "cipher": "AES/CBC/PKCS5Padding",
                      "data": "fzE1J3P9LZOmuCuecCDnaQ==",
                      "iv": "nhI8UHymNRChGIyOC+5Sag==",
                      "keySize": 32,
                      "mac": "XfF7VE/o5Shv6AqW1Xe3TQ==",
                      "purpose": "idm.config.encryption",
                      "salt": "v0NHakffrjBJNL3zjhEOtg==",
                      "stableId": "openidm-sym-default"
                    }
                  }
                },
                "queryOnResource": "internal/user",
                "username": "anonymous"
              }
            },
            {
              "enabled": true,
              "name": "STATIC_USER",
              "properties": {
                "defaultUserRoles": [
                  "internal/role/openidm-authorized",
                  "internal/role/openidm-admin"
                ],
                "password": "&{openidm.admin.password}",
                "queryOnResource": "internal/user",
                "username": "openidm-admin"
              }
            },
            {
              "enabled": true,
              "name": "MANAGED_USER",
              "properties": {
                "augmentSecurityContext": {
                  "source": "var augmentYield = require('auth/customAuthz').setProtectedAttributes(security);require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, 'privileges', 'privilegeAssignments', augmentYield);",
                  "type": "text/javascript"
                },
                "defaultUserRoles": [
                  "internal/role/openidm-authorized"
                ],
                "propertyMapping": {
                  "additionalUserFields": [
                    "adminOfOrg",
                    "ownerOfOrg"
                  ],
                  "authenticationId": "username",
                  "userCredential": "password",
                  "userRoles": "authzRoles"
                },
                "queryId": "credential-query",
                "queryOnResource": "managed/user"
              }
            }
          ],
          "sessionModule": {
            "name": "JWT_SESSION",
            "properties": {
              "enableDynamicRoles": false,
              "isHttpOnly": true,
              "maxTokenLifeMinutes": 120,
              "sessionOnly": true,
              "tokenIdleTimeMinutes": 30
            }
          }
        }
      },
      "cluster": {
        "_id": "cluster",
        "enabled": true,
        "instanceCheckInInterval": 5000,
        "instanceCheckInOffset": 0,
        "instanceId": "&{openidm.node.id}",
        "instanceRecoveryTimeout": 30000,
        "instanceTimeout": 30000
      },
      "endpoint/getavailableuserstoassign": {
        "_id": "endpoint/getavailableuserstoassign",
        "file": "workflow/getavailableuserstoassign.js",
        "type": "text/javascript"
      },
      "endpoint/getprocessesforuser": {
        "_id": "endpoint/getprocessesforuser",
        "file": "workflow/getprocessesforuser.js",
        "type": "text/javascript"
      },
      "endpoint/gettasksview": {
        "_id": "endpoint/gettasksview",
        "file": "workflow/gettasksview.js",
        "type": "text/javascript"
      },
      "endpoint/mappingDetails": {
        "_id": "endpoint/mappingDetails",
        "context": "endpoint/mappingDetails",
        "file": "mappingDetails.js",
        "type": "text/javascript"
      },
      "endpoint/oauthproxy": {
        "_id": "endpoint/oauthproxy",
        "context": "endpoint/oauthproxy",
        "file": "oauthProxy.js",
        "type": "text/javascript"
      },
      "endpoint/removeRepoPathFromRelationships": {
        "_id": "endpoint/removeRepoPathFromRelationships",
        "file": "update/removeRepoPathFromRelationships.js",
        "type": "text/javascript"
      },
      "endpoint/repairMetadata": {
        "_id": "endpoint/repairMetadata",
        "file": "meta/metadataScanner.js",
        "type": "text/javascript"
      },
      "endpoint/updateInternalUserAndInternalRoleEntries": {
        "_id": "endpoint/updateInternalUserAndInternalRoleEntries",
        "file": "update/updateInternalUserAndInternalRoleEntries.js",
        "type": "text/javascript"
      },
      "endpoint/validateQueryFilter": {
        "_id": "endpoint/validateQueryFilter",
        "context": "util/validateQueryFilter",
        "source": "try { org.forgerock.openidm.query.StringQueryFilters.parse(request.content._queryFilter).accept(new org.forgerock.util.query.MapFilterVisitor(), null); } catch (e) { throw { 'code' : 400, 'message' : e.message } };",
        "type": "text/javascript"
      },
      "external.rest": {
        "_id": "external.rest",
        "hostnameVerifier": "&{openidm.external.rest.hostnameVerifier}"
      },
      "internal": {
        "_id": "internal",
        "objects": [
          {
            "name": "role",
            "properties": {
              "authzMembers": {
                "items": {
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "name": "notification",
            "properties": {
              "target": {
                "reversePropertyName": "_notifications"
              }
            }
          }
        ]
      },
      "managed": {
        "_id": "managed",
        "objects": [
          {
            "lastSync": {
              "effectiveAssignmentsProperty": "effectiveAssignments",
              "lastSyncProperty": "lastSync"
            },
            "name": "user",
            "notifications": {
              "property": "_notifications"
            },
            "postDelete": {
              "source": "require('postDelete-idp-cleanup').removeConnectedIdpData(oldObject, resourceName, request);require('postDelete-notification-cleanup').removeConnectedNotificationData(oldObject, resourceName, request);",
              "type": "text/javascript"
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-03/schema",
              "icon": "fa-user",
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
              "mat-icon": "people",
              "order": [
                "_id",
                "userName",
                "password",
                "givenName",
                "sn",
                "mail",
                "description",
                "accountStatus",
                "telephoneNumber",
                "postalAddress",
                "city",
                "postalCode",
                "country",
                "stateProvince",
                "roles",
                "assignments",
                "manager",
                "authzRoles",
                "reports",
                "effectiveRoles",
                "effectiveAssignments",
                "lastSync",
                "kbaInfo",
                "preferences",
                "consentedMappings",
                "ownerOfOrg",
                "adminOfOrg",
                "memberOfOrg",
                "memberOfOrgIDs",
                "activeDate",
                "inactiveDate"
              ],
              "properties": {
                "_id": {
                  "description": "User ID",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "forbiddenChars": [
                          "/"
                        ]
                      },
                      "policyId": "cannot-contain-characters"
                    }
                  ],
                  "searchable": false,
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": false
                },
                "accountStatus": {
                  "default": "active",
                  "description": "Status",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "regexp": "^(active|inactive)$"
                      },
                      "policyId": "regexpMatches"
                    }
                  ],
                  "searchable": true,
                  "title": "Status",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "activeDate": {
                  "description": "Active Date",
                  "format": "datetime",
                  "isPersonal": false,
                  "policies": [
                    {
                      "policyId": "valid-datetime"
                    }
                  ],
                  "searchable": false,
                  "title": "Active Date",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "adminOfOrg": {
                  "items": {
                    "notifySelf": false,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "Organization",
                        "notify": true,
                        "path": "managed/organization",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "admins",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "policies": [],
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Organizations I Administer",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "assignments": {
                  "description": "Assignments",
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments",
                  "isPersonal": false,
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:assignments:items",
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_grantType": {
                            "description": "Grant Type",
                            "label": "Grant Type",
                            "type": "string"
                          },
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Provisioning Roles Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "conditionalAssociationField": "condition",
                        "label": "Assignment",
                        "path": "managed/assignment",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "members",
                    "reverseRelationship": true,
                    "title": "Assignments Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "returnByDefault": false,
                  "title": "Assignments",
                  "type": "array",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "authzRoles": {
                  "description": "Authorization Roles",
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                  "isPersonal": false,
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Authorization Roles Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "conditionalAssociationField": "condition",
                        "label": "Internal Role",
                        "path": "internal/role",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "authzMembers",
                    "reverseRelationship": true,
                    "title": "Authorization Roles Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "returnByDefault": false,
                  "title": "Authorization Roles",
                  "type": "array",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "city": {
                  "description": "City",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "title": "City",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "consentedMappings": {
                  "description": "Consented Mappings",
                  "isPersonal": false,
                  "isVirtual": false,
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate"
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "format": "datetime",
                        "policies": [
                          {
                            "policyId": "valid-datetime"
                          }
                        ],
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true
                      }
                    },
                    "required": [
                      "mapping",
                      "consentDate"
                    ],
                    "title": "Consented Mapping",
                    "type": "object"
                  },
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Consented Mappings",
                  "type": "array",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": false
                },
                "country": {
                  "description": "Country",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "title": "Country",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "description": {
                  "description": "Description",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "searchable": true,
                  "title": "Description",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "effectiveAssignments": {
                  "description": "Effective Assignments",
                  "isPersonal": false,
                  "isVirtual": true,
                  "items": {
                    "title": "Effective Assignments Items",
                    "type": "object"
                  },
                  "queryConfig": {
                    "referencedObjectFields": [
                      "*"
                    ],
                    "referencedRelationshipFields": [
                      [
                        "roles",
                        "assignments"
                      ],
                      [
                        "assignments"
                      ]
                    ]
                  },
                  "returnByDefault": true,
                  "title": "Effective Assignments",
                  "type": "array",
                  "usageDescription": "",
                  "viewable": false
                },
                "effectiveRoles": {
                  "description": "Effective Roles",
                  "isPersonal": false,
                  "isVirtual": true,
                  "items": {
                    "title": "Effective Roles Items",
                    "type": "object"
                  },
                  "queryConfig": {
                    "referencedRelationshipFields": [
                      "roles"
                    ]
                  },
                  "returnByDefault": true,
                  "title": "Effective Roles",
                  "type": "array",
                  "usageDescription": "",
                  "viewable": false
                },
                "givenName": {
                  "description": "First Name",
                  "isPersonal": true,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "searchable": true,
                  "title": "First Name",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "inactiveDate": {
                  "description": "Inactive Date",
                  "format": "datetime",
                  "isPersonal": false,
                  "policies": [
                    {
                      "policyId": "valid-datetime"
                    }
                  ],
                  "searchable": false,
                  "title": "Inactive Date",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "kbaInfo": {
                  "description": "KBA Info",
                  "isPersonal": true,
                  "items": {
                    "order": [
                      "answer",
                      "customQuestion",
                      "questionId"
                    ],
                    "properties": {
                      "answer": {
                        "description": "Answer",
                        "type": "string"
                      },
                      "customQuestion": {
                        "description": "Custom question",
                        "type": "string"
                      },
                      "questionId": {
                        "description": "Question ID",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "KBA Info Items",
                    "type": "object"
                  },
                  "type": "array",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": false
                },
                "lastSync": {
                  "description": "Last Sync timestamp",
                  "isPersonal": false,
                  "order": [
                    "effectiveAssignments",
                    "timestamp"
                  ],
                  "properties": {
                    "effectiveAssignments": {
                      "description": "Effective Assignments",
                      "items": {
                        "title": "Effective Assignments Items",
                        "type": "object"
                      },
                      "title": "Effective Assignments",
                      "type": "array"
                    },
                    "timestamp": {
                      "description": "Timestamp",
                      "policies": [
                        {
                          "policyId": "valid-datetime"
                        }
                      ],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "scope": "private",
                  "searchable": false,
                  "title": "Last Sync timestamp",
                  "type": "object",
                  "usageDescription": "",
                  "viewable": false
                },
                "mail": {
                  "description": "Email Address",
                  "isPersonal": true,
                  "policies": [
                    {
                      "policyId": "valid-email-address-format"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "searchable": true,
                  "title": "Email Address",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "manager": {
                  "description": "Manager",
                  "isPersonal": false,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string"
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string"
                        }
                      },
                      "title": "Manager _refProperties",
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn"
                        ],
                        "queryFilter": "true"
                      }
                    }
                  ],
                  "reversePropertyName": "reports",
                  "reverseRelationship": true,
                  "searchable": false,
                  "title": "Manager",
                  "type": "relationship",
                  "usageDescription": "",
                  "userEditable": false,
                  "validate": true,
                  "viewable": true
                },
                "memberOfOrg": {
                  "items": {
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "Organization",
                        "notify": false,
                        "path": "managed/organization",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "members",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "policies": [],
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Organizations to which I Belong",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "memberOfOrgIDs": {
                  "isVirtual": true,
                  "items": {
                    "title": "org identifiers",
                    "type": "string"
                  },
                  "queryConfig": {
                    "flattenProperties": true,
                    "referencedObjectFields": [
                      "_id",
                      "parentIDs"
                    ],
                    "referencedRelationshipFields": [
                      "memberOfOrg"
                    ]
                  },
                  "returnByDefault": true,
                  "searchable": false,
                  "title": "MemberOfOrgIDs",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                },
                "ownerOfOrg": {
                  "items": {
                    "notifySelf": false,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "Organization",
                        "notify": true,
                        "path": "managed/organization",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "owners",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "policies": [],
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Organizations I Own",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "password": {
                  "description": "Password",
                  "encryption": {
                    "purpose": "idm.password.encryption"
                  },
                  "isPersonal": false,
                  "isProtected": true,
                  "policies": [
                    {
                      "params": {
                        "minLength": 8
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "numCaps": 1
                      },
                      "policyId": "at-least-X-capitals"
                    },
                    {
                      "params": {
                        "numNums": 1
                      },
                      "policyId": "at-least-X-numbers"
                    },
                    {
                      "params": {
                        "disallowedFields": [
                          "userName",
                          "givenName",
                          "sn"
                        ]
                      },
                      "policyId": "cannot-contain-others"
                    }
                  ],
                  "scope": "private",
                  "searchable": false,
                  "title": "Password",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": false
                },
                "postalAddress": {
                  "description": "Address 1",
                  "isPersonal": true,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "title": "Address 1",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "postalCode": {
                  "description": "Postal Code",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "title": "Postal Code",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "preferences": {
                  "description": "Preferences",
                  "isPersonal": false,
                  "order": [
                    "updates",
                    "marketing"
                  ],
                  "properties": {
                    "marketing": {
                      "description": "Send me special offers and services",
                      "type": "boolean"
                    },
                    "updates": {
                      "description": "Send me news and updates",
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "searchable": false,
                  "title": "Preferences",
                  "type": "object",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "reports": {
                  "description": "Direct Reports",
                  "isPersonal": false,
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Direct Reports Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "User",
                        "path": "managed/user",
                        "query": {
                          "fields": [
                            "userName",
                            "givenName",
                            "sn"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "manager",
                    "reverseRelationship": true,
                    "title": "Direct Reports Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "returnByDefault": false,
                  "title": "Direct Reports",
                  "type": "array",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "roles": {
                  "description": "Provisioning Roles",
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                  "isPersonal": false,
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_grantType": {
                            "description": "Grant Type",
                            "label": "Grant Type",
                            "type": "string"
                          },
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Provisioning Roles Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "conditionalAssociationField": "condition",
                        "label": "Role",
                        "path": "managed/role",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "members",
                    "reverseRelationship": true,
                    "title": "Provisioning Roles Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "relationshipGrantTemporalConstraintsEnforced": true,
                  "returnByDefault": false,
                  "title": "Provisioning Roles",
                  "type": "array",
                  "usageDescription": "",
                  "userEditable": false,
                  "viewable": true
                },
                "sn": {
                  "description": "Last Name",
                  "isPersonal": true,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "searchable": true,
                  "title": "Last Name",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "stateProvince": {
                  "description": "State/Province",
                  "isPersonal": false,
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "title": "State/Province",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "telephoneNumber": {
                  "description": "Telephone Number",
                  "isPersonal": true,
                  "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                  "policies": [
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "title": "Telephone Number",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                },
                "userName": {
                  "description": "Username",
                  "isPersonal": true,
                  "policies": [
                    {
                      "policyId": "valid-username"
                    },
                    {
                      "params": {
                        "forbiddenChars": [
                          "/"
                        ]
                      },
                      "policyId": "cannot-contain-characters"
                    },
                    {
                      "params": {
                        "minLength": 1
                      },
                      "policyId": "minimum-length"
                    },
                    {
                      "params": {
                        "maxLength": 255
                      },
                      "policyId": "maximum-length"
                    }
                  ],
                  "searchable": true,
                  "title": "Username",
                  "type": "string",
                  "usageDescription": "",
                  "userEditable": true,
                  "viewable": true
                }
              },
              "required": [
                "userName",
                "givenName",
                "sn",
                "mail"
              ],
              "title": "User",
              "type": "object",
              "viewable": true
            }
          },
          {
            "name": "role",
            "onCreate": {
              "globals": {},
              "source": "//asdfasdfadsfasdf",
              "type": "text/javascript"
            },
            "schema": {
              "$schema": "http://forgerock.org/json-schema#",
              "icon": "fa-check-square",
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
              "mat-icon": "assignment_ind",
              "order": [
                "_id",
                "name",
                "description",
                "members",
                "assignments",
                "condition",
                "temporalConstraints"
              ],
              "properties": {
                "_id": {
                  "description": "Role ID",
                  "searchable": false,
                  "title": "Name",
                  "type": "string",
                  "viewable": false
                },
                "assignments": {
                  "description": "Managed Assignments",
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Managed Assignments Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "Assignment",
                        "path": "managed/assignment",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "roles",
                    "reverseRelationship": true,
                    "title": "Managed Assignments Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "notifyRelationships": [
                    "members"
                  ],
                  "returnByDefault": false,
                  "title": "Managed Assignments",
                  "type": "array",
                  "viewable": true
                },
                "condition": {
                  "description": "A conditional filter for this role",
                  "isConditional": true,
                  "searchable": false,
                  "title": "Condition",
                  "type": "string",
                  "viewable": false
                },
                "description": {
                  "description": "The role description, used for display purposes.",
                  "searchable": true,
                  "title": "Description",
                  "type": "string",
                  "viewable": true
                },
                "members": {
                  "description": "Role Members",
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_grantType": {
                            "description": "Grant Type",
                            "label": "Grant Type",
                            "type": "string"
                          },
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Role Members Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "conditionalAssociation": true,
                        "label": "User",
                        "notify": true,
                        "path": "managed/user",
                        "query": {
                          "fields": [
                            "userName",
                            "givenName",
                            "sn"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "roles",
                    "reverseRelationship": true,
                    "title": "Role Members Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "relationshipGrantTemporalConstraintsEnforced": true,
                  "returnByDefault": false,
                  "title": "Role Members",
                  "type": "array",
                  "viewable": true
                },
                "name": {
                  "description": "The role name, used for display purposes.",
                  "policies": [
                    {
                      "policyId": "unique"
                    }
                  ],
                  "searchable": true,
                  "title": "Name",
                  "type": "string",
                  "viewable": true
                },
                "temporalConstraints": {
                  "description": "An array of temporal constraints for a role",
                  "isTemporalConstraint": true,
                  "items": {
                    "order": [
                      "duration"
                    ],
                    "properties": {
                      "duration": {
                        "description": "Duration",
                        "type": "string"
                      }
                    },
                    "required": [
                      "duration"
                    ],
                    "title": "Temporal Constraints Items",
                    "type": "object"
                  },
                  "notifyRelationships": [
                    "members"
                  ],
                  "returnByDefault": true,
                  "title": "Temporal Constraints",
                  "type": "array",
                  "viewable": false
                }
              },
              "required": [
                "name"
              ],
              "title": "Role",
              "type": "object"
            }
          },
          {
            "attributeEncryption": {},
            "name": "assignment",
            "schema": {
              "$schema": "http://forgerock.org/json-schema#",
              "description": "A role assignment",
              "icon": "fa-key",
              "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
              "mat-icon": "vpn_key",
              "order": [
                "_id",
                "name",
                "description",
                "mapping",
                "attributes",
                "linkQualifiers",
                "roles",
                "members",
                "condition",
                "weight"
              ],
              "properties": {
                "_id": {
                  "description": "The assignment ID",
                  "searchable": false,
                  "title": "Name",
                  "type": "string",
                  "viewable": false
                },
                "attributes": {
                  "description": "The attributes operated on by this assignment.",
                  "items": {
                    "order": [
                      "assignmentOperation",
                      "unassignmentOperation",
                      "name",
                      "value"
                    ],
                    "properties": {
                      "assignmentOperation": {
                        "description": "Assignment operation",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name",
                        "type": "string"
                      },
                      "unassignmentOperation": {
                        "description": "Unassignment operation",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value",
                        "type": "string"
                      }
                    },
                    "required": [],
                    "title": "Assignment Attributes Items",
                    "type": "object"
                  },
                  "notifyRelationships": [
                    "roles",
                    "members"
                  ],
                  "title": "Assignment Attributes",
                  "type": "array",
                  "viewable": true
                },
                "condition": {
                  "description": "A conditional filter for this assignment",
                  "isConditional": true,
                  "searchable": false,
                  "title": "Condition",
                  "type": "string",
                  "viewable": false
                },
                "description": {
                  "description": "The assignment description, used for display purposes.",
                  "searchable": true,
                  "title": "Description",
                  "type": "string",
                  "viewable": true
                },
                "linkQualifiers": {
                  "description": "Conditional link qualifiers to restrict this assignment to.",
                  "items": {
                    "title": "Link Qualifiers Items",
                    "type": "string"
                  },
                  "title": "Link Qualifiers",
                  "type": "array",
                  "viewable": true
                },
                "mapping": {
                  "description": "The name of the mapping this assignment applies to",
                  "policies": [
                    {
                      "policyId": "mapping-exists"
                    }
                  ],
                  "searchable": true,
                  "title": "Mapping",
                  "type": "string",
                  "viewable": true
                },
                "members": {
                  "description": "Assignment Members",
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:members:items",
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_grantType": {
                            "description": "Grant Type",
                            "label": "Grant Type",
                            "type": "string"
                          },
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Assignment Members Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "conditionalAssociation": true,
                        "label": "User",
                        "notify": true,
                        "path": "managed/user",
                        "query": {
                          "fields": [
                            "userName",
                            "givenName",
                            "sn"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "assignments",
                    "reverseRelationship": true,
                    "title": "Assignment Members Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "returnByDefault": false,
                  "title": "Assignment Members",
                  "type": "array",
                  "viewable": true
                },
                "name": {
                  "description": "The assignment name, used for display purposes.",
                  "searchable": true,
                  "title": "Name",
                  "type": "string",
                  "viewable": true
                },
                "roles": {
                  "description": "Managed Roles",
                  "items": {
                    "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                    "properties": {
                      "_ref": {
                        "description": "References a relationship from a managed object",
                        "type": "string"
                      },
                      "_refProperties": {
                        "description": "Supports metadata within the relationship",
                        "properties": {
                          "_id": {
                            "description": "_refProperties object ID",
                            "type": "string"
                          }
                        },
                        "title": "Managed Roles Items _refProperties",
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "Role",
                        "notify": true,
                        "path": "managed/role",
                        "query": {
                          "fields": [
                            "name"
                          ],
                          "queryFilter": "true"
                        }
                      }
                    ],
                    "reversePropertyName": "assignments",
                    "reverseRelationship": true,
                    "title": "Managed Roles Items",
                    "type": "relationship",
                    "validate": true
                  },
                  "returnByDefault": false,
                  "title": "Managed Roles",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "weight": {
                  "description": "The weight of the assignment.",
                  "notifyRelationships": [
                    "roles",
                    "members"
                  ],
                  "searchable": false,
                  "title": "Weight",
                  "type": [
                    "number",
                    "null"
                  ],
                  "viewable": true
                }
              },
              "required": [
                "name",
                "description",
                "mapping"
              ],
              "title": "Assignment",
              "type": "object"
            }
          },
          {
            "name": "organization",
            "onCreate": {
              "globals": {},
              "source": "//seantest",
              "type": "text/javascript"
            },
            "onRead": {
              "globals": {},
              "source": "//seantest",
              "type": "groovy"
            },
            "schema": {
              "$schema": "http://forgerock.org/json-schema#",
              "description": "An organization or tenant, whose resources are managed by organizational admins.",
              "icon": "fa-building",
              "mat-icon": "domain",
              "order": [
                "name",
                "description",
                "owners",
                "admins",
                "members",
                "parent",
                "children",
                "adminIDs",
                "ownerIDs",
                "parentAdminIDs",
                "parentOwnerIDs",
                "parentIDs"
              ],
              "properties": {
                "adminIDs": {
                  "isVirtual": true,
                  "items": {
                    "title": "admin ids",
                    "type": "string"
                  },
                  "queryConfig": {
                    "flattenProperties": true,
                    "referencedObjectFields": [
                      "_id"
                    ],
                    "referencedRelationshipFields": [
                      "admins"
                    ]
                  },
                  "returnByDefault": true,
                  "searchable": false,
                  "title": "Admin user ids",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                },
                "admins": {
                  "items": {
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "User",
                        "notify": false,
                        "path": "managed/user",
                        "query": {
                          "fields": [
                            "userName",
                            "givenName",
                            "sn"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "adminOfOrg",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "notifyRelationships": [
                    "children"
                  ],
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Administrators",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "children": {
                  "description": "Child Organizations",
                  "items": {
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "Organization",
                        "notify": true,
                        "path": "managed/organization",
                        "query": {
                          "fields": [
                            "name",
                            "description"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "parent",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "policies": [],
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Child Organizations",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                },
                "description": {
                  "searchable": true,
                  "title": "Description",
                  "type": "string",
                  "userEditable": true,
                  "viewable": true
                },
                "members": {
                  "items": {
                    "notifySelf": false,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "User",
                        "notify": true,
                        "path": "managed/user",
                        "query": {
                          "fields": [
                            "userName",
                            "givenName",
                            "sn"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "memberOfOrg",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Members",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "name": {
                  "searchable": true,
                  "title": "Name",
                  "type": "string",
                  "userEditable": true,
                  "viewable": true
                },
                "ownerIDs": {
                  "isVirtual": true,
                  "items": {
                    "title": "owner ids",
                    "type": "string"
                  },
                  "queryConfig": {
                    "flattenProperties": true,
                    "referencedObjectFields": [
                      "_id"
                    ],
                    "referencedRelationshipFields": [
                      "owners"
                    ]
                  },
                  "returnByDefault": true,
                  "searchable": false,
                  "title": "Owner user ids",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                },
                "owners": {
                  "items": {
                    "notifySelf": true,
                    "properties": {
                      "_ref": {
                        "type": "string"
                      },
                      "_refProperties": {
                        "properties": {
                          "_id": {
                            "propName": "_id",
                            "required": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "resourceCollection": [
                      {
                        "label": "User",
                        "notify": false,
                        "path": "managed/user",
                        "query": {
                          "fields": [
                            "userName",
                            "givenName",
                            "sn"
                          ],
                          "queryFilter": "true",
                          "sortKeys": []
                        }
                      }
                    ],
                    "reversePropertyName": "ownerOfOrg",
                    "reverseRelationship": true,
                    "type": "relationship",
                    "validate": true
                  },
                  "notifyRelationships": [
                    "children"
                  ],
                  "returnByDefault": false,
                  "searchable": false,
                  "title": "Owner",
                  "type": "array",
                  "userEditable": false,
                  "viewable": true
                },
                "parent": {
                  "description": "Parent Organization",
                  "notifyRelationships": [
                    "children",
                    "members"
                  ],
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string"
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/organization",
                      "query": {
                        "fields": [
                          "name",
                          "description"
                        ],
                        "queryFilter": "true",
                        "sortKeys": []
                      }
                    }
                  ],
                  "returnByDefault": false,
                  "reversePropertyName": "children",
                  "reverseRelationship": true,
                  "searchable": false,
                  "title": "Parent Organization",
                  "type": "relationship",
                  "userEditable": false,
                  "validate": true,
                  "viewable": true
                },
                "parentAdminIDs": {
                  "isVirtual": true,
                  "items": {
                    "title": "user ids of parent admins",
                    "type": "string"
                  },
                  "queryConfig": {
                    "flattenProperties": true,
                    "referencedObjectFields": [
                      "adminIDs",
                      "parentAdminIDs"
                    ],
                    "referencedRelationshipFields": [
                      "parent"
                    ]
                  },
                  "returnByDefault": true,
                  "searchable": false,
                  "title": "user ids of parent admins",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                },
                "parentIDs": {
                  "isVirtual": true,
                  "items": {
                    "title": "parent org ids",
                    "type": "string"
                  },
                  "queryConfig": {
                    "flattenProperties": true,
                    "referencedObjectFields": [
                      "_id",
                      "parentIDs"
                    ],
                    "referencedRelationshipFields": [
                      "parent"
                    ]
                  },
                  "returnByDefault": true,
                  "searchable": false,
                  "title": "parent org ids",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                },
                "parentOwnerIDs": {
                  "isVirtual": true,
                  "items": {
                    "title": "user ids of parent owners",
                    "type": "string"
                  },
                  "queryConfig": {
                    "flattenProperties": true,
                    "referencedObjectFields": [
                      "ownerIDs",
                      "parentOwnerIDs"
                    ],
                    "referencedRelationshipFields": [
                      "parent"
                    ]
                  },
                  "returnByDefault": true,
                  "searchable": false,
                  "title": "user ids of parent owners",
                  "type": "array",
                  "userEditable": false,
                  "viewable": false
                }
              },
              "required": [
                "name"
              ],
              "title": "Organization",
              "type": "object"
            }
          },
          {
            "name": "seantestmanagedobject",
            "schema": {
              "description": null,
              "icon": "fa-database",
              "mat-icon": null,
              "title": null
            }
          }
        ]
      },
      "metrics": {
        "_id": "metrics",
        "enabled": false
      },
      "notification/passwordUpdate": {
        "_id": "notification/passwordUpdate",
        "condition": {
          "file": "propertiesModifiedFilter.groovy",
          "globals": {
            "propertiesToCheck": [
              "password"
            ]
          },
          "type": "groovy"
        },
        "enabled": {
          "$bool": "&{openidm.notifications.passwordUpdate|false}"
        },
        "methods": [
          "update",
          "patch"
        ],
        "notification": {
          "message": "Your password has been updated.",
          "notificationType": "info"
        },
        "path": "managed/user/*",
        "target": {
          "resource": "managed/user/{{response/_id}}"
        }
      },
      "notification/profileUpdate": {
        "_id": "notification/profileUpdate",
        "condition": {
          "file": "propertiesModifiedFilter.groovy",
          "globals": {
            "propertiesToCheck": [
              "userName",
              "givenName",
              "sn",
              "mail",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "preferences"
            ]
          },
          "type": "groovy"
        },
        "enabled": {
          "$bool": "&{openidm.notifications.profileUpdate|false}"
        },
        "methods": [
          "update",
          "patch"
        ],
        "notification": {
          "message": "Your profile has been updated.",
          "notificationType": "info"
        },
        "path": "managed/user/*",
        "target": {
          "resource": "managed/user/{{response/_id}}"
        }
      },
      "notificationFactory": {
        "_id": "notificationFactory",
        "enabled": {
          "$bool": "&{openidm.notifications|false}"
        },
        "threadPool": {
          "maxPoolThreads": 2,
          "maxQueueSize": 20000,
          "steadyPoolThreads": 1,
          "threadKeepAlive": 60
        }
      },
      "policy": {
        "_id": "policy",
        "additionalFiles": [],
        "file": "policy.js",
        "resources": [
          {
            "calculatedProperties": {
              "source": "require('selfServicePolicies').getRegistrationProperties()",
              "type": "text/javascript"
            },
            "resource": "selfservice/registration"
          },
          {
            "calculatedProperties": {
              "source": "require('selfServicePolicies').getResetProperties()",
              "type": "text/javascript"
            },
            "resource": "selfservice/reset"
          },
          {
            "properties": [
              {
                "name": "_id",
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  }
                ]
              },
              {
                "name": "password",
                "policies": [
                  {
                    "params": {
                      "minLength": 8
                    },
                    "policyId": "minimum-length"
                  }
                ]
              }
            ],
            "resource": "internal/user/*"
          },
          {
            "properties": [
              {
                "name": "name",
                "policies": [
                  {
                    "policyId": "required"
                  },
                  {
                    "policyId": "not-empty"
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*"
                      ]
                    },
                    "policyId": "cannot-contain-characters"
                  }
                ]
              },
              {
                "name": "temporalConstraints",
                "policies": [
                  {
                    "policyId": "valid-temporal-constraints"
                  }
                ]
              },
              {
                "name": "condition",
                "policies": [
                  {
                    "policyId": "valid-query-filter"
                  }
                ]
              },
              {
                "name": "privileges",
                "policies": [
                  {
                    "params": {
                      "types": [
                        "array"
                      ]
                    },
                    "policyId": "valid-type"
                  },
                  {
                    "params": {
                      "properties": [
                        {
                          "name": "name",
                          "policies": [
                            {
                              "policyId": "required"
                            },
                            {
                              "policyId": "not-empty"
                            },
                            {
                              "params": {
                                "types": [
                                  "string"
                                ]
                              },
                              "policyId": "valid-type"
                            }
                          ]
                        },
                        {
                          "name": "path",
                          "policies": [
                            {
                              "policyId": "required"
                            },
                            {
                              "policyId": "not-empty"
                            },
                            {
                              "params": {
                                "forbiddenChars": [
                                  "/*"
                                ]
                              },
                              "policyId": "cannot-contain-characters"
                            },
                            {
                              "policyId": "valid-privilege-path"
                            }
                          ]
                        },
                        {
                          "name": "accessFlags",
                          "policies": [
                            {
                              "policyId": "required"
                            },
                            {
                              "policyId": "not-empty"
                            },
                            {
                              "params": {
                                "types": [
                                  "array"
                                ]
                              },
                              "policyId": "valid-type"
                            },
                            {
                              "policyId": "valid-accessFlags-object"
                            }
                          ]
                        },
                        {
                          "name": "actions",
                          "policies": [
                            {
                              "policyId": "required"
                            },
                            {
                              "params": {
                                "types": [
                                  "array"
                                ]
                              },
                              "policyId": "valid-type"
                            }
                          ]
                        },
                        {
                          "name": "permissions",
                          "policies": [
                            {
                              "policyId": "required"
                            },
                            {
                              "policyId": "not-empty"
                            },
                            {
                              "params": {
                                "types": [
                                  "array"
                                ]
                              },
                              "policyId": "valid-type"
                            },
                            {
                              "policyId": "valid-permissions"
                            }
                          ]
                        },
                        {
                          "name": "filter",
                          "policies": [
                            {
                              "params": {
                                "types": [
                                  "string",
                                  "null"
                                ]
                              },
                              "policyId": "valid-type"
                            },
                            {
                              "policyId": "valid-query-filter"
                            }
                          ]
                        }
                      ]
                    },
                    "policyId": "valid-array-items"
                  }
                ]
              }
            ],
            "resource": "internal/role/*"
          },
          {
            "properties": [
              {
                "name": "temporalConstraints",
                "policies": [
                  {
                    "policyId": "valid-temporal-constraints"
                  }
                ]
              },
              {
                "name": "condition",
                "policies": [
                  {
                    "policyId": "valid-query-filter"
                  }
                ]
              }
            ],
            "resource": "managed/role/*"
          },
          {
            "properties": [
              {
                "name": "objects",
                "policies": [
                  {
                    "policyId": "valid-event-scripts"
                  }
                ]
              }
            ],
            "resource": "config/managed"
          }
        ],
        "type": "text/javascript"
      },
      "privilegeAssignments": {
        "_id": "privilegeAssignments",
        "privilegeAssignments": [
          {
            "name": "ownerPrivileges",
            "privileges": [
              "owner-view-update-delete-orgs",
              "owner-create-orgs",
              "owner-view-update-delete-admins-and-members",
              "owner-create-admins",
              "admin-view-update-delete-members",
              "admin-create-members"
            ],
            "relationshipField": "ownerOfOrg"
          },
          {
            "name": "adminPrivileges",
            "privileges": [
              "admin-view-update-delete-orgs",
              "admin-create-orgs",
              "admin-view-update-delete-members",
              "admin-create-members"
            ],
            "relationshipField": "adminOfOrg"
          }
        ]
      },
      "privileges": {
        "_id": "privileges",
        "privileges": [
          {
            "accessFlags": [
              {
                "attribute": "name",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "owners",
                "readOnly": true
              },
              {
                "attribute": "admins",
                "readOnly": false
              },
              {
                "attribute": "members",
                "readOnly": false
              },
              {
                "attribute": "parent",
                "readOnly": false
              },
              {
                "attribute": "children",
                "readOnly": false
              },
              {
                "attribute": "parentIDs",
                "readOnly": true
              },
              {
                "attribute": "adminIDs",
                "readOnly": true
              },
              {
                "attribute": "parentAdminIDs",
                "readOnly": true
              },
              {
                "attribute": "ownerIDs",
                "readOnly": true
              },
              {
                "attribute": "parentOwnerIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/ownerIDs eq \"{{_id}}\" or /parentOwnerIDs eq \"{{_id}}\"",
            "name": "owner-view-update-delete-orgs",
            "path": "managed/organization",
            "permissions": [
              "VIEW",
              "UPDATE",
              "DELETE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "name",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "owners",
                "readOnly": true
              },
              {
                "attribute": "admins",
                "readOnly": false
              },
              {
                "attribute": "members",
                "readOnly": false
              },
              {
                "attribute": "parent",
                "readOnly": false
              },
              {
                "attribute": "children",
                "readOnly": false
              },
              {
                "attribute": "parentIDs",
                "readOnly": true
              },
              {
                "attribute": "adminIDs",
                "readOnly": true
              },
              {
                "attribute": "parentAdminIDs",
                "readOnly": true
              },
              {
                "attribute": "ownerIDs",
                "readOnly": true
              },
              {
                "attribute": "parentOwnerIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/parent pr",
            "name": "owner-create-orgs",
            "path": "managed/organization",
            "permissions": [
              "CREATE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "userName",
                "readOnly": false
              },
              {
                "attribute": "password",
                "readOnly": false
              },
              {
                "attribute": "givenName",
                "readOnly": false
              },
              {
                "attribute": "sn",
                "readOnly": false
              },
              {
                "attribute": "mail",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "accountStatus",
                "readOnly": false
              },
              {
                "attribute": "telephoneNumber",
                "readOnly": false
              },
              {
                "attribute": "postalAddress",
                "readOnly": false
              },
              {
                "attribute": "city",
                "readOnly": false
              },
              {
                "attribute": "postalCode",
                "readOnly": false
              },
              {
                "attribute": "country",
                "readOnly": false
              },
              {
                "attribute": "stateProvince",
                "readOnly": false
              },
              {
                "attribute": "roles",
                "readOnly": false
              },
              {
                "attribute": "manager",
                "readOnly": false
              },
              {
                "attribute": "authzRoles",
                "readOnly": false
              },
              {
                "attribute": "reports",
                "readOnly": false
              },
              {
                "attribute": "effectiveRoles",
                "readOnly": false
              },
              {
                "attribute": "effectiveAssignments",
                "readOnly": false
              },
              {
                "attribute": "lastSync",
                "readOnly": false
              },
              {
                "attribute": "kbaInfo",
                "readOnly": false
              },
              {
                "attribute": "preferences",
                "readOnly": false
              },
              {
                "attribute": "consentedMappings",
                "readOnly": false
              },
              {
                "attribute": "memberOfOrg",
                "readOnly": false
              },
              {
                "attribute": "adminOfOrg",
                "readOnly": false
              },
              {
                "attribute": "ownerOfOrg",
                "readOnly": true
              },
              {
                "attribute": "memberOfOrgIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/memberOfOrgIDs eq \"__org_id_placeholder__\"",
            "name": "owner-view-update-delete-admins-and-members",
            "path": "managed/user",
            "permissions": [
              "VIEW",
              "DELETE",
              "UPDATE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "userName",
                "readOnly": false
              },
              {
                "attribute": "password",
                "readOnly": false
              },
              {
                "attribute": "givenName",
                "readOnly": false
              },
              {
                "attribute": "sn",
                "readOnly": false
              },
              {
                "attribute": "mail",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "accountStatus",
                "readOnly": false
              },
              {
                "attribute": "telephoneNumber",
                "readOnly": false
              },
              {
                "attribute": "postalAddress",
                "readOnly": false
              },
              {
                "attribute": "city",
                "readOnly": false
              },
              {
                "attribute": "postalCode",
                "readOnly": false
              },
              {
                "attribute": "country",
                "readOnly": false
              },
              {
                "attribute": "stateProvince",
                "readOnly": false
              },
              {
                "attribute": "roles",
                "readOnly": false
              },
              {
                "attribute": "manager",
                "readOnly": false
              },
              {
                "attribute": "authzRoles",
                "readOnly": false
              },
              {
                "attribute": "reports",
                "readOnly": false
              },
              {
                "attribute": "effectiveRoles",
                "readOnly": false
              },
              {
                "attribute": "effectiveAssignments",
                "readOnly": false
              },
              {
                "attribute": "lastSync",
                "readOnly": false
              },
              {
                "attribute": "kbaInfo",
                "readOnly": false
              },
              {
                "attribute": "preferences",
                "readOnly": false
              },
              {
                "attribute": "consentedMappings",
                "readOnly": false
              },
              {
                "attribute": "memberOfOrg",
                "readOnly": false
              },
              {
                "attribute": "adminOfOrg",
                "readOnly": false
              },
              {
                "attribute": "ownerOfOrg",
                "readOnly": true
              },
              {
                "attribute": "memberOfOrgIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
            "name": "owner-create-admins",
            "path": "managed/user",
            "permissions": [
              "CREATE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "name",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "owners",
                "readOnly": true
              },
              {
                "attribute": "admins",
                "readOnly": true
              },
              {
                "attribute": "members",
                "readOnly": false
              },
              {
                "attribute": "parent",
                "readOnly": false
              },
              {
                "attribute": "children",
                "readOnly": false
              },
              {
                "attribute": "parentIDs",
                "readOnly": true
              },
              {
                "attribute": "adminIDs",
                "readOnly": true
              },
              {
                "attribute": "parentAdminIDs",
                "readOnly": true
              },
              {
                "attribute": "ownerIDs",
                "readOnly": true
              },
              {
                "attribute": "parentOwnerIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/adminIDs eq \"{{_id}}\" or /parentAdminIDs eq \"{{_id}}\"",
            "name": "admin-view-update-delete-orgs",
            "path": "managed/organization",
            "permissions": [
              "VIEW",
              "UPDATE",
              "DELETE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "name",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "owners",
                "readOnly": true
              },
              {
                "attribute": "admins",
                "readOnly": true
              },
              {
                "attribute": "members",
                "readOnly": false
              },
              {
                "attribute": "parent",
                "readOnly": false
              },
              {
                "attribute": "children",
                "readOnly": false
              },
              {
                "attribute": "parentIDs",
                "readOnly": true
              },
              {
                "attribute": "adminIDs",
                "readOnly": true
              },
              {
                "attribute": "parentAdminIDs",
                "readOnly": true
              },
              {
                "attribute": "ownerIDs",
                "readOnly": true
              },
              {
                "attribute": "parentOwnerIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/parent pr",
            "name": "admin-create-orgs",
            "path": "managed/organization",
            "permissions": [
              "CREATE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "userName",
                "readOnly": false
              },
              {
                "attribute": "password",
                "readOnly": false
              },
              {
                "attribute": "givenName",
                "readOnly": false
              },
              {
                "attribute": "sn",
                "readOnly": false
              },
              {
                "attribute": "mail",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "accountStatus",
                "readOnly": false
              },
              {
                "attribute": "telephoneNumber",
                "readOnly": false
              },
              {
                "attribute": "postalAddress",
                "readOnly": false
              },
              {
                "attribute": "city",
                "readOnly": false
              },
              {
                "attribute": "postalCode",
                "readOnly": false
              },
              {
                "attribute": "country",
                "readOnly": false
              },
              {
                "attribute": "stateProvince",
                "readOnly": false
              },
              {
                "attribute": "roles",
                "readOnly": false
              },
              {
                "attribute": "manager",
                "readOnly": false
              },
              {
                "attribute": "authzRoles",
                "readOnly": false
              },
              {
                "attribute": "reports",
                "readOnly": false
              },
              {
                "attribute": "effectiveRoles",
                "readOnly": false
              },
              {
                "attribute": "effectiveAssignments",
                "readOnly": false
              },
              {
                "attribute": "lastSync",
                "readOnly": false
              },
              {
                "attribute": "kbaInfo",
                "readOnly": false
              },
              {
                "attribute": "preferences",
                "readOnly": false
              },
              {
                "attribute": "consentedMappings",
                "readOnly": false
              },
              {
                "attribute": "memberOfOrg",
                "readOnly": false
              },
              {
                "attribute": "adminOfOrg",
                "readOnly": true
              },
              {
                "attribute": "ownerOfOrg",
                "readOnly": true
              },
              {
                "attribute": "memberOfOrgIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/memberOfOrgIDs eq \"__org_id_placeholder__\"",
            "name": "admin-view-update-delete-members",
            "path": "managed/user",
            "permissions": [
              "VIEW",
              "DELETE",
              "UPDATE"
            ]
          },
          {
            "accessFlags": [
              {
                "attribute": "userName",
                "readOnly": false
              },
              {
                "attribute": "password",
                "readOnly": false
              },
              {
                "attribute": "givenName",
                "readOnly": false
              },
              {
                "attribute": "sn",
                "readOnly": false
              },
              {
                "attribute": "mail",
                "readOnly": false
              },
              {
                "attribute": "description",
                "readOnly": false
              },
              {
                "attribute": "accountStatus",
                "readOnly": false
              },
              {
                "attribute": "telephoneNumber",
                "readOnly": false
              },
              {
                "attribute": "postalAddress",
                "readOnly": false
              },
              {
                "attribute": "city",
                "readOnly": false
              },
              {
                "attribute": "postalCode",
                "readOnly": false
              },
              {
                "attribute": "country",
                "readOnly": false
              },
              {
                "attribute": "stateProvince",
                "readOnly": false
              },
              {
                "attribute": "roles",
                "readOnly": false
              },
              {
                "attribute": "manager",
                "readOnly": false
              },
              {
                "attribute": "authzRoles",
                "readOnly": false
              },
              {
                "attribute": "reports",
                "readOnly": false
              },
              {
                "attribute": "effectiveRoles",
                "readOnly": false
              },
              {
                "attribute": "effectiveAssignments",
                "readOnly": false
              },
              {
                "attribute": "lastSync",
                "readOnly": false
              },
              {
                "attribute": "kbaInfo",
                "readOnly": false
              },
              {
                "attribute": "preferences",
                "readOnly": false
              },
              {
                "attribute": "consentedMappings",
                "readOnly": false
              },
              {
                "attribute": "memberOfOrg",
                "readOnly": false
              },
              {
                "attribute": "adminOfOrg",
                "readOnly": true
              },
              {
                "attribute": "ownerOfOrg",
                "readOnly": true
              },
              {
                "attribute": "memberOfOrgIDs",
                "readOnly": true
              }
            ],
            "actions": [],
            "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
            "name": "admin-create-members",
            "path": "managed/user",
            "permissions": [
              "CREATE"
            ]
          }
        ]
      },
      "process/access": {
        "_id": "process/access",
        "workflowAccess": [
          {
            "propertiesCheck": {
              "matches": ".*",
              "property": "_id",
              "requiresRole": "internal/role/openidm-authorized"
            }
          },
          {
            "propertiesCheck": {
              "matches": ".*",
              "property": "_id",
              "requiresRole": "internal/role/openidm-admin"
            }
          }
        ]
      },
      "repo.ds": {
        "_id": "repo.ds",
        "commands": {
          "delete-mapping-links": {
            "_queryFilter": "/linkType eq \"${mapping}\"",
            "operation": "DELETE"
          },
          "delete-target-ids-for-recon": {
            "_queryFilter": "/reconId eq \"${reconId}\"",
            "operation": "DELETE"
          }
        },
        "embedded": false,
        "ldapConnectionFactories": {
          "bind": {
            "connectionPoolSize": 50,
            "connectionSecurity": "startTLS",
            "heartBeatIntervalSeconds": 60,
            "heartBeatTimeoutMilliSeconds": 10000,
            "primaryLdapServers": [
              {
                "hostname": "opendj-frodo-dev.classic.com",
                "port": 2389
              }
            ],
            "secondaryLdapServers": []
          },
          "root": {
            "authentication": {
              "simple": {
                "bindDn": "uid=admin",
                "bindPassword": {
                  "$crypto": {
                    "type": "x-simple-encryption",
                    "value": {
                      "cipher": "AES/CBC/PKCS5Padding",
                      "data": "lJ/B6T9e9CDKHCN8TxkD4g==",
                      "iv": "EdrerzwEUUkHG582cLDw5w==",
                      "keySize": 32,
                      "mac": "Aty9fXUtl4pexGlHOc+CBg==",
                      "purpose": "idm.config.encryption",
                      "salt": "BITSKlnPeT5klcuEZbngzw==",
                      "stableId": "openidm-sym-default"
                    }
                  }
                }
              }
            },
            "inheritFrom": "bind"
          }
        },
        "maxConnectionAttempts": 5,
        "resourceMapping": {
          "defaultMapping": {
            "dnTemplate": "ou=generic,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
          },
          "explicitMapping": {
            "clusteredrecontargetids": {
              "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "objectClasses": [
                "uidObject",
                "fr-idm-recon-clusteredTargetIds"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "uid",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "reconId": {
                  "ldapAttribute": "fr-idm-recon-id",
                  "type": "simple"
                },
                "targetIds": {
                  "ldapAttribute": "fr-idm-recon-targetIds",
                  "type": "json"
                }
              }
            },
            "dsconfig/attributeValue": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-attribute-value-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "checkSubstrings": {
                  "ldapAttribute": "ds-cfg-check-substrings",
                  "type": "simple"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "matchAttribute": {
                  "isMultiValued": true,
                  "ldapAttribute": "ds-cfg-match-attribute",
                  "type": "simple"
                },
                "minSubstringLength": {
                  "ldapAttribute": "ds-cfg-min-substring-length",
                  "type": "simple"
                },
                "testReversedPassword": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-test-reversed-password",
                  "type": "simple"
                }
              }
            },
            "dsconfig/characterSet": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-character-set-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "allowUnclassifiedCharacters": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                  "type": "simple"
                },
                "characterSet": {
                  "isMultiValued": true,
                  "ldapAttribute": "ds-cfg-character-set",
                  "type": "simple"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "minCharacterSets": {
                  "ldapAttribute": "ds-cfg-min-character-sets",
                  "type": "simple"
                }
              }
            },
            "dsconfig/dictionary": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-dictionary-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "caseSensitiveValidation": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-case-sensitive-validation",
                  "type": "simple"
                },
                "checkSubstrings": {
                  "ldapAttribute": "ds-cfg-check-substrings",
                  "type": "simple"
                },
                "dictionaryFile": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-dictionary-file",
                  "type": "simple"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "minSubstringLength": {
                  "ldapAttribute": "ds-cfg-min-substring-length",
                  "type": "simple"
                },
                "testReversedPassword": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-test-reversed-password",
                  "type": "simple"
                }
              }
            },
            "dsconfig/lengthBased": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-length-based-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "maxPasswordLength": {
                  "ldapAttribute": "ds-cfg-max-password-length",
                  "type": "simple"
                },
                "minPasswordLength": {
                  "ldapAttribute": "ds-cfg-min-password-length",
                  "type": "simple"
                }
              }
            },
            "dsconfig/passwordPolicies": {
              "dnTemplate": "cn=Password Policies,cn=config",
              "objectClasses": [
                "ds-cfg-password-policy",
                "ds-cfg-authentication-policy"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "defaultPasswordStorageScheme": {
                  "isMultiValued": true,
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                  "type": "simple"
                },
                "maxPasswordAge": {
                  "ldapAttribute": "ds-cfg-max-password-age",
                  "type": "simple"
                },
                "passwordAttribute": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-password-attribute",
                  "type": "simple"
                },
                "passwordHistoryCount": {
                  "ldapAttribute": "ds-cfg-password-history-count",
                  "type": "simple"
                },
                "validator": {
                  "isMultiValued": true,
                  "ldapAttribute": "ds-cfg-password-validator",
                  "type": "simple"
                }
              }
            },
            "dsconfig/repeatedCharacters": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-repeated-characters-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "caseSensitiveValidation": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-case-sensitive-validation",
                  "type": "simple"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "maxConsecutiveLength": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-max-consecutive-length",
                  "type": "simple"
                }
              }
            },
            "dsconfig/similarityBased": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-similarity-based-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "minPasswordDifference": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-min-password-difference",
                  "type": "simple"
                }
              }
            },
            "dsconfig/uniqueCharacters": {
              "dnTemplate": "cn=Password Validators,cn=config",
              "objectClasses": [
                "ds-cfg-password-validator",
                "ds-cfg-unique-characters-password-validator"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "caseSensitiveValidation": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-case-sensitive-validation",
                  "type": "simple"
                },
                "enabled": {
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "javaClass": {
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "minUniqueCharacters": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-min-unique-characters",
                  "type": "simple"
                }
              }
            },
            "dsconfig/userDefinedVirtualAttribute": {
              "dnTemplate": "cn=Virtual Attributes,cn=config",
              "objectClasses": [
                "ds-cfg-user-defined-virtual-attribute",
                "ds-cfg-virtual-attribute"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "attributeType": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-attribute-type",
                  "type": "simple"
                },
                "baseDn": {
                  "isMultiValued": true,
                  "ldapAttribute": "ds-cfg-base-dn",
                  "type": "simple"
                },
                "conflictBehavior": {
                  "ldapAttribute": "ds-cfg-conflict-behavior",
                  "type": "simple"
                },
                "enabled": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-enabled",
                  "type": "simple"
                },
                "filter": {
                  "isMultiValued": true,
                  "ldapAttribute": "ds-cfg-filter",
                  "type": "simple"
                },
                "groupDn": {
                  "ldapAttribute": "ds-cfg-group-dn",
                  "type": "simple"
                },
                "javaClass": {
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-java-class",
                  "type": "simple"
                },
                "scope": {
                  "ldapAttribute": "ds-cfg-scope",
                  "type": "simple"
                },
                "value": {
                  "isMultiValued": true,
                  "isRequired": true,
                  "ldapAttribute": "ds-cfg-value",
                  "type": "simple"
                }
              }
            },
            "internal/role": {
              "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "objectClasses": [
                "fr-idm-internal-role"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "cn",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "authzMembers": {
                  "isMultiValued": true,
                  "propertyName": "authzRoles",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                },
                "condition": {
                  "ldapAttribute": "fr-idm-condition",
                  "type": "simple"
                },
                "description": {
                  "ldapAttribute": "description",
                  "type": "simple"
                },
                "name": {
                  "ldapAttribute": "fr-idm-name",
                  "type": "simple"
                },
                "privileges": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-privilege",
                  "type": "json"
                },
                "temporalConstraints": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-temporal-constraints",
                  "type": "json"
                }
              }
            },
            "internal/user": {
              "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "objectClasses": [
                "uidObject",
                "fr-idm-internal-user"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "uid",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "password": {
                  "ldapAttribute": "fr-idm-password",
                  "type": "json"
                }
              }
            },
            "link": {
              "dnTemplate": "ou=links,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "objectClasses": [
                "uidObject",
                "fr-idm-link"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "uid",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "firstId": {
                  "ldapAttribute": "fr-idm-link-firstId",
                  "type": "simple"
                },
                "linkQualifier": {
                  "ldapAttribute": "fr-idm-link-qualifier",
                  "type": "simple"
                },
                "linkType": {
                  "ldapAttribute": "fr-idm-link-type",
                  "type": "simple"
                },
                "secondId": {
                  "ldapAttribute": "fr-idm-link-secondId",
                  "type": "simple"
                }
              }
            },
            "locks": {
              "dnTemplate": "ou=locks,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "objectClasses": [
                "uidObject",
                "fr-idm-lock"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "uid",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "nodeId": {
                  "ldapAttribute": "fr-idm-lock-nodeid",
                  "type": "simple"
                }
              }
            },
            "recon/assoc": {
              "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "namingStrategy": {
                "dnAttribute": "fr-idm-reconassoc-reconid",
                "type": "clientDnNaming"
              },
              "objectClasses": [
                "fr-idm-reconassoc"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "fr-idm-reconassoc-reconid",
                  "type": "simple"
                },
                "finishTime": {
                  "ldapAttribute": "fr-idm-reconassoc-finishtime",
                  "type": "simple"
                },
                "isAnalysis": {
                  "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                  "type": "simple"
                },
                "mapping": {
                  "ldapAttribute": "fr-idm-reconassoc-mapping",
                  "type": "simple"
                },
                "sourceResourceCollection": {
                  "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                  "type": "simple"
                },
                "targetResourceCollection": {
                  "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                  "type": "simple"
                }
              },
              "subResources": {
                "entry": {
                  "namingStrategy": {
                    "dnAttribute": "uid",
                    "type": "clientDnNaming"
                  },
                  "resource": "recon-assoc-entry",
                  "type": "collection"
                }
              }
            },
            "recon/assoc/entry": {
              "objectClasses": [
                "uidObject",
                "fr-idm-reconassocentry"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "uid",
                  "type": "simple"
                },
                "action": {
                  "ldapAttribute": "fr-idm-reconassocentry-action",
                  "type": "simple"
                },
                "ambiguousTargetObjectIds": {
                  "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                  "type": "simple"
                },
                "exception": {
                  "ldapAttribute": "fr-idm-reconassocentry-exception",
                  "type": "simple"
                },
                "isAnalysis": {
                  "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                  "type": "simple"
                },
                "linkQualifier": {
                  "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                  "type": "simple"
                },
                "mapping": {
                  "ldapAttribute": "fr-idm-reconassoc-mapping",
                  "type": "simple"
                },
                "message": {
                  "ldapAttribute": "fr-idm-reconassocentry-message",
                  "type": "simple"
                },
                "messageDetail": {
                  "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                  "type": "simple"
                },
                "phase": {
                  "ldapAttribute": "fr-idm-reconassocentry-phase",
                  "type": "simple"
                },
                "reconId": {
                  "ldapAttribute": "fr-idm-reconassocentry-reconid",
                  "type": "simple"
                },
                "situation": {
                  "ldapAttribute": "fr-idm-reconassocentry-situation",
                  "type": "simple"
                },
                "sourceObjectId": {
                  "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                  "type": "simple"
                },
                "sourceResourceCollection": {
                  "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                  "type": "simple"
                },
                "status": {
                  "ldapAttribute": "fr-idm-reconassocentry-status",
                  "type": "simple"
                },
                "targetObjectId": {
                  "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                  "type": "simple"
                },
                "targetResourceCollection": {
                  "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                  "type": "simple"
                }
              },
              "resourceName": "recon-assoc-entry",
              "subResourceRouting": [
                {
                  "prefix": "entry",
                  "template": "recon/assoc/{reconId}/entry"
                }
              ]
            },
            "sync/queue": {
              "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "objectClasses": [
                "uidObject",
                "fr-idm-syncqueue"
              ],
              "properties": {
                "_id": {
                  "isRequired": true,
                  "ldapAttribute": "uid",
                  "type": "simple",
                  "writability": "createOnly"
                },
                "context": {
                  "ldapAttribute": "fr-idm-syncqueue-context",
                  "type": "json"
                },
                "createDate": {
                  "ldapAttribute": "fr-idm-syncqueue-createdate",
                  "type": "simple"
                },
                "mapping": {
                  "ldapAttribute": "fr-idm-syncqueue-mapping",
                  "type": "simple"
                },
                "newObject": {
                  "ldapAttribute": "fr-idm-syncqueue-newobject",
                  "type": "json"
                },
                "nodeId": {
                  "ldapAttribute": "fr-idm-syncqueue-nodeid",
                  "type": "simple"
                },
                "objectRev": {
                  "ldapAttribute": "fr-idm-syncqueue-objectRev",
                  "type": "simple"
                },
                "oldObject": {
                  "ldapAttribute": "fr-idm-syncqueue-oldobject",
                  "type": "json"
                },
                "resourceCollection": {
                  "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                  "type": "simple"
                },
                "resourceId": {
                  "ldapAttribute": "fr-idm-syncqueue-resourceid",
                  "type": "simple"
                },
                "state": {
                  "ldapAttribute": "fr-idm-syncqueue-state",
                  "type": "simple"
                },
                "syncAction": {
                  "ldapAttribute": "fr-idm-syncqueue-syncaction",
                  "type": "simple"
                }
              }
            }
          },
          "genericMapping": {
            "cluster/*": {
              "dnTemplate": "ou=cluster,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-cluster-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
              "objectClasses": [
                "uidObject",
                "fr-idm-cluster-obj"
              ]
            },
            "config": {
              "dnTemplate": "ou=config,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "file": {
              "dnTemplate": "ou=file,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "import": {
              "dnTemplate": "ou=import,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "import/*": {
              "dnTemplate": "ou=import,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "internal/notification": {
              "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-notification-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
              "objectClasses": [
                "uidObject",
                "fr-idm-notification"
              ],
              "properties": {
                "target": {
                  "propertyName": "_notifications",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                }
              }
            },
            "internal/usermeta": {
              "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
              "objectClasses": [
                "uidObject",
                "fr-idm-generic-obj"
              ],
              "properties": {
                "target": {
                  "propertyName": "_meta",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                }
              }
            },
            "jsonstorage": {
              "dnTemplate": "ou=jsonstorage,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "managed/*": {
              "dnTemplate": "ou=managed,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "managed/assignment": {
              "dnTemplate": "ou=assignment,ou=managed,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-managed-assignment-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
              "objectClasses": [
                "uidObject",
                "fr-idm-managed-assignment"
              ],
              "properties": {
                "condition": {
                  "ldapAttribute": "fr-idm-assignment-condition",
                  "type": "simple"
                },
                "members": {
                  "isMultiValued": true,
                  "propertyName": "assignments",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                },
                "roles": {
                  "isMultiValued": true,
                  "propertyName": "assignments",
                  "resourcePath": "managed/role",
                  "type": "reverseReference"
                }
              }
            },
            "managed/organization": {
              "dnTemplate": "ou=organization,ou=managed,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-managed-organization-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
              "objectClasses": [
                "uidObject",
                "fr-idm-managed-organization"
              ],
              "properties": {
                "admins": {
                  "isMultiValued": true,
                  "propertyName": "adminOfOrg",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                },
                "children": {
                  "isMultiValued": true,
                  "propertyName": "parent",
                  "resourcePath": "managed/organization",
                  "type": "reverseReference"
                },
                "members": {
                  "isMultiValued": true,
                  "propertyName": "memberOfOrg",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                },
                "name": {
                  "ldapAttribute": "fr-idm-managed-organization-name",
                  "type": "simple"
                },
                "owners": {
                  "isMultiValued": true,
                  "propertyName": "ownerOfOrg",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                },
                "parent": {
                  "ldapAttribute": "fr-idm-managed-organization-parent",
                  "primaryKey": "uid",
                  "resourcePath": "managed/organization",
                  "type": "reference"
                }
              }
            },
            "managed/role": {
              "dnTemplate": "ou=role,ou=managed,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-managed-role-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
              "objectClasses": [
                "uidObject",
                "fr-idm-managed-role"
              ],
              "properties": {
                "assignments": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-role-assignments",
                  "primaryKey": "uid",
                  "resourcePath": "managed/assignment",
                  "type": "reference"
                },
                "members": {
                  "isMultiValued": true,
                  "propertyName": "roles",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                }
              }
            },
            "managed/user": {
              "dnTemplate": "ou=user,ou=managed,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-managed-user-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedUser",
              "objectClasses": [
                "uidObject",
                "fr-idm-managed-user"
              ],
              "properties": {
                "_meta": {
                  "isMultiValued": false,
                  "ldapAttribute": "fr-idm-managed-user-meta",
                  "primaryKey": "uid",
                  "resourcePath": "internal/usermeta",
                  "type": "reference"
                },
                "_notifications": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-user-notifications",
                  "primaryKey": "uid",
                  "resourcePath": "internal/notification",
                  "type": "reference"
                },
                "adminOfOrg": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-organization-admin",
                  "primaryKey": "uid",
                  "resourcePath": "managed/organization",
                  "type": "reference"
                },
                "assignments": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-assignment-member",
                  "primaryKey": "uid",
                  "resourcePath": "managed/assignment",
                  "type": "reference"
                },
                "authzRoles": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                  "primaryKey": "cn",
                  "resourcePath": "internal/role",
                  "type": "reference"
                },
                "manager": {
                  "isMultiValued": false,
                  "ldapAttribute": "fr-idm-managed-user-manager",
                  "primaryKey": "uid",
                  "resourcePath": "managed/user",
                  "type": "reference"
                },
                "memberOfOrg": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-organization-member",
                  "primaryKey": "uid",
                  "resourcePath": "managed/organization",
                  "type": "reference"
                },
                "ownerOfOrg": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-organization-owner",
                  "primaryKey": "uid",
                  "resourcePath": "managed/organization",
                  "type": "reference"
                },
                "passwordExpirationTime": {
                  "ldapAttribute": "pwdExpirationTime",
                  "type": "simple",
                  "writability": "readOnlyDiscardWrites"
                },
                "passwordLastChangedTime": {
                  "ldapAttribute": "pwdChangedTime",
                  "type": "simple",
                  "writability": "readOnlyDiscardWrites"
                },
                "reports": {
                  "isMultiValued": true,
                  "propertyName": "manager",
                  "resourcePath": "managed/user",
                  "type": "reverseReference"
                },
                "roles": {
                  "isMultiValued": true,
                  "ldapAttribute": "fr-idm-managed-user-roles",
                  "primaryKey": "uid",
                  "resourcePath": "managed/role",
                  "type": "reference"
                }
              }
            },
            "reconprogressstate": {
              "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "relationships": {
              "dnTemplate": "ou=relationships,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com",
              "jsonAttribute": "fr-idm-relationship-json",
              "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
              "objectClasses": [
                "uidObject",
                "fr-idm-relationship"
              ]
            },
            "scheduler": {
              "dnTemplate": "ou=scheduler,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "scheduler/*": {
              "dnTemplate": "ou=scheduler,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "ui/*": {
              "dnTemplate": "ou=ui,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            },
            "updates": {
              "dnTemplate": "ou=updates,dc=openidm,dc=opendj-frodo-dev,dc=classic,dc=com"
            }
          }
        },
        "rest2LdapOptions": {
          "mvccAttribute": "etag",
          "readOnUpdatePolicy": "controls",
          "returnNullForMissingProperties": true,
          "useMvcc": true,
          "usePermissiveModify": true,
          "useSubtreeDelete": false
        },
        "security": {
          "fileBasedTrustManagerFile": "&{idm.install.dir}/security/truststore",
          "fileBasedTrustManagerPasswordFile": "&{idm.install.dir}/security/storepass",
          "fileBasedTrustManagerType": "JKS",
          "trustManager": "file"
        }
      },
      "repo.init": {
        "_id": "repo.init",
        "insert": {
          "internal/role": [
            {
              "description": "Administrative access",
              "id": "openidm-admin",
              "name": "openidm-admin"
            },
            {
              "description": "Basic minimum user",
              "id": "openidm-authorized",
              "name": "openidm-authorized"
            },
            {
              "description": "Anonymous access",
              "id": "openidm-reg",
              "name": "openidm-reg"
            },
            {
              "description": "Authenticated via certificate",
              "id": "openidm-cert",
              "name": "openidm-cert"
            },
            {
              "description": "Allowed to reassign workflow tasks",
              "id": "openidm-tasks-manager",
              "name": "openidm-tasks-manager"
            },
            {
              "description": "Platform provisioning access",
              "id": "platform-provisioning",
              "name": "platform-provisioning"
            }
          ],
          "internal/user": [
            {
              "id": "openidm-admin",
              "password": "&{openidm.admin.password}"
            },
            {
              "id": "anonymous",
              "password": "anonymous"
            },
            {
              "id": "idm-provisioning"
            },
            {
              "id": "connector-server-client"
            }
          ]
        }
      },
      "router": {
        "_id": "router",
        "filters": [
          {
            "methods": [
              "create",
              "update"
            ],
            "onRequest": {
              "file": "policyFilter.js",
              "type": "text/javascript"
            },
            "pattern": "^(managed|internal)($|(/.+))"
          },
          {
            "methods": [
              "update"
            ],
            "onRequest": {
              "file": "policyFilter.js",
              "type": "text/javascript"
            },
            "pattern": "^config/managed$"
          },
          {
            "condition": {
              "source": "(context.caller.external === true) && (typeof context.privilege === 'undefined' || Object.keys(context.privilege.matchingPrivileges).length === 0)",
              "type": "text/javascript"
            },
            "onResponse": {
              "source": "require('relationshipFilter').filterResponse()",
              "type": "text/javascript"
            },
            "pattern": "^(managed|internal)($|(/.+))"
          }
        ]
      },
      "schedule/seantest": {
        "_id": "schedule/seantest",
        "concurrentExecution": false,
        "enabled": false,
        "endTime": null,
        "invokeContext": {
          "script": {
            "globals": {},
            "source": "//sean has changed this script. Let's see if it is still working. qqqqqqqqqqqqqqSchedule1\n",
            "type": "text/javascript"
          }
        },
        "invokeLogLevel": "info",
        "invokeService": "script",
        "misfirePolicy": "fireAndProceed",
        "persisted": true,
        "recoverable": false,
        "repeatCount": 0,
        "repeatInterval": 0,
        "schedule": null,
        "startTime": null,
        "type": "simple"
      },
      "schedule/taskscan_activate": {
        "_id": "schedule/taskscan_activate",
        "concurrentExecution": false,
        "enabled": false,
        "invokeContext": {
          "numberOfThreads": 5,
          "scan": {
            "_queryFilter": "((/activeDate le \"${Time.nowWithOffset}\") AND (!(/inactiveDate pr) or /inactiveDate ge \"${Time.nowWithOffset}\"))",
            "object": "managed/user",
            "recovery": {
              "timeout": "10m"
            },
            "taskState": {
              "completed": "/activateAccount/task-completed",
              "started": "/activateAccount/task-started"
            }
          },
          "task": {
            "script": {
              "globals": {},
              "source": "var patch = [{ \"operation\" : \"replace\", \"field\" : \"/accountStatus\", \"value\" : \"active\" }];\n\nlogger.debug(\"Performing Activate Account Task on {} ({})\", input.mail, objectID);\n\nopenidm.patch(objectID, null, patch); true;",
              "type": "text/javascript"
            }
          },
          "waitForCompletion": false
        },
        "invokeService": "taskscanner",
        "persisted": true,
        "repeatInterval": 86400000,
        "type": "simple"
      },
      "schedule/taskscan_expire": {
        "_id": "schedule/taskscan_expire",
        "concurrentExecution": false,
        "enabled": false,
        "invokeContext": {
          "numberOfThreads": 5,
          "scan": {
            "_queryFilter": "((/inactiveDate lt \"${Time.nowWithOffset}\") AND (!(/activeDate pr) or /activeDate le \"${Time.nowWithOffset}\"))",
            "object": "managed/user",
            "recovery": {
              "timeout": "10m"
            },
            "taskState": {
              "completed": "/expireAccount/task-completed",
              "started": "/expireAccount/task-started"
            }
          },
          "task": {
            "script": {
              "globals": {},
              "source": "var patch = [{ \"operation\" : \"replace\", \"field\" : \"/accountStatus\", \"value\" : \"inactive\" }];\n\nlogger.debug(\"Performing Expire Account Task on {} ({})\", input.mail, objectID);\n\nopenidm.patch(objectID, null, patch); true;",
              "type": "text/javascript"
            }
          },
          "waitForCompletion": false
        },
        "invokeService": "taskscanner",
        "persisted": true,
        "repeatInterval": 86400000,
        "type": "simple"
      },
      "scheduler": {
        "_id": "scheduler",
        "scheduler": {
          "executePersistentSchedules": {
            "$bool": "&{openidm.scheduler.execute.persistent.schedules}"
          }
        },
        "threadPool": {
          "threadCount": 10
        }
      },
      "script": {
        "ECMAScript": {
          "javascript.optimization.level": 9,
          "javascript.recompile.minimumInterval": 60000
        },
        "Groovy": {
          "#groovy.disabled.global.ast.transformations": "",
          "#groovy.errors.tolerance": 10,
          "#groovy.output.debug": false,
          "#groovy.output.verbose": false,
          "#groovy.script.base": "#any class extends groovy.lang.Script",
          "#groovy.script.extension": ".groovy",
          "#groovy.target.bytecode": "1.8",
          "#groovy.target.directory": "&{idm.data.dir}/classes",
          "#groovy.target.indy": true,
          "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
          "groovy.classpath": "&{idm.install.dir}/lib",
          "groovy.recompile": true,
          "groovy.recompile.minimumInterval": 60000,
          "groovy.source.encoding": "UTF-8"
        },
        "_id": "script",
        "properties": {},
        "sources": {
          "default": {
            "directory": "&{idm.install.dir}/bin/defaults/script"
          },
          "install": {
            "directory": "&{idm.install.dir}"
          },
          "project": {
            "directory": "&{idm.instance.dir}"
          },
          "project-script": {
            "directory": "&{idm.instance.dir}/script"
          }
        }
      },
      "secrets": {
        "_id": "secrets",
        "stores": [
          {
            "class": "org.forgerock.openidm.secrets.config.KeyStoreSecretStore",
            "config": {
              "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
              "mappings": [
                {
                  "aliases": [
                    "&{openidm.config.crypto.alias|openidm-sym-default}"
                  ],
                  "secretId": "idm.default",
                  "types": [
                    "ENCRYPT",
                    "DECRYPT"
                  ]
                },
                {
                  "aliases": [
                    "&{openidm.config.crypto.alias|openidm-sym-default}"
                  ],
                  "secretId": "idm.config.encryption",
                  "types": [
                    "ENCRYPT",
                    "DECRYPT"
                  ]
                },
                {
                  "aliases": [
                    "&{openidm.config.crypto.alias|openidm-sym-default}"
                  ],
                  "secretId": "idm.password.encryption",
                  "types": [
                    "ENCRYPT",
                    "DECRYPT"
                  ]
                },
                {
                  "aliases": [
                    "&{openidm.https.keystore.cert.alias|openidm-localhost}"
                  ],
                  "secretId": "idm.jwt.session.module.encryption",
                  "types": [
                    "ENCRYPT",
                    "DECRYPT"
                  ]
                },
                {
                  "aliases": [
                    "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}"
                  ],
                  "secretId": "idm.jwt.session.module.signing",
                  "types": [
                    "SIGN",
                    "VERIFY"
                  ]
                },
                {
                  "aliases": [
                    "selfservice"
                  ],
                  "secretId": "idm.selfservice.encryption",
                  "types": [
                    "ENCRYPT",
                    "DECRYPT"
                  ]
                },
                {
                  "aliases": [
                    "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}"
                  ],
                  "secretId": "idm.selfservice.signing",
                  "types": [
                    "SIGN",
                    "VERIFY"
                  ]
                },
                {
                  "aliases": [
                    "&{openidm.config.crypto.alias|openidm-sym-default}"
                  ],
                  "secretId": "idm.assignment.attribute.encryption",
                  "types": [
                    "ENCRYPT",
                    "DECRYPT"
                  ]
                }
              ],
              "providerName": "&{openidm.keystore.provider|SunJCE}",
              "storePassword": "&{openidm.keystore.password|changeit}",
              "storetype": "&{openidm.keystore.type|JCEKS}"
            },
            "name": "mainKeyStore"
          },
          {
            "class": "org.forgerock.openidm.secrets.config.KeyStoreSecretStore",
            "config": {
              "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
              "mappings": [],
              "providerName": "&{openidm.truststore.provider|SUN}",
              "storePassword": "&{openidm.truststore.password|changeit}",
              "storetype": "&{openidm.truststore.type|JKS}"
            },
            "name": "mainTrustStore"
          }
        ]
      },
      "selfservice.kba": {
        "_id": "selfservice.kba",
        "kbaPropertyName": "kbaInfo",
        "minimumAnswersToDefine": 2,
        "minimumAnswersToVerify": 1,
        "questions": {
          "1": {
            "en": "What's your favorite color?",
            "en_GB": "What is your favourite colour?",
            "fr": "Quelle est votre couleur préférée?"
          },
          "2": {
            "en": "Who was your first employer?"
          }
        }
      },
      "selfservice.propertymap": {
        "_id": "selfservice.propertymap",
        "properties": [
          {
            "source": "givenName",
            "target": "givenName"
          },
          {
            "source": "familyName",
            "target": "sn"
          },
          {
            "source": "email",
            "target": "mail"
          },
          {
            "condition": "/object/postalAddress  pr",
            "source": "postalAddress",
            "target": "postalAddress"
          },
          {
            "condition": "/object/addressLocality  pr",
            "source": "addressLocality",
            "target": "city"
          },
          {
            "condition": "/object/addressRegion  pr",
            "source": "addressRegion",
            "target": "stateProvince"
          },
          {
            "condition": "/object/postalCode  pr",
            "source": "postalCode",
            "target": "postalCode"
          },
          {
            "condition": "/object/country  pr",
            "source": "country",
            "target": "country"
          },
          {
            "condition": "/object/phone  pr",
            "source": "phone",
            "target": "telephoneNumber"
          },
          {
            "source": "username",
            "target": "userName"
          }
        ]
      },
      "selfservice.terms": {
        "_id": "selfservice.terms",
        "active": "0.0",
        "uiConfig": {
          "buttonText": "Accept",
          "displayName": "We've updated our terms",
          "purpose": "You must accept the updated terms in order to proceed."
        },
        "versions": [
          {
            "createDate": "2019-10-28T04:20:11.320Z",
            "termsTranslations": {
              "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
            },
            "version": "0.0"
          }
        ]
      },
      "servletfilter/cors": {
        "_id": "servletfilter/cors",
        "filterClass": "org.eclipse.jetty.ee10.servlets.CrossOriginFilter",
        "initParams": {
          "allowCredentials": true,
          "allowedHeaders": "accept,x-openidm-password,x-openidm-nosession,x-openidm-username,content-type,origin,x-requested-with",
          "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
          "allowedOrigins": "https://localhost:&{openidm.port.https}",
          "chainPreflight": false
        },
        "urlPatterns": [
          "/*"
        ]
      },
      "servletfilter/payload": {
        "_id": "servletfilter/payload",
        "filterClass": "org.forgerock.openidm.jetty.LargePayloadServletFilter",
        "initParams": {
          "maxRequestSizeInMegabytes": 5
        },
        "urlPatterns": [
          "&{openidm.servlet.alias}/*"
        ]
      },
      "servletfilter/upload": {
        "_id": "servletfilter/upload",
        "filterClass": "org.forgerock.openidm.jetty.LargePayloadServletFilter",
        "initParams": {
          "maxRequestSizeInMegabytes": 50
        },
        "urlPatterns": [
          "&{openidm.servlet.upload.alias}/*"
        ]
      },
      "ui.context/admin": {
        "_id": "ui.context/admin",
        "cacheEnabled": true,
        "defaultDir": "&{idm.install.dir}/ui/admin/default",
        "enabled": true,
        "extensionDir": "&{idm.install.dir}/ui/admin/extension",
        "responseHeaders": {
          "X-Frame-Options": "SAMEORIGIN"
        },
        "urlContextRoot": "/admin"
      },
      "ui.context/api": {
        "_id": "ui.context/api",
        "authEnabled": true,
        "cacheEnabled": false,
        "defaultDir": "&{idm.install.dir}/ui/api/default",
        "enabled": true,
        "extensionDir": "&{idm.install.dir}/ui/api/extension",
        "urlContextRoot": "/api"
      },
      "ui.context/enduser": {
        "_id": "ui.context/enduser",
        "cacheEnabled": true,
        "defaultDir": "&{idm.install.dir}/ui/enduser",
        "enabled": true,
        "responseHeaders": {
          "X-Frame-Options": "DENY"
        },
        "urlContextRoot": "/"
      },
      "ui.context/oauth": {
        "_id": "ui.context/oauth",
        "cacheEnabled": true,
        "defaultDir": "&{idm.install.dir}/ui/oauth/default",
        "enabled": true,
        "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
        "urlContextRoot": "/oauthReturn"
      },
      "ui/configuration": {
        "_id": "ui/configuration",
        "configuration": {
          "defaultNotificationType": "info",
          "forgotUsername": false,
          "lang": "en",
          "notificationTypes": {
            "error": {
              "iconPath": "images/notifications/error.png",
              "name": "common.notification.types.error"
            },
            "info": {
              "iconPath": "images/notifications/info.png",
              "name": "common.notification.types.info"
            },
            "warning": {
              "iconPath": "images/notifications/warning.png",
              "name": "common.notification.types.warning"
            }
          },
          "passwordReset": false,
          "passwordResetLink": "",
          "roles": {
            "internal/role/openidm-admin": "ui-admin",
            "internal/role/openidm-authorized": "ui-user"
          },
          "selfRegistration": false
        }
      },
      "ui/dashboard": {
        "_id": "ui/dashboard",
        "adminDashboards": [
          {
            "isDefault": true,
            "name": "Quick Start",
            "widgets": [
              {
                "cards": [
                  {
                    "href": "#connectors/add/",
                    "icon": "fa-database",
                    "name": "Add Connector"
                  },
                  {
                    "href": "#mapping/add/",
                    "icon": "fa-map-marker",
                    "name": "Create Mapping"
                  },
                  {
                    "href": "#resource/managed/role/list/",
                    "icon": "fa-check-square-o",
                    "name": "Manage Roles"
                  },
                  {
                    "href": "#managed/add/",
                    "icon": "fa-tablet",
                    "name": "Add Device"
                  },
                  {
                    "href": "#selfservice/userregistration/",
                    "icon": "fa-gear",
                    "name": "Configure Registration"
                  },
                  {
                    "href": "#selfservice/passwordreset/",
                    "icon": "fa-gear",
                    "name": "Configure Password Reset"
                  },
                  {
                    "href": "#resource/managed/user/list/",
                    "icon": "fa-user",
                    "name": "Manage Users"
                  },
                  {
                    "href": "#settings/",
                    "icon": "fa-user",
                    "name": "Configure System Preferences"
                  }
                ],
                "size": "large",
                "type": "quickStart"
              }
            ]
          },
          {
            "isDefault": false,
            "name": "System Monitoring",
            "widgets": [
              {
                "legendRange": {
                  "month": [
                    500,
                    2500,
                    5000
                  ],
                  "week": [
                    10,
                    30,
                    90,
                    270,
                    810
                  ],
                  "year": [
                    10000,
                    40000,
                    100000,
                    250000
                  ]
                },
                "maxRange": "#24423c",
                "minRange": "#b0d4cd",
                "size": "large",
                "type": "audit"
              },
              {
                "size": "large",
                "type": "clusterStatus"
              },
              {
                "size": "large",
                "type": "systemHealthFull"
              },
              {
                "barchart": "false",
                "size": "large",
                "type": "lastRecon"
              }
            ]
          },
          {
            "isDefault": false,
            "name": "Resource Report",
            "widgets": [
              {
                "selected": "activeUsers",
                "size": "x-small",
                "type": "counter"
              },
              {
                "selected": "rolesEnabled",
                "size": "x-small",
                "type": "counter"
              },
              {
                "selected": "activeConnectors",
                "size": "x-small",
                "type": "counter"
              },
              {
                "size": "large",
                "type": "resourceList"
              }
            ]
          },
          {
            "isDefault": false,
            "name": "Business Report",
            "widgets": [
              {
                "graphType": "fa-pie-chart",
                "providers": [
                  "Username/Password"
                ],
                "size": "x-small",
                "type": "signIns",
                "widgetTitle": "Sign-Ins"
              },
              {
                "graphType": "fa-bar-chart",
                "size": "x-small",
                "type": "passwordResets",
                "widgetTitle": "Password Resets"
              },
              {
                "graphType": "fa-line-chart",
                "providers": [
                  "Username/Password"
                ],
                "size": "x-small",
                "type": "newRegistrations",
                "widgetTitle": "New Registrations"
              },
              {
                "size": "x-small",
                "timezone": {
                  "hours": "07",
                  "minutes": "00",
                  "negative": true
                },
                "type": "socialLogin"
              },
              {
                "selected": "socialEnabled",
                "size": "x-small",
                "type": "counter"
              },
              {
                "selected": "manualRegistrations",
                "size": "x-small",
                "type": "counter"
              }
            ]
          },
          {
            "isDefault": false,
            "name": "seantestdashboard",
            "widgets": [
              {
                "size": "large",
                "type": "resourceList"
              }
            ]
          }
        ],
        "dashboard": {
          "widgets": [
            {
              "size": "large",
              "type": "Welcome"
            }
          ]
        }
      },
      "ui/profile": {
        "_id": "ui/profile",
        "tabs": [
          {
            "name": "personalInfoTab",
            "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab"
          },
          {
            "name": "signInAndSecurity",
            "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab"
          },
          {
            "name": "preference",
            "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab"
          },
          {
            "name": "trustedDevice",
            "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab"
          },
          {
            "name": "oauthApplication",
            "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab"
          },
          {
            "name": "privacyAndConsent",
            "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab"
          },
          {
            "name": "sharing",
            "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab"
          },
          {
            "name": "auditHistory",
            "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab"
          },
          {
            "name": "accountControls",
            "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab"
          }
        ]
      },
      "ui/themeconfig": {
        "_id": "ui/themeconfig",
        "icon": "favicon.ico",
        "path": "",
        "settings": {
          "footer": {
            "mailto": "info@pingidentity.com"
          },
          "loginLogo": {
            "alt": "Ping Identity",
            "height": "120px",
            "src": "images/login-logo-dark.png",
            "title": "Ping Identity",
            "width": "120px"
          },
          "logo": {
            "alt": "Ping Identity",
            "src": "images/logo-horizontal-white.png",
            "title": "Ping Identity"
          }
        },
        "stylesheets": [
          "css/bootstrap-3.4.1-custom.css",
          "css/structure.css",
          "css/theme.css"
        ]
      },
      "webserver": {
        "_id": "webserver",
        "gzip": {
          "enabled": true,
          "includedMethods": [
            "GET"
          ]
        },
        "maxThreads": {
          "$int": "&{openidm.webserver.max.threads|&{org.ops4j.pax.web.server.maxThreads|200}}"
        }
      },
      "webserver.listener/http": {
        "_id": "webserver.listener/http",
        "enabled": {
          "$bool": "&{openidm.http.enabled|true}"
        },
        "port": {
          "$int": "&{openidm.port.http|8080}"
        }
      },
      "webserver.listener/https": {
        "_id": "webserver.listener/https",
        "enabled": {
          "$bool": "&{openidm.https.enabled|true}"
        },
        "port": {
          "$int": "&{openidm.port.https|8443}"
        },
        "secure": true,
        "sslCertAlias": "&{openidm.https.keystore.cert.alias|openidm-localhost}"
      },
      "webserver.listener/mutualAuth": {
        "_id": "webserver.listener/mutualAuth",
        "enabled": {
          "$bool": "&{openidm.mutualauth.enabled|true}"
        },
        "mutualAuth": true,
        "port": {
          "$int": "&{openidm.port.mutualauth|8444}"
        },
        "secure": true,
        "sslCertAlias": "&{openidm.https.keystore.cert.alias|openidm-localhost}"
      }
    },
    "internalRole": {
      "openidm-admin": {
        "_id": "openidm-admin",
        "condition": null,
        "description": "Administrative access",
        "name": "openidm-admin",
        "privileges": [],
        "temporalConstraints": []
      },
      "openidm-authorized": {
        "_id": "openidm-authorized",
        "condition": null,
        "description": "Basic minimum user",
        "name": "openidm-authorized",
        "privileges": [],
        "temporalConstraints": []
      },
      "openidm-cert": {
        "_id": "openidm-cert",
        "condition": null,
        "description": "Authenticated via certificate",
        "name": "openidm-cert",
        "privileges": [],
        "temporalConstraints": []
      },
      "openidm-reg": {
        "_id": "openidm-reg",
        "condition": null,
        "description": "Anonymous access",
        "name": "openidm-reg",
        "privileges": [],
        "temporalConstraints": []
      },
      "openidm-tasks-manager": {
        "_id": "openidm-tasks-manager",
        "condition": null,
        "description": "Allowed to reassign workflow tasks",
        "name": "openidm-tasks-manager",
        "privileges": [],
        "temporalConstraints": []
      },
      "platform-provisioning": {
        "_id": "platform-provisioning",
        "condition": null,
        "description": "Platform provisioning access",
        "name": "platform-provisioning",
        "privileges": [],
        "temporalConstraints": []
      }
    },
    "mapping": {},
    "server": null,
    "sync": {
      "_id": "sync",
      "mappings": [
        {
          "_id": "sync/managedOrganization_managedRole",
          "consentRequired": false,
          "displayName": "managedOrganization_managedRole",
          "icon": null,
          "name": "managedOrganization_managedRole",
          "policies": [
            {
              "action": {
                "globals": {},
                "source": "//seantest",
                "type": "text/javascript"
              },
              "situation": "AMBIGUOUS"
            },
            {
              "action": {
                "globals": {},
                "source": "//seantest",
                "type": "text/javascript"
              },
              "condition": {
                "globals": {},
                "source": "//seantest",
                "type": "text/javascript"
              },
              "situation": "SOURCE_MISSING"
            },
            {
              "action": {
                "globals": {},
                "source": "//seantest",
                "type": "groovy"
              },
              "postAction": {
                "globals": {},
                "source": "//seantest",
                "type": "groovy"
              },
              "situation": "MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED"
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED"
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED"
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY"
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE"
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND"
            },
            {
              "action": "ASYNC",
              "situation": "ABSENT"
            }
          ],
          "properties": [],
          "source": "managed/organization",
          "syncAfter": [],
          "target": "managed/role"
        },
        {
          "_id": "sync/managedOrganization_managedSeantestmanagedobject",
          "consentRequired": false,
          "displayName": "managedOrganization_managedSeantestmanagedobject",
          "icon": null,
          "name": "managedOrganization_managedSeantestmanagedobject",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT"
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE"
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS"
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED"
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY"
            },
            {
              "action": "ASYNC",
              "situation": "MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED"
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED"
            }
          ],
          "properties": [],
          "source": "managed/organization",
          "syncAfter": [
            "managedOrganization_managedRole"
          ],
          "target": "managed/seantestmanagedobject"
        },
        {
          "_id": "sync/managedAssignment_managedUser",
          "consentRequired": false,
          "displayName": "managedAssignment_managedUser",
          "icon": null,
          "name": "managedAssignment_managedUser",
          "policies": [
            {
              "action": {
                "globals": {},
                "source": "//asdfasdf",
                "type": "groovy"
              },
              "situation": "AMBIGUOUS"
            },
            {
              "action": {
                "globals": {},
                "source": "//asdfasdfasdf",
                "type": "text/javascript"
              },
              "condition": {
                "globals": {},
                "source": "//asdfasdfasdf",
                "type": "groovy"
              },
              "postAction": {
                "globals": {},
                "source": "//asdfasdf",
                "type": "text/javascript"
              },
              "situation": "SOURCE_MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED"
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED"
            },
            {
              "action": {
                "globals": {},
                "source": "//asdfasdfasdf",
                "type": "text/javascript"
              },
              "situation": "UNASSIGNED"
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY"
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE"
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND"
            },
            {
              "action": "ASYNC",
              "situation": "ABSENT"
            }
          ],
          "properties": [],
          "source": "managed/assignment",
          "syncAfter": [
            "managedOrganization_managedRole",
            "managedOrganization_managedSeantestmanagedobject"
          ],
          "target": "managed/user"
        },
        {
          "_id": "sync/seantestmapping",
          "consentRequired": false,
          "displayName": "seantestmapping",
          "icon": null,
          "name": "seantestmapping",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT"
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE"
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS"
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED"
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY"
            },
            {
              "action": "ASYNC",
              "situation": "MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED"
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED"
            }
          ],
          "properties": [],
          "source": "managed/assignment",
          "syncAfter": [
            "managedOrganization_managedRole",
            "managedOrganization_managedSeantestmanagedobject",
            "managedAssignment_managedUser"
          ],
          "target": "managed/organization"
        },
        {
          "_id": "sync/managedSeantestmanagedobject_managedUser",
          "consentRequired": false,
          "displayName": "managedSeantestmanagedobject_managedUser",
          "icon": null,
          "name": "managedSeantestmanagedobject_managedUser",
          "policies": [
            {
              "action": "ASYNC",
              "situation": "ABSENT"
            },
            {
              "action": "ASYNC",
              "situation": "ALL_GONE"
            },
            {
              "action": "ASYNC",
              "situation": "AMBIGUOUS"
            },
            {
              "action": "ASYNC",
              "situation": "CONFIRMED"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND"
            },
            {
              "action": "ASYNC",
              "situation": "FOUND_ALREADY_LINKED"
            },
            {
              "action": "ASYNC",
              "situation": "LINK_ONLY"
            },
            {
              "action": "ASYNC",
              "situation": "MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "SOURCE_MISSING"
            },
            {
              "action": "ASYNC",
              "situation": "TARGET_IGNORED"
            },
            {
              "action": "ASYNC",
              "situation": "UNASSIGNED"
            },
            {
              "action": "ASYNC",
              "situation": "UNQUALIFIED"
            }
          ],
          "properties": [],
          "source": "managed/seantestmanagedobject",
          "syncAfter": [
            "managedOrganization_managedRole",
            "managedOrganization_managedSeantestmanagedobject",
            "managedAssignment_managedUser",
            "seantestmapping"
          ],
          "target": "managed/user"
        }
      ]
    }
  },
  "realm": {}
}
